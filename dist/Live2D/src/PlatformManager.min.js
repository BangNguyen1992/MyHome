"use strict";function PlatformManager(){}PlatformManager.prototype.loadBytes=function(e,t){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){switch(r.status){case 200:t(r.response);break;default:console.error("Failed to load ("+r.status+") : "+e)}},r.send(null)},PlatformManager.prototype.loadString=function(e){this.loadBytes(e,function(e){return e})},PlatformManager.prototype.loadLive2DModel=function(e,t){var r=null;this.loadBytes(e,function(e){r=Live2DModelWebGL.loadModel(e),t(r)})},PlatformManager.prototype.loadTexture=function(e,t,r,o){var a=new Image;a.src=r;a.onload=function(){var r=document.getElementById("glcanvas"),n=getWebGLContext(r,{premultipliedAlpha:!0}),l=n.createTexture();return l?(0==e.isPremultipliedAlpha()&&n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,1),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,l),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,a),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR_MIPMAP_NEAREST),n.generateMipmap(n.TEXTURE_2D),e.setTexture(t,l),l=null,void("function"==typeof o&&o())):(console.error("Failed to generate gl texture name."),-1)},a.onerror=function(){console.error("Failed to load image : "+r)}},PlatformManager.prototype.jsonParseFromBytes=function(e){var t,r=new Uint8Array(e,0,3);t=239==r[0]&&187==r[1]&&191==r[2]?String.fromCharCode.apply(null,new Uint8Array(e,3)):String.fromCharCode.apply(null,new Uint8Array(e));var o=JSON.parse(t);return o},PlatformManager.prototype.log=function(e){console.log(e)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpdmUyRC9zcmMvUGxhdGZvcm1NYW5hZ2VyLmpzIl0sIm5hbWVzIjpbIlBsYXRmb3JtTWFuYWdlciIsInByb3RvdHlwZSIsImxvYWRCeXRlcyIsInBhdGgiLCJjYWxsYmFjayIsInJlcXVlc3QiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJyZXNwb25zZVR5cGUiLCJvbmxvYWQiLCJzdGF0dXMiLCJyZXNwb25zZSIsImNvbnNvbGUiLCJlcnJvciIsInNlbmQiLCJsb2FkU3RyaW5nIiwidGhpcyIsImJ1ZiIsImxvYWRMaXZlMkRNb2RlbCIsIm1vZGVsIiwiTGl2ZTJETW9kZWxXZWJHTCIsImxvYWRNb2RlbCIsImxvYWRUZXh0dXJlIiwibm8iLCJsb2FkZWRJbWFnZSIsIkltYWdlIiwic3JjIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImdsIiwiZ2V0V2ViR0xDb250ZXh0IiwicHJlbXVsdGlwbGllZEFscGhhIiwidGV4dHVyZSIsImNyZWF0ZVRleHR1cmUiLCJpc1ByZW11bHRpcGxpZWRBbHBoYSIsInBpeGVsU3RvcmVpIiwiVU5QQUNLX1BSRU1VTFRJUExZX0FMUEhBX1dFQkdMIiwiVU5QQUNLX0ZMSVBfWV9XRUJHTCIsImFjdGl2ZVRleHR1cmUiLCJURVhUVVJFMCIsImJpbmRUZXh0dXJlIiwiVEVYVFVSRV8yRCIsInRleEltYWdlMkQiLCJSR0JBIiwiVU5TSUdORURfQllURSIsInRleFBhcmFtZXRlcmkiLCJURVhUVVJFX01BR19GSUxURVIiLCJMSU5FQVIiLCJURVhUVVJFX01JTl9GSUxURVIiLCJMSU5FQVJfTUlQTUFQX05FQVJFU1QiLCJnZW5lcmF0ZU1pcG1hcCIsInNldFRleHR1cmUiLCJvbmVycm9yIiwianNvblBhcnNlRnJvbUJ5dGVzIiwianNvblN0ciIsImJvbUNvZGUiLCJVaW50OEFycmF5IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiYXBwbHkiLCJqc29uT2JqIiwiSlNPTiIsInBhcnNlIiwibG9nIiwidHh0Il0sIm1hcHBpbmdzIjoiQUFBQSxZQWFBLFNBQVNBLG9CQVFUQSxnQkFBZ0JDLFVBQVVDLFVBQWtCLFNBQVNDLEVBQWdCQyxHQUVqRSxHQUFJQyxHQUFVLEdBQUlDLGVBQ2xCRCxHQUFRRSxLQUFLLE1BQU9KLEdBQU0sR0FDMUJFLEVBQVFHLGFBQWUsY0FDdkJILEVBQVFJLE9BQVMsV0FDYixPQUFPSixFQUFRSyxRQUNmLElBQUssS0FDRE4sRUFBU0MsRUFBUU0sU0FDakIsTUFDSixTQUNJQyxRQUFRQyxNQUFNLG1CQUFxQlIsRUFBUUssT0FBUyxPQUFTUCxLQUlyRUUsRUFBUVMsS0FBSyxPQU9qQmQsZ0JBQWdCQyxVQUFVYyxXQUFrQixTQUFTWixHQUdqRGEsS0FBS2QsVUFBVUMsRUFBTSxTQUFTYyxHQUMxQixNQUFPQSxNQVFmakIsZ0JBQWdCQyxVQUFVaUIsZ0JBQWtCLFNBQVNmLEVBQWdCQyxHQUVqRSxHQUFJZSxHQUFRLElBR1pILE1BQUtkLFVBQVVDLEVBQU0sU0FBU2MsR0FDMUJFLEVBQVFDLGlCQUFpQkMsVUFBVUosR0FDbkNiLEVBQVNlLE1BUWpCbkIsZ0JBQWdCQyxVQUFVcUIsWUFBa0IsU0FBU0gsRUFBdUJJLEVBQVdwQixFQUFnQkMsR0FHbkcsR0FBSW9CLEdBQWMsR0FBSUMsTUFDdEJELEdBQVlFLElBQU12QixDQUdsQnFCLEdBQVlmLE9BQVMsV0FHakIsR0FBSWtCLEdBQVNDLFNBQVNDLGVBQWUsWUFDakNDLEVBQUtDLGdCQUFnQkosR0FBU0ssb0JBQXFCLElBQ25EQyxFQUFVSCxFQUFHSSxlQUNqQixPQUFLRCxJQUU4QixHQUFoQ2QsRUFBTWdCLHdCQUVMTCxFQUFHTSxZQUFZTixFQUFHTywrQkFBZ0MsR0FFdERQLEVBQUdNLFlBQVlOLEVBQUdRLG9CQUFxQixHQUN2Q1IsRUFBR1MsY0FBY1QsRUFBR1UsVUFDcEJWLEVBQUdXLFlBQVlYLEVBQUdZLFdBQVlULEdBQzlCSCxFQUFHYSxXQUFXYixFQUFHWSxXQUFZLEVBQUdaLEVBQUdjLEtBQU1kLEVBQUdjLEtBQzlCZCxFQUFHZSxjQUFlckIsR0FDaENNLEVBQUdnQixjQUFjaEIsRUFBR1ksV0FBWVosRUFBR2lCLG1CQUFvQmpCLEVBQUdrQixRQUMxRGxCLEVBQUdnQixjQUFjaEIsRUFBR1ksV0FBWVosRUFBR21CLG1CQUFvQm5CLEVBQUdvQix1QkFDMURwQixFQUFHcUIsZUFBZXJCLEVBQUdZLFlBSXJCdkIsRUFBTWlDLFdBQVc3QixFQUFJVSxHQUdyQkEsRUFBVSxVQUVhLGtCQUFaN0IsSUFBd0JBLE9BdEJwQlEsUUFBUUMsTUFBTSw0Q0F5QmpDVyxFQUFZNkIsUUFBVSxXQUNsQnpDLFFBQVFDLE1BQU0sMEJBQTRCVixLQVNsREgsZ0JBQWdCQyxVQUFVcUQsbUJBQXFCLFNBQVNyQyxHQUVwRCxHQUFJc0MsR0FJQUMsRUFBVSxHQUFJQyxZQUFXeEMsRUFBSyxFQUFHLEVBRWpDc0MsR0FEYyxLQUFkQyxFQUFRLElBQTJCLEtBQWRBLEVBQVEsSUFBMkIsS0FBZEEsRUFBUSxHQUN4Q0UsT0FBT0MsYUFBYUMsTUFBTSxLQUFNLEdBQUlILFlBQVd4QyxFQUFLLElBRXBEeUMsT0FBT0MsYUFBYUMsTUFBTSxLQUFNLEdBQUlILFlBQVd4QyxHQUc3RCxJQUFJNEMsR0FBVUMsS0FBS0MsTUFBTVIsRUFFekIsT0FBT00sSUFPWDdELGdCQUFnQkMsVUFBVStELElBQWtCLFNBQVNDLEdBRWpEckQsUUFBUW9ELElBQUlDIiwiZmlsZSI6IkxpdmUyRC9zcmMvUGxhdGZvcm1NYW5hZ2VyLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKlxyXG4gKiAgWW91IGNhbiBtb2RpZnkgYW5kIHVzZSB0aGlzIHNvdXJjZSBmcmVlbHlcclxuICogIG9ubHkgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBhcHBsaWNhdGlvbiByZWxhdGVkIExpdmUyRC5cclxuICpcclxuICogIChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKi9cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICBjbGFzcyBQbGF0Zm9ybU1hbmFnZXIgICAgIGV4dGVuZCBJUGxhdGZvcm1NYW5hZ2VyXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmZ1bmN0aW9uIFBsYXRmb3JtTWFuYWdlcigpXHJcbntcclxuXHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIFBsYXRmb3JtTWFuYWdlciAjIGxvYWRCeXRlcygpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblBsYXRmb3JtTWFuYWdlci5wcm90b3R5cGUubG9hZEJ5dGVzICAgICAgID0gZnVuY3Rpb24ocGF0aC8qU3RyaW5nKi8sIGNhbGxiYWNrKVxyXG57XHJcbiAgICB2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgcmVxdWVzdC5vcGVuKFwiR0VUXCIsIHBhdGgsIHRydWUpO1xyXG4gICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSBcImFycmF5YnVmZmVyXCI7XHJcbiAgICByZXF1ZXN0Lm9ubG9hZCA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgc3dpdGNoKHJlcXVlc3Quc3RhdHVzKXtcclxuICAgICAgICBjYXNlIDIwMDpcclxuICAgICAgICAgICAgY2FsbGJhY2socmVxdWVzdC5yZXNwb25zZSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gbG9hZCAoXCIgKyByZXF1ZXN0LnN0YXR1cyArIFwiKSA6IFwiICsgcGF0aCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJlcXVlc3Quc2VuZChudWxsKTtcclxuICAgIC8vcmV0dXJuIHJlcXVlc3Q7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIFBsYXRmb3JtTWFuYWdlciAjIGxvYWRTdHJpbmcoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5QbGF0Zm9ybU1hbmFnZXIucHJvdG90eXBlLmxvYWRTdHJpbmcgICAgICA9IGZ1bmN0aW9uKHBhdGgvKlN0cmluZyovKVxyXG57XHJcbiAgICBcclxuICAgIHRoaXMubG9hZEJ5dGVzKHBhdGgsIGZ1bmN0aW9uKGJ1ZikgeyAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIGJ1ZjtcclxuICAgIH0pO1xyXG4gICAgXHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIFBsYXRmb3JtTWFuYWdlciAjIGxvYWRMaXZlMkRNb2RlbCgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblBsYXRmb3JtTWFuYWdlci5wcm90b3R5cGUubG9hZExpdmUyRE1vZGVsID0gZnVuY3Rpb24ocGF0aC8qU3RyaW5nKi8sIGNhbGxiYWNrKVxyXG57XHJcbiAgICB2YXIgbW9kZWwgPSBudWxsO1xyXG4gICAgXHJcbiAgICAvLyBsb2FkIG1vY1xyXG4gICAgdGhpcy5sb2FkQnl0ZXMocGF0aCwgZnVuY3Rpb24oYnVmKXtcclxuICAgICAgICBtb2RlbCA9IExpdmUyRE1vZGVsV2ViR0wubG9hZE1vZGVsKGJ1Zik7XHJcbiAgICAgICAgY2FsbGJhY2sobW9kZWwpO1xyXG4gICAgfSk7XHJcblxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBQbGF0Zm9ybU1hbmFnZXIgIyBsb2FkVGV4dHVyZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblBsYXRmb3JtTWFuYWdlci5wcm90b3R5cGUubG9hZFRleHR1cmUgICAgID0gZnVuY3Rpb24obW9kZWwvKkFMaXZlMkRNb2RlbCovLCBuby8qaW50Ki8sIHBhdGgvKlN0cmluZyovLCBjYWxsYmFjaylcclxueyBcclxuICAgIC8vIGxvYWQgdGV4dHVyZXNcclxuICAgIHZhciBsb2FkZWRJbWFnZSA9IG5ldyBJbWFnZSgpO1xyXG4gICAgbG9hZGVkSW1hZ2Uuc3JjID0gcGF0aDtcclxuICAgICAgICBcclxuICAgIHZhciB0aGlzUmVmID0gdGhpcztcclxuICAgIGxvYWRlZEltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgLy8gY3JlYXRlIHRleHR1cmVcclxuICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnbGNhbnZhc1wiKTtcclxuICAgICAgICB2YXIgZ2wgPSBnZXRXZWJHTENvbnRleHQoY2FudmFzLCB7cHJlbXVsdGlwbGllZEFscGhhIDogdHJ1ZX0pO1xyXG4gICAgICAgIHZhciB0ZXh0dXJlID0gZ2wuY3JlYXRlVGV4dHVyZSgpO1x0IC8vIOODhuOCr+OCueODgeODo+OCquODluOCuOOCp+OCr+ODiOOCkuS9nOaIkOOBmeOCi1xyXG4gICAgICAgIGlmICghdGV4dHVyZSl7IGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZ2VuZXJhdGUgZ2wgdGV4dHVyZSBuYW1lLlwiKTsgcmV0dXJuIC0xOyB9XHJcblxyXG4gICAgICAgIGlmKG1vZGVsLmlzUHJlbXVsdGlwbGllZEFscGhhKCkgPT0gZmFsc2Upe1xyXG4gICAgICAgICAgICAvLyDkuZfnrpfmuIjjgqLjg6vjg5XjgqHjg4bjgq/jgrnjg4Hjg6Pku6XlpJbjga7loLTlkIhcclxuICAgICAgICAgICAgZ2wucGl4ZWxTdG9yZWkoZ2wuVU5QQUNLX1BSRU1VTFRJUExZX0FMUEhBX1dFQkdMLCAxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZ2wucGl4ZWxTdG9yZWkoZ2wuVU5QQUNLX0ZMSVBfWV9XRUJHTCwgMSk7XHQvLyBpbWFnZeOCkuS4iuS4i+WPjei7olxyXG4gICAgICAgIGdsLmFjdGl2ZVRleHR1cmUoZ2wuVEVYVFVSRTApO1xyXG4gICAgICAgIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIHRleHR1cmUpO1xyXG4gICAgICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgXHJcbiAgICAgICAgICAgICAgICAgICAgICBnbC5VTlNJR05FRF9CWVRFLCBsb2FkZWRJbWFnZSk7XHJcbiAgICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01BR19GSUxURVIsIGdsLkxJTkVBUik7XHJcbiAgICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01JTl9GSUxURVIsIGdsLkxJTkVBUl9NSVBNQVBfTkVBUkVTVCk7XHJcbiAgICAgICAgZ2wuZ2VuZXJhdGVNaXBtYXAoZ2wuVEVYVFVSRV8yRCk7XHJcblxyXG5cclxuICAgICAgICAvLyDnlLvlg4/jgYvjgolXZWJHTOODhuOCr+OCueODgeODo+WMluOCkueUn+aIkOOBl+OAgeODouODh+ODq+OBq+eZu+mMslxyXG4gICAgICAgIG1vZGVsLnNldFRleHR1cmUobm8sIHRleHR1cmUpOy8vIOODouODh+ODq+OBq+ODhuOCr+OCueODgeODo+OCkuOCu+ODg+ODiFxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIOODhuOCr+OCueODgeODo+OCquODluOCuOOCp+OCr+ODiOOCkuino+aUvlxyXG4gICAgICAgIHRleHR1cmUgPSBudWxsO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT0gXCJmdW5jdGlvblwiKSBjYWxsYmFjaygpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgbG9hZGVkSW1hZ2Uub25lcnJvciA9IGZ1bmN0aW9uKCkgeyBcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGxvYWQgaW1hZ2UgOiBcIiArIHBhdGgpOyBcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIFBsYXRmb3JtTWFuYWdlciAjIHBhcnNlRnJvbUJ5dGVzKGJ1ZilcclxuLy8gICAgQXJyYXlCdWZmZXIg44GL44KJIEpTT04g44Gr5aSJ5o+b44GZ44KLXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblBsYXRmb3JtTWFuYWdlci5wcm90b3R5cGUuanNvblBhcnNlRnJvbUJ5dGVzID0gZnVuY3Rpb24oYnVmKXtcclxuICAgIFxyXG4gICAgdmFyIGpzb25TdHI7XHJcbiAgICBcclxuICAgIC8vIEJPTeOBruacieeEoeOBq+W/nOOBmOOBpuWHpueQhuOCkuWIhuOBkeOCi1xyXG4gICAgLy8gVVRGLTjjga5CT03jga8weEVGIDB4QkIgMHhCRu+8iDEw6YCy5pWw77yaMjM5IDE4NyAxOTHvvIlcclxuICAgIHZhciBib21Db2RlID0gbmV3IFVpbnQ4QXJyYXkoYnVmLCAwLCAzKTtcclxuICAgIGlmIChib21Db2RlWzBdID09IDIzOSAmJiBib21Db2RlWzFdID09IDE4NyAmJiBib21Db2RlWzJdID09IDE5MSkge1xyXG4gICAgICAgIGpzb25TdHIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIG5ldyBVaW50OEFycmF5KGJ1ZiwgMykpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBqc29uU3RyID0gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCBuZXcgVWludDhBcnJheShidWYpKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgdmFyIGpzb25PYmogPSBKU09OLnBhcnNlKGpzb25TdHIpO1xyXG4gICAgXHJcbiAgICByZXR1cm4ganNvbk9iajtcclxufTtcclxuXHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBQbGF0Zm9ybU1hbmFnZXIgIyBsb2coKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5QbGF0Zm9ybU1hbmFnZXIucHJvdG90eXBlLmxvZyAgICAgICAgICAgICA9IGZ1bmN0aW9uKHR4dC8qU3RyaW5nKi8pXHJcbntcclxuICAgIGNvbnNvbGUubG9nKHR4dCk7XHJcbn1cclxuXHJcbiJdfQ==
