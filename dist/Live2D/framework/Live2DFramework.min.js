"use strict";function L2DBaseModel(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new L2DMotionManager,this.expressionManager=new L2DMotionManager,this.motions={},this.expressions={},this.isTexLoaded=!1}function L2DExpressionMotion(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function L2DExpressionParam(){this.id="",this.type=-1,this.value=null}function L2DEyeBlink(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=EYE_STATE.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L="PARAM_EYE_L_OPEN",this.eyeID_R="PARAM_EYE_R_OPEN"}function L2DMatrix44(){this.tr=new Float32Array(16),this.identity()}function L2DModelMatrix(t,e){L2DMatrix44.prototype.constructor.call(this),this.width=t,this.height=e}function L2DMotionManager(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this["super"]=MotionQueueManager.prototype}function L2DPhysics(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function L2DPose(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function L2DPartsParam(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function L2DTargetPoint(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function L2DViewMatrix(){L2DMatrix44.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function Live2DFramework(){}var texCounter=0;L2DBaseModel.prototype.getModelMatrix=function(){return this.modelMatrix},L2DBaseModel.prototype.setAlpha=function(t){t>.999&&(t=1),t<.001&&(t=0),this.alpha=t},L2DBaseModel.prototype.getAlpha=function(){return this.alpha},L2DBaseModel.prototype.isInitialized=function(){return this.initialized},L2DBaseModel.prototype.setInitialized=function(t){this.initialized=t},L2DBaseModel.prototype.isUpdating=function(){return this.updating},L2DBaseModel.prototype.setUpdating=function(t){this.updating=t},L2DBaseModel.prototype.getLive2DModel=function(){return this.live2DModel},L2DBaseModel.prototype.setLipSync=function(t){this.lipSync=t},L2DBaseModel.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},L2DBaseModel.prototype.setAccel=function(t,e,i){this.accelX=t,this.accelY=e,this.accelZ=i},L2DBaseModel.prototype.setDrag=function(t,e){this.dragX=t,this.dragY=e},L2DBaseModel.prototype.getMainMotionManager=function(){return this.mainMotionManager},L2DBaseModel.prototype.getExpressionManager=function(){return this.expressionManager},L2DBaseModel.prototype.loadModelData=function(t,e){var i=Live2DFramework.getPlatformManager();this.debugMode&&i.log("Load model : "+t);var r=this;i.loadLive2DModel(t,function(t){r.live2DModel=t,r.live2DModel.saveParam();var i=Live2D.getError();return 0!=i?void console.error("Error : Failed to loadModelData()."):(r.modelMatrix=new L2DModelMatrix(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),void e(r.live2DModel))})},L2DBaseModel.prototype.loadTexture=function(t,e,i){texCounter++;var r=Live2DFramework.getPlatformManager();this.debugMode&&r.log("Load Texture : "+e);var o=this;r.loadTexture(this.live2DModel,t,e,function(){texCounter--,0==texCounter&&(o.isTexLoaded=!0),"function"==typeof i&&i()})},L2DBaseModel.prototype.loadMotion=function(t,e,i){var r=Live2DFramework.getPlatformManager();this.debugMode&&r.log("Load Motion : "+e);var o=null,a=this;r.loadBytes(e,function(e){o=Live2DMotion.loadMotion(e),null!=t&&(a.motions[t]=o),i(o)})},L2DBaseModel.prototype.loadExpression=function(t,e,i){var r=Live2DFramework.getPlatformManager();this.debugMode&&r.log("Load Expression : "+e);var o=this;r.loadBytes(e,function(e){null!=t&&(o.expressions[t]=L2DExpressionMotion.loadJson(e)),"function"==typeof i&&i()})},L2DBaseModel.prototype.loadPose=function(t,e){var i=Live2DFramework.getPlatformManager();this.debugMode&&i.log("Load Pose : "+t);var r=this;try{i.loadBytes(t,function(t){r.pose=L2DPose.load(t),"function"==typeof e&&e()})}catch(o){console.warn(o)}},L2DBaseModel.prototype.loadPhysics=function(t){var e=Live2DFramework.getPlatformManager();this.debugMode&&e.log("Load Physics : "+t);var i=this;try{e.loadBytes(t,function(t){i.physics=L2DPhysics.load(t)})}catch(r){console.warn(r)}},L2DBaseModel.prototype.hitTestSimple=function(t,e,i){var r=this.live2DModel.getDrawDataIndex(t);if(r<0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),a=this.live2DModel.getCanvasWidth(),s=0,n=this.live2DModel.getCanvasHeight(),h=0,l=0;l<o.length;l+=2){var p=o[l],c=o[l+1];p<a&&(a=p),p>s&&(s=p),c<n&&(n=c),c>h&&(h=c)}var u=this.modelMatrix.invertTransformX(e),M=this.modelMatrix.invertTransformY(i);return a<=u&&u<=s&&n<=M&&M<=h},L2DExpressionMotion.prototype=new AMotion,L2DExpressionMotion.EXPRESSION_DEFAULT="DEFAULT",L2DExpressionMotion.TYPE_SET=0,L2DExpressionMotion.TYPE_ADD=1,L2DExpressionMotion.TYPE_MULT=2,L2DExpressionMotion.loadJson=function(t){var e=new L2DExpressionMotion,i=Live2DFramework.getPlatformManager(),r=i.jsonParseFromBytes(t);if(e.setFadeIn(parseInt(r.fade_in)>0?parseInt(r.fade_in):1e3),e.setFadeOut(parseInt(r.fade_out)>0?parseInt(r.fade_out):1e3),null==r.params)return e;var o=r.params,a=o.length;e.paramList=[];for(var s=0;s<a;s++){var n=o[s],h=n.id.toString(),l=parseFloat(n.val),p=L2DExpressionMotion.TYPE_ADD,c=null!=n.calc?n.calc.toString():"add";if(p="add"===c?L2DExpressionMotion.TYPE_ADD:"mult"===c?L2DExpressionMotion.TYPE_MULT:"set"===c?L2DExpressionMotion.TYPE_SET:L2DExpressionMotion.TYPE_ADD,p==L2DExpressionMotion.TYPE_ADD){var u=null==n.def?0:parseFloat(n.def);l-=u}else if(p==L2DExpressionMotion.TYPE_MULT){var u=null==n.def?1:parseFloat(n.def);0==u&&(u=1),l/=u}var M=new L2DExpressionParam;M.id=h,M.type=p,M.value=l,e.paramList.push(M)}return e},L2DExpressionMotion.prototype.updateParamExe=function(t,e,i,r){for(var o=this.paramList.length-1;o>=0;--o){var a=this.paramList[o];a.type==L2DExpressionMotion.TYPE_ADD?t.addToParamFloat(a.id,a.value,i):a.type==L2DExpressionMotion.TYPE_MULT?t.multParamFloat(a.id,a.value,i):a.type==L2DExpressionMotion.TYPE_SET&&t.setParamFloat(a.id,a.value,i)}},L2DEyeBlink.prototype.calcNextBlink=function(){var t=UtSystem.getUserTimeMSec(),e=Math.random();return t+e*(2*this.blinkIntervalMsec-1)},L2DEyeBlink.prototype.setInterval=function(t){this.blinkIntervalMsec=t},L2DEyeBlink.prototype.setEyeMotion=function(t,e,i){this.closingMotionMsec=t,this.closedMotionMsec=e,this.openingMotionMsec=i},L2DEyeBlink.prototype.updateParam=function(t){var e,i=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case EYE_STATE.STATE_CLOSING:r=(i-this.stateStartTime)/this.closingMotionMsec,r>=1&&(r=1,this.eyeState=EYE_STATE.STATE_CLOSED,this.stateStartTime=i),e=1-r;break;case EYE_STATE.STATE_CLOSED:r=(i-this.stateStartTime)/this.closedMotionMsec,r>=1&&(this.eyeState=EYE_STATE.STATE_OPENING,this.stateStartTime=i),e=0;break;case EYE_STATE.STATE_OPENING:r=(i-this.stateStartTime)/this.openingMotionMsec,r>=1&&(r=1,this.eyeState=EYE_STATE.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),e=r;break;case EYE_STATE.STATE_INTERVAL:this.nextBlinkTime<i&&(this.eyeState=EYE_STATE.STATE_CLOSING,this.stateStartTime=i),e=1;break;case EYE_STATE.STATE_FIRST:default:this.eyeState=EYE_STATE.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink(),e=1}this.closeIfZero||(e=-e),t.setParamFloat(this.eyeID_L,e),t.setParamFloat(this.eyeID_R,e)};var EYE_STATE=function(){};EYE_STATE.STATE_FIRST="STATE_FIRST",EYE_STATE.STATE_INTERVAL="STATE_INTERVAL",EYE_STATE.STATE_CLOSING="STATE_CLOSING",EYE_STATE.STATE_CLOSED="STATE_CLOSED",EYE_STATE.STATE_OPENING="STATE_OPENING",L2DMatrix44.mul=function(t,e,i){var r,o,a,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],n=4;for(r=0;r<n;r++)for(o=0;o<n;o++)for(a=0;a<n;a++)s[r+4*o]+=t[r+4*a]*e[a+4*o];for(r=0;r<16;r++)i[r]=s[r]},L2DMatrix44.prototype.identity=function(){for(var t=0;t<16;t++)this.tr[t]=t%5==0?1:0},L2DMatrix44.prototype.getArray=function(){return this.tr},L2DMatrix44.prototype.getCopyMatrix=function(){return new Float32Array(this.tr)},L2DMatrix44.prototype.setMatrix=function(t){if(null!=this.tr&&this.tr.length==this.tr.length)for(var e=0;e<16;e++)this.tr[e]=t[e]},L2DMatrix44.prototype.getScaleX=function(){return this.tr[0]},L2DMatrix44.prototype.getScaleY=function(){return this.tr[5]},L2DMatrix44.prototype.transformX=function(t){return this.tr[0]*t+this.tr[12]},L2DMatrix44.prototype.transformY=function(t){return this.tr[5]*t+this.tr[13]},L2DMatrix44.prototype.invertTransformX=function(t){return(t-this.tr[12])/this.tr[0]},L2DMatrix44.prototype.invertTransformY=function(t){return(t-this.tr[13])/this.tr[5]},L2DMatrix44.prototype.multTranslate=function(t,e){var i=[1,0,0,0,0,1,0,0,0,0,1,0,t,e,0,1];L2DMatrix44.mul(i,this.tr,this.tr)},L2DMatrix44.prototype.translate=function(t,e){this.tr[12]=t,this.tr[13]=e},L2DMatrix44.prototype.translateX=function(t){this.tr[12]=t},L2DMatrix44.prototype.translateY=function(t){this.tr[13]=t},L2DMatrix44.prototype.multScale=function(t,e){var i=[t,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1];L2DMatrix44.mul(i,this.tr,this.tr)},L2DMatrix44.prototype.scale=function(t,e){this.tr[0]=t,this.tr[5]=e},L2DModelMatrix.prototype=new L2DMatrix44,L2DModelMatrix.prototype.setPosition=function(t,e){this.translate(t,e)},L2DModelMatrix.prototype.setCenterPosition=function(t,e){var i=this.width*this.getScaleX(),r=this.height*this.getScaleY();this.translate(t-i/2,e-r/2)},L2DModelMatrix.prototype.top=function(t){this.setY(t)},L2DModelMatrix.prototype.bottom=function(t){var e=this.height*this.getScaleY();this.translateY(t-e)},L2DModelMatrix.prototype.left=function(t){this.setX(t)},L2DModelMatrix.prototype.right=function(t){var e=this.width*this.getScaleX();this.translateX(t-e)},L2DModelMatrix.prototype.centerX=function(t){var e=this.width*this.getScaleX();this.translateX(t-e/2)},L2DModelMatrix.prototype.centerY=function(t){var e=this.height*this.getScaleY();this.translateY(t-e/2)},L2DModelMatrix.prototype.setX=function(t){this.translateX(t)},L2DModelMatrix.prototype.setY=function(t){this.translateY(t)},L2DModelMatrix.prototype.setHeight=function(t){var e=t/this.height,i=-e;this.scale(e,i)},L2DModelMatrix.prototype.setWidth=function(t){var e=t/this.width,i=-e;this.scale(e,i)},L2DMotionManager.prototype=new MotionQueueManager,L2DMotionManager.prototype.getCurrentPriority=function(){return this.currentPriority},L2DMotionManager.prototype.getReservePriority=function(){return this.reservePriority},L2DMotionManager.prototype.reserveMotion=function(t){return!(this.reservePriority>=t)&&(!(this.currentPriority>=t)&&(this.reservePriority=t,!0))},L2DMotionManager.prototype.setReservePriority=function(t){this.reservePriority=t},L2DMotionManager.prototype.updateParam=function(t){var e=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&&(this.currentPriority=0),e},L2DMotionManager.prototype.startMotionPrio=function(t,e){return e==this.reservePriority&&(this.reservePriority=0),this.currentPriority=e,this.startMotion(t,!1)},L2DPhysics.load=function(t){for(var e=new L2DPhysics,i=Live2DFramework.getPlatformManager(),r=i.jsonParseFromBytes(t),o=r.physics_hair,a=o.length,s=0;s<a;s++){var n=o[s],h=new PhysicsHair,l=n.setup,p=parseFloat(l.length),c=parseFloat(l.regist),u=parseFloat(l.mass);h.setup(p,c,u);for(var M=n.src,f=M.length,L=0;L<f;L++){var y=M[L],D=y.id,d=PhysicsHair.Src.SRC_TO_X,g=y.ptype;"x"===g?d=PhysicsHair.Src.SRC_TO_X:"y"===g?d=PhysicsHair.Src.SRC_TO_Y:"angle"===g?d=PhysicsHair.Src.SRC_TO_G_ANGLE:UtDebug.error("live2d","Invalid parameter:PhysicsHair.Src");var T=parseFloat(y.scale),m=parseFloat(y.weight);h.addSrcParam(d,D,T,m)}for(var x=n.targets,E=x.length,L=0;L<E;L++){var v=x[L],D=v.id,d=PhysicsHair.Target.TARGET_FROM_ANGLE,g=v.ptype;"angle"===g?d=PhysicsHair.Target.TARGET_FROM_ANGLE:"angle_v"===g?d=PhysicsHair.Target.TARGET_FROM_ANGLE_V:UtDebug.error("live2d","Invalid parameter:PhysicsHair.Target");var T=parseFloat(v.scale),m=parseFloat(v.weight);h.addTargetParam(d,D,T,m)}e.physicsList.push(h)}return e},L2DPhysics.prototype.updateParam=function(t){for(var e=UtSystem.getUserTimeMSec()-this.startTimeMSec,i=0;i<this.physicsList.length;i++)this.physicsList[i].update(t,e)},L2DPose.load=function(t){for(var e=new L2DPose,i=Live2DFramework.getPlatformManager(),r=i.jsonParseFromBytes(t),o=r.parts_visible,a=o.length,s=0;s<a;s++){for(var n=o[s],h=n.group,l=h.length,p=new Array,c=0;c<l;c++){var u=h[c],M=new L2DPartsParam(u.id);if(p[c]=M,null!=u.link){var f=u.link,L=f.length;M.link=new Array;for(var y=0;y<L;y++){var D=new L2DPartsParam(f[y]);M.link.push(D)}}}e.partsGroups.push(p)}return e},L2DPose.prototype.updateParam=function(t){if(null!=t){t!=this.lastModel&&this.initParam(t),this.lastModel=t;var e=UtSystem.getUserTimeMSec(),i=0==this.lastTime?0:(e-this.lastTime)/1e3;this.lastTime=e,i<0&&(i=0);for(var r=0;r<this.partsGroups.length;r++)this.normalizePartsOpacityGroup(t,this.partsGroups[r],i),this.copyOpacityOtherParts(t,this.partsGroups[r])}},L2DPose.prototype.initParam=function(t){if(null!=t)for(var e=0;e<this.partsGroups.length;e++)for(var i=this.partsGroups[e],r=0;r<i.length;r++){i[r].initIndex(t);var o=i[r].partsIndex,a=i[r].paramIndex;if(!(o<0)){var s=0!=t.getParamFloat(a);if(t.setPartsOpacity(o,s?1:0),t.setParamFloat(a,s?1:0),null!=i[r].link)for(var n=0;n<i[r].link.length;n++)i[r].link[n].initIndex(t)}}},L2DPose.prototype.normalizePartsOpacityGroup=function(t,e,i){for(var r=-1,o=1,a=.5,s=.5,n=.15,h=0;h<e.length;h++){var l=e[h].partsIndex,p=e[h].paramIndex;if(!(l<0)&&0!=t.getParamFloat(p)){if(r>=0)break;r=h,o=t.getPartsOpacity(l),o+=i/a,o>1&&(o=1)}}r<0&&(r=0,o=1);for(var h=0;h<e.length;h++){var l=e[h].partsIndex;if(!(l<0))if(r==h)t.setPartsOpacity(l,o);else{var c,u=t.getPartsOpacity(l);c=o<s?o*(s-1)/s+1:(1-o)*s/(1-s);var M=(1-c)*(1-o);M>n&&(c=1-n/(1-o)),u>c&&(u=c),t.setPartsOpacity(l,u)}}},L2DPose.prototype.copyOpacityOtherParts=function(t,e){for(var i=0;i<e.length;i++){var r=e[i];if(null!=r.link&&!(r.partsIndex<0))for(var o=t.getPartsOpacity(r.partsIndex),a=0;a<r.link.length;a++){var s=r.link[a];s.partsIndex<0||t.setPartsOpacity(s.partsIndex,o)}}},L2DPartsParam.prototype.initIndex=function(t){this.paramIndex=t.getParamIndex("VISIBLE:"+this.id),this.partsIndex=t.getPartsDataIndex(PartsDataID.getID(this.id)),t.setParamFloat(this.paramIndex,1)},L2DTargetPoint.FRAME_RATE=30,L2DTargetPoint.prototype.setPoint=function(t,e){this.faceTargetX=t,this.faceTargetY=e},L2DTargetPoint.prototype.getX=function(){return this.faceX},L2DTargetPoint.prototype.getY=function(){return this.faceY},L2DTargetPoint.prototype.update=function(){var t=.15,e=40/7.5,i=e/L2DTargetPoint.FRAME_RATE;if(0==this.lastTimeSec)return void(this.lastTimeSec=UtSystem.getUserTimeMSec());var r=UtSystem.getUserTimeMSec(),o=(r-this.lastTimeSec)*L2DTargetPoint.FRAME_RATE/1e3;this.lastTimeSec=r;var a=t*L2DTargetPoint.FRAME_RATE,s=o*i/a,n=this.faceTargetX-this.faceX,h=this.faceTargetY-this.faceY;if(!(Math.abs(n)<=this.EPSILON&&Math.abs(h)<=this.EPSILON)){var l=Math.sqrt(n*n+h*h),p=i*n/l,c=i*h/l,u=p-this.faceVX,M=c-this.faceVY,f=Math.sqrt(u*u+M*M);(f<-s||f>s)&&(u*=s/f,M*=s/f,f=s),this.faceVX+=u,this.faceVY+=M;var L=.5*(Math.sqrt(s*s+16*s*l-8*s*l)-s),y=Math.sqrt(this.faceVX*this.faceVX+this.faceVY*this.faceVY);y>L&&(this.faceVX*=L/y,this.faceVY*=L/y),this.faceX+=this.faceVX,this.faceY+=this.faceVY}},L2DViewMatrix.prototype=new L2DMatrix44,L2DViewMatrix.prototype.getMaxScale=function(){return this.max},L2DViewMatrix.prototype.getMinScale=function(){return this.min},L2DViewMatrix.prototype.setMaxScale=function(t){this.max=t},L2DViewMatrix.prototype.setMinScale=function(t){this.min=t},L2DViewMatrix.prototype.isMaxScale=function(){return this.getScaleX()==this.max},L2DViewMatrix.prototype.isMinScale=function(){return this.getScaleX()==this.min},L2DViewMatrix.prototype.adjustTranslate=function(t,e){this.tr[0]*this.maxLeft+(this.tr[12]+t)>this.screenLeft&&(t=this.screenLeft-this.tr[0]*this.maxLeft-this.tr[12]),this.tr[0]*this.maxRight+(this.tr[12]+t)<this.screenRight&&(t=this.screenRight-this.tr[0]*this.maxRight-this.tr[12]),this.tr[5]*this.maxTop+(this.tr[13]+e)<this.screenTop&&(e=this.screenTop-this.tr[5]*this.maxTop-this.tr[13]),this.tr[5]*this.maxBottom+(this.tr[13]+e)>this.screenBottom&&(e=this.screenBottom-this.tr[5]*this.maxBottom-this.tr[13]);var i=[1,0,0,0,0,1,0,0,0,0,1,0,t,e,0,1];L2DMatrix44.mul(i,this.tr,this.tr)},L2DViewMatrix.prototype.adjustScale=function(t,e,i){var r=i*this.tr[0];r<this.min?this.tr[0]>0&&(i=this.min/this.tr[0]):r>this.max&&this.tr[0]>0&&(i=this.max/this.tr[0]);var o=[1,0,0,0,0,1,0,0,0,0,1,0,t,e,0,1],a=[i,0,0,0,0,i,0,0,0,0,1,0,0,0,0,1],s=[1,0,0,0,0,1,0,0,0,0,1,0,-t,-e,0,1];L2DMatrix44.mul(s,this.tr,this.tr),L2DMatrix44.mul(a,this.tr,this.tr),L2DMatrix44.mul(o,this.tr,this.tr)},L2DViewMatrix.prototype.setScreenRect=function(t,e,i,r){this.screenLeft=t,this.screenRight=e,this.screenTop=r,this.screenBottom=i},L2DViewMatrix.prototype.setMaxScreenRect=function(t,e,i,r){this.maxLeft=t,this.maxRight=e,this.maxTop=r,this.maxBottom=i},L2DViewMatrix.prototype.getScreenLeft=function(){return this.screenLeft},L2DViewMatrix.prototype.getScreenRight=function(){return this.screenRight},L2DViewMatrix.prototype.getScreenBottom=function(){return this.screenBottom},L2DViewMatrix.prototype.getScreenTop=function(){return this.screenTop},L2DViewMatrix.prototype.getMaxLeft=function(){return this.maxLeft},L2DViewMatrix.prototype.getMaxRight=function(){return this.maxRight},L2DViewMatrix.prototype.getMaxBottom=function(){return this.maxBottom},L2DViewMatrix.prototype.getMaxTop=function(){return this.maxTop},Live2DFramework.platformManager=null,Live2DFramework.getPlatformManager=function(){return Live2DFramework.platformManager},Live2DFramework.setPlatformManager=function(t){Live2DFramework.platformManager=t};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpdmUyRC9mcmFtZXdvcmsvTGl2ZTJERnJhbWV3b3JrLmpzIl0sIm5hbWVzIjpbIkwyREJhc2VNb2RlbCIsInRoaXMiLCJsaXZlMkRNb2RlbCIsIm1vZGVsTWF0cml4IiwiZXllQmxpbmsiLCJwaHlzaWNzIiwicG9zZSIsImRlYnVnTW9kZSIsImluaXRpYWxpemVkIiwidXBkYXRpbmciLCJhbHBoYSIsImFjY0FscGhhIiwibGlwU3luYyIsImxpcFN5bmNWYWx1ZSIsImFjY2VsWCIsImFjY2VsWSIsImFjY2VsWiIsImRyYWdYIiwiZHJhZ1kiLCJzdGFydFRpbWVNU2VjIiwibWFpbk1vdGlvbk1hbmFnZXIiLCJMMkRNb3Rpb25NYW5hZ2VyIiwiZXhwcmVzc2lvbk1hbmFnZXIiLCJtb3Rpb25zIiwiZXhwcmVzc2lvbnMiLCJpc1RleExvYWRlZCIsIkwyREV4cHJlc3Npb25Nb3Rpb24iLCJBTW90aW9uIiwicHJvdG90eXBlIiwiY29uc3RydWN0b3IiLCJjYWxsIiwicGFyYW1MaXN0IiwiQXJyYXkiLCJMMkRFeHByZXNzaW9uUGFyYW0iLCJpZCIsInR5cGUiLCJ2YWx1ZSIsIkwyREV5ZUJsaW5rIiwibmV4dEJsaW5rVGltZSIsInN0YXRlU3RhcnRUaW1lIiwiYmxpbmtJbnRlcnZhbE1zZWMiLCJleWVTdGF0ZSIsIkVZRV9TVEFURSIsIlNUQVRFX0ZJUlNUIiwiY2xvc2luZ01vdGlvbk1zZWMiLCJjbG9zZWRNb3Rpb25Nc2VjIiwib3BlbmluZ01vdGlvbk1zZWMiLCJjbG9zZUlmWmVybyIsImV5ZUlEX0wiLCJleWVJRF9SIiwiTDJETWF0cml4NDQiLCJ0ciIsIkZsb2F0MzJBcnJheSIsImlkZW50aXR5IiwiTDJETW9kZWxNYXRyaXgiLCJ3IiwiaCIsIndpZHRoIiwiaGVpZ2h0IiwiTW90aW9uUXVldWVNYW5hZ2VyIiwiY3VycmVudFByaW9yaXR5IiwicmVzZXJ2ZVByaW9yaXR5IiwiTDJEUGh5c2ljcyIsInBoeXNpY3NMaXN0IiwiVXRTeXN0ZW0iLCJnZXRVc2VyVGltZU1TZWMiLCJMMkRQb3NlIiwibGFzdFRpbWUiLCJsYXN0TW9kZWwiLCJwYXJ0c0dyb3VwcyIsIkwyRFBhcnRzUGFyYW0iLCJwYXJhbUluZGV4IiwicGFydHNJbmRleCIsImxpbmsiLCJMMkRUYXJnZXRQb2ludCIsIkVQU0lMT04iLCJmYWNlVGFyZ2V0WCIsImZhY2VUYXJnZXRZIiwiZmFjZVgiLCJmYWNlWSIsImZhY2VWWCIsImZhY2VWWSIsImxhc3RUaW1lU2VjIiwiTDJEVmlld01hdHJpeCIsInNjcmVlbkxlZnQiLCJzY3JlZW5SaWdodCIsInNjcmVlblRvcCIsInNjcmVlbkJvdHRvbSIsIm1heExlZnQiLCJtYXhSaWdodCIsIm1heFRvcCIsIm1heEJvdHRvbSIsIm1heCIsIk51bWJlciIsIk1BWF9WQUxVRSIsIm1pbiIsIkxpdmUyREZyYW1ld29yayIsInRleENvdW50ZXIiLCJnZXRNb2RlbE1hdHJpeCIsInNldEFscGhhIiwiYSIsImdldEFscGhhIiwiaXNJbml0aWFsaXplZCIsInNldEluaXRpYWxpemVkIiwidiIsImlzVXBkYXRpbmciLCJzZXRVcGRhdGluZyIsImdldExpdmUyRE1vZGVsIiwic2V0TGlwU3luYyIsInNldExpcFN5bmNWYWx1ZSIsInNldEFjY2VsIiwieCIsInkiLCJ6Iiwic2V0RHJhZyIsImdldE1haW5Nb3Rpb25NYW5hZ2VyIiwiZ2V0RXhwcmVzc2lvbk1hbmFnZXIiLCJsb2FkTW9kZWxEYXRhIiwicGF0aCIsImNhbGxiYWNrIiwicG0iLCJnZXRQbGF0Zm9ybU1hbmFnZXIiLCJsb2ciLCJ0aGlzUmVmIiwibG9hZExpdmUyRE1vZGVsIiwibDJkTW9kZWwiLCJzYXZlUGFyYW0iLCJfZXJyIiwiTGl2ZTJEIiwiZ2V0RXJyb3IiLCJjb25zb2xlIiwiZXJyb3IiLCJnZXRDYW52YXNXaWR0aCIsImdldENhbnZhc0hlaWdodCIsInNldFdpZHRoIiwic2V0Q2VudGVyUG9zaXRpb24iLCJsb2FkVGV4dHVyZSIsIm5vIiwibG9hZE1vdGlvbiIsIm5hbWUiLCJtb3Rpb24iLCJsb2FkQnl0ZXMiLCJidWYiLCJMaXZlMkRNb3Rpb24iLCJsb2FkRXhwcmVzc2lvbiIsImxvYWRKc29uIiwibG9hZFBvc2UiLCJsb2FkIiwiZSIsIndhcm4iLCJsb2FkUGh5c2ljcyIsImhpdFRlc3RTaW1wbGUiLCJkcmF3SUQiLCJ0ZXN0WCIsInRlc3RZIiwiZHJhd0luZGV4IiwiZ2V0RHJhd0RhdGFJbmRleCIsInBvaW50cyIsImdldFRyYW5zZm9ybWVkUG9pbnRzIiwibGVmdCIsInJpZ2h0IiwidG9wIiwiYm90dG9tIiwiaiIsImxlbmd0aCIsInR4IiwiaW52ZXJ0VHJhbnNmb3JtWCIsInR5IiwiaW52ZXJ0VHJhbnNmb3JtWSIsIkVYUFJFU1NJT05fREVGQVVMVCIsIlRZUEVfU0VUIiwiVFlQRV9BREQiLCJUWVBFX01VTFQiLCJyZXQiLCJqc29uIiwianNvblBhcnNlRnJvbUJ5dGVzIiwic2V0RmFkZUluIiwicGFyc2VJbnQiLCJmYWRlX2luIiwic2V0RmFkZU91dCIsImZhZGVfb3V0IiwicGFyYW1zIiwicGFyYW1OdW0iLCJpIiwicGFyYW0iLCJwYXJhbUlEIiwidG9TdHJpbmciLCJwYXJzZUZsb2F0IiwidmFsIiwiY2FsY1R5cGVJbnQiLCJjYWxjIiwiZGVmYXVsdFZhbHVlIiwiZGVmIiwiaXRlbSIsInB1c2giLCJ1cGRhdGVQYXJhbUV4ZSIsIm1vZGVsIiwidGltZU1TZWMiLCJ3ZWlnaHQiLCJtb3Rpb25RdWV1ZUVudCIsImFkZFRvUGFyYW1GbG9hdCIsIm11bHRQYXJhbUZsb2F0Iiwic2V0UGFyYW1GbG9hdCIsImNhbGNOZXh0QmxpbmsiLCJ0aW1lIiwiciIsIk1hdGgiLCJyYW5kb20iLCJzZXRJbnRlcnZhbCIsInNldEV5ZU1vdGlvbiIsInVwZGF0ZVBhcmFtIiwiZXllUGFyYW1WYWx1ZSIsInQiLCJTVEFURV9DTE9TSU5HIiwiU1RBVEVfQ0xPU0VEIiwiU1RBVEVfT1BFTklORyIsIlNUQVRFX0lOVEVSVkFMIiwibXVsIiwiYiIsImRzdCIsImsiLCJjIiwibiIsImdldEFycmF5IiwiZ2V0Q29weU1hdHJpeCIsInNldE1hdHJpeCIsImdldFNjYWxlWCIsImdldFNjYWxlWSIsInRyYW5zZm9ybVgiLCJzcmMiLCJ0cmFuc2Zvcm1ZIiwibXVsdFRyYW5zbGF0ZSIsInNoaWZ0WCIsInNoaWZ0WSIsInRyMSIsInRyYW5zbGF0ZSIsInRyYW5zbGF0ZVgiLCJ0cmFuc2xhdGVZIiwibXVsdFNjYWxlIiwic2NhbGVYIiwic2NhbGVZIiwic2NhbGUiLCJzZXRQb3NpdGlvbiIsInNldFkiLCJzZXRYIiwiY2VudGVyWCIsImNlbnRlclkiLCJzZXRIZWlnaHQiLCJnZXRDdXJyZW50UHJpb3JpdHkiLCJnZXRSZXNlcnZlUHJpb3JpdHkiLCJyZXNlcnZlTW90aW9uIiwicHJpb3JpdHkiLCJzZXRSZXNlcnZlUHJpb3JpdHkiLCJ1cGRhdGVkIiwiaXNGaW5pc2hlZCIsInN0YXJ0TW90aW9uUHJpbyIsInN0YXJ0TW90aW9uIiwicGh5c2ljc19oYWlyIiwiUGh5c2ljc0hhaXIiLCJzZXR1cCIsInJlc2lzdCIsInJlZ2lzdCIsIm1hc3MiLCJzcmNMaXN0Iiwic3JjTnVtIiwiU3JjIiwiU1JDX1RPX1giLCJ0eXBlU3RyIiwicHR5cGUiLCJTUkNfVE9fWSIsIlNSQ19UT19HX0FOR0xFIiwiVXREZWJ1ZyIsImFkZFNyY1BhcmFtIiwidGFyZ2V0TGlzdCIsInRhcmdldHMiLCJ0YXJnZXROdW0iLCJ0YXJnZXQiLCJUYXJnZXQiLCJUQVJHRVRfRlJPTV9BTkdMRSIsIlRBUkdFVF9GUk9NX0FOR0xFX1YiLCJhZGRUYXJnZXRQYXJhbSIsInVwZGF0ZSIsInBvc2VMaXN0SW5mbyIsInBhcnRzX3Zpc2libGUiLCJwb3NlTnVtIiwiaV9wb3NlIiwicG9zZUluZm8iLCJpZExpc3RJbmZvIiwiZ3JvdXAiLCJpZE51bSIsInBhcnRzR3JvdXAiLCJpX2dyb3VwIiwicGFydHNJbmZvIiwicGFydHMiLCJsaW5rTGlzdEluZm8iLCJsaW5rTnVtIiwiaV9saW5rIiwibGlua1BhcnRzIiwiaW5pdFBhcmFtIiwiY3VyVGltZSIsImRlbHRhVGltZVNlYyIsIm5vcm1hbGl6ZVBhcnRzT3BhY2l0eUdyb3VwIiwiY29weU9wYWNpdHlPdGhlclBhcnRzIiwiaW5pdEluZGV4IiwiZ2V0UGFyYW1GbG9hdCIsInNldFBhcnRzT3BhY2l0eSIsInZpc2libGVQYXJ0cyIsInZpc2libGVPcGFjaXR5IiwiQ0xFQVJfVElNRV9TRUMiLCJwaGkiLCJtYXhCYWNrT3BhY2l0eSIsImdldFBhcnRzT3BhY2l0eSIsImExIiwib3BhY2l0eSIsImJhY2tPcCIsInBhcnRzUGFyYW0iLCJnZXRQYXJhbUluZGV4IiwiZ2V0UGFydHNEYXRhSW5kZXgiLCJQYXJ0c0RhdGFJRCIsImdldElEIiwiRlJBTUVfUkFURSIsInNldFBvaW50IiwiZ2V0WCIsImdldFkiLCJUSU1FX1RPX01BWF9TUEVFRCIsIkZBQ0VfUEFSQU1fTUFYX1YiLCJNQVhfViIsImN1clRpbWVTZWMiLCJkZWx0YVRpbWVXZWlnaHQiLCJGUkFNRV9UT19NQVhfU1BFRUQiLCJNQVhfQSIsImR4IiwiZHkiLCJhYnMiLCJkIiwic3FydCIsInZ4IiwidnkiLCJheCIsImF5IiwibWF4X3YiLCJjdXJfdiIsImdldE1heFNjYWxlIiwiZ2V0TWluU2NhbGUiLCJzZXRNYXhTY2FsZSIsInNldE1pblNjYWxlIiwiaXNNYXhTY2FsZSIsImlzTWluU2NhbGUiLCJhZGp1c3RUcmFuc2xhdGUiLCJhZGp1c3RTY2FsZSIsImN4IiwiY3kiLCJ0YXJnZXRTY2FsZSIsInRyMiIsInRyMyIsInNldFNjcmVlblJlY3QiLCJzZXRNYXhTY3JlZW5SZWN0IiwiZ2V0U2NyZWVuTGVmdCIsImdldFNjcmVlblJpZ2h0IiwiZ2V0U2NyZWVuQm90dG9tIiwiZ2V0U2NyZWVuVG9wIiwiZ2V0TWF4TGVmdCIsImdldE1heFJpZ2h0IiwiZ2V0TWF4Qm90dG9tIiwiZ2V0TWF4VG9wIiwicGxhdGZvcm1NYW5hZ2VyIiwic2V0UGxhdGZvcm1NYW5hZ2VyIl0sIm1hcHBpbmdzIjoiQUFBQSxZQVlBLFNBQVNBLGdCQUVMQyxLQUFLQyxZQUFrQixLQUN2QkQsS0FBS0UsWUFB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S0FBS3NGLGFBQWUyRSxHQU14Qi9FLGNBQWN2RCxVQUFVd1UsaUJBQW1CLFNBQVNyTSxFQUFlQyxFQUFnQkUsRUFBaUJELEdBRWhHaEssS0FBS3VGLFFBQVV1RSxFQUNmOUosS0FBS3dGLFNBQVd1RSxFQUNoQi9KLEtBQUt5RixPQUFTdUUsRUFDZGhLLEtBQUswRixVQUFZdUUsR0FNckIvRSxjQUFjdkQsVUFBVXlVLGNBQWtCLFdBRXRDLE1BQU9wVyxNQUFLbUYsWUFNaEJELGNBQWN2RCxVQUFVMFUsZUFBa0IsV0FFdEMsTUFBT3JXLE1BQUtvRixhQU1oQkYsY0FBY3ZELFVBQVUyVSxnQkFBa0IsV0FFdEMsTUFBT3RXLE1BQUtzRixjQU1oQkosY0FBY3ZELFVBQVU0VSxhQUFrQixXQUV0QyxNQUFPdlcsTUFBS3FGLFdBTWhCSCxjQUFjdkQsVUFBVTZVLFdBQWtCLFdBRXRDLE1BQU94VyxNQUFLdUYsU0FNaEJMLGNBQWN2RCxVQUFVOFUsWUFBa0IsV0FFdEMsTUFBT3pXLE1BQUt3RixVQU1oQk4sY0FBY3ZELFVBQVUrVSxhQUFrQixXQUV0QyxNQUFPMVcsTUFBSzBGLFdBTWhCUixjQUFjdkQsVUFBVWdWLFVBQWtCLFdBRXRDLE1BQU8zVyxNQUFLeUYsUUFxQmhCTSxnQkFBZ0I2USxnQkFBbUIsS0FLbkM3USxnQkFBZ0J5QixtQkFBcUIsV0FFakMsTUFBT3pCLGlCQUFnQjZRLGlCQU0zQjdRLGdCQUFnQjhRLG1CQUFxQixTQUFVRCxHQUUzQzdRLGdCQUFnQjZRLGdCQUFrQkEiLCJmaWxlIjoiTGl2ZTJEL2ZyYW1ld29yay9MaXZlMkRGcmFtZXdvcmsubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqXHJcbiAqICBZb3UgY2FuIG1vZGlmeSBhbmQgdXNlIHRoaXMgc291cmNlIGZyZWVseVxyXG4gKiAgb25seSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFwcGxpY2F0aW9uIHJlbGF0ZWQgTGl2ZTJELlxyXG4gKlxyXG4gKiAgKGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqL1xyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgY2xhc3MgTDJEQmFzZU1vZGVsICAgICAgICAgXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmZ1bmN0aW9uIEwyREJhc2VNb2RlbCgpXHJcbntcclxuICAgIHRoaXMubGl2ZTJETW9kZWwgICAgID0gbnVsbDsgLy8gQUxpdmUyRE1vZGVsXHJcbiAgICB0aGlzLm1vZGVsTWF0cml4ICAgICA9IG51bGw7IC8vIEwyRE1vZGVsTWF0cml4XHJcbiAgICB0aGlzLmV5ZUJsaW5rICAgICAgICA9IG51bGw7IC8vIEwyREV5ZUJsaW5rXHJcbiAgICB0aGlzLnBoeXNpY3MgICAgICAgICA9IG51bGw7IC8vIEwyRFBoeXNpY3NcclxuICAgIHRoaXMucG9zZSAgICAgICAgICAgID0gbnVsbDsgLy8gTDJEUG9zZVxyXG4gICAgdGhpcy5kZWJ1Z01vZGUgICAgICAgPSBmYWxzZTtcclxuICAgIHRoaXMuaW5pdGlhbGl6ZWQgICAgID0gZmFsc2U7XHJcbiAgICB0aGlzLnVwZGF0aW5nICAgICAgICA9IGZhbHNlO1xyXG4gICAgdGhpcy5hbHBoYSAgICAgICAgICAgPSAxO1xyXG4gICAgdGhpcy5hY2NBbHBoYSAgICAgICAgPSAwO1xyXG4gICAgdGhpcy5saXBTeW5jICAgICAgICAgPSBmYWxzZTsgLy8g44Oq44OD44OX44K344Oz44Kv44GM5pyJ5Yq544GL44Gp44GG44GLXHJcbiAgICB0aGlzLmxpcFN5bmNWYWx1ZSAgICA9IDA7ICAgICAvLyDln7rmnKzjga8w772eMVxyXG4gICAgdGhpcy5hY2NlbFggICAgICAgICAgPSAwO1xyXG4gICAgdGhpcy5hY2NlbFkgICAgICAgICAgPSAwO1xyXG4gICAgdGhpcy5hY2NlbFogICAgICAgICAgPSAwO1xyXG4gICAgdGhpcy5kcmFnWCAgICAgICAgICAgPSAwO1xyXG4gICAgdGhpcy5kcmFnWSAgICAgICAgICAgPSAwO1xyXG4gICAgdGhpcy5zdGFydFRpbWVNU2VjICAgPSBudWxsO1xyXG4gICAgdGhpcy5tYWluTW90aW9uTWFuYWdlciA9IG5ldyBMMkRNb3Rpb25NYW5hZ2VyKCk7IC8vTDJETW90aW9uTWFuYWdlclxyXG4gICAgdGhpcy5leHByZXNzaW9uTWFuYWdlciA9IG5ldyBMMkRNb3Rpb25NYW5hZ2VyKCk7IC8vTDJETW90aW9uTWFuYWdlclxyXG4gICAgdGhpcy5tb3Rpb25zID0ge307XHJcbiAgICB0aGlzLmV4cHJlc3Npb25zID0ge307XHJcbiAgICBcclxuICAgIHRoaXMuaXNUZXhMb2FkZWQgPSBmYWxzZTtcclxufVxyXG5cclxudmFyIHRleENvdW50ZXIgPSAwO1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEQmFzZU1vZGVsICMgZ2V0TW9kZWxNYXRyaXgoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRCYXNlTW9kZWwucHJvdG90eXBlLmdldE1vZGVsTWF0cml4ICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMubW9kZWxNYXRyaXg7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREJhc2VNb2RlbCAjIHNldEFscGhhKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5zZXRBbHBoYSAgICAgICAgPSBmdW5jdGlvbihhLypmbG9hdCovKVxyXG57XHJcbiAgICBpZiggYSA+IDAuOTk5ICkgYSA9IDE7XHJcbiAgICBpZiggYSA8IDAuMDAxICkgYSA9IDA7XHJcbiAgICB0aGlzLmFscGhhID0gYTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEQmFzZU1vZGVsICMgZ2V0QWxwaGEoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRCYXNlTW9kZWwucHJvdG90eXBlLmdldEFscGhhICAgICAgICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMuYWxwaGE7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREJhc2VNb2RlbCAjIGlzSW5pdGlhbGl6ZWQoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRCYXNlTW9kZWwucHJvdG90eXBlLmlzSW5pdGlhbGl6ZWQgICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMuaW5pdGlhbGl6ZWQ7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREJhc2VNb2RlbCAjIHNldEluaXRpYWxpemVkKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5zZXRJbml0aWFsaXplZCAgPSBmdW5jdGlvbiggdi8qYm9vbGVhbiovKVxyXG57XHJcbiAgICB0aGlzLmluaXRpYWxpemVkID0gdjtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEQmFzZU1vZGVsICMgaXNVcGRhdGluZygpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREJhc2VNb2RlbC5wcm90b3R5cGUuaXNVcGRhdGluZyAgICAgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy51cGRhdGluZztcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEQmFzZU1vZGVsICMgc2V0VXBkYXRpbmcoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRCYXNlTW9kZWwucHJvdG90eXBlLnNldFVwZGF0aW5nICAgICA9IGZ1bmN0aW9uKHYvKmJvb2xlYW4qLylcclxue1xyXG4gICAgdGhpcy51cGRhdGluZyA9IHY7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREJhc2VNb2RlbCAjIGdldExpdmUyRE1vZGVsKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5nZXRMaXZlMkRNb2RlbCAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLmxpdmUyRE1vZGVsO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBzZXRMaXBTeW5jKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5zZXRMaXBTeW5jICAgICAgPSBmdW5jdGlvbih2Lypib29sZWFuKi8pXHJcbntcclxuICAgIHRoaXMubGlwU3luYyA9IHY7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREJhc2VNb2RlbCAjIHNldExpcFN5bmNWYWx1ZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREJhc2VNb2RlbC5wcm90b3R5cGUuc2V0TGlwU3luY1ZhbHVlID0gZnVuY3Rpb24odi8qZmxvYXQqLylcclxue1xyXG4gICAgdGhpcy5saXBTeW5jVmFsdWUgPSB2O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBzZXRBY2NlbCgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREJhc2VNb2RlbC5wcm90b3R5cGUuc2V0QWNjZWwgICAgICAgID0gZnVuY3Rpb24oeC8qZmxvYXQqLywgeS8qZmxvYXQqLywgei8qZmxvYXQqLylcclxue1xyXG4gICAgdGhpcy5hY2NlbFggPSB4O1xyXG4gICAgdGhpcy5hY2NlbFkgPSB5O1xyXG4gICAgdGhpcy5hY2NlbFogPSB6O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBzZXREcmFnKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5zZXREcmFnICAgICAgICAgPSBmdW5jdGlvbih4LypmbG9hdCovLCB5LypmbG9hdCovKVxyXG57XHJcbiAgICB0aGlzLmRyYWdYID0geDtcclxuICAgIHRoaXMuZHJhZ1kgPSB5O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBnZXRNYWluTW90aW9uTWFuYWdlcigpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREJhc2VNb2RlbC5wcm90b3R5cGUuZ2V0TWFpbk1vdGlvbk1hbmFnZXIgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLm1haW5Nb3Rpb25NYW5hZ2VyO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBnZXRFeHByZXNzaW9uTWFuYWdlcigpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREJhc2VNb2RlbC5wcm90b3R5cGUuZ2V0RXhwcmVzc2lvbk1hbmFnZXIgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLmV4cHJlc3Npb25NYW5hZ2VyO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBsb2FkTW9kZWxEYXRhKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5sb2FkTW9kZWxEYXRhICAgPSBmdW5jdGlvbihwYXRoLypTdHJpbmcqLywgY2FsbGJhY2spXHJcbnsgICBcclxuICAgIC8qXHJcbiAgICBpZiggdGhpcy5saXZlMkRNb2RlbCAhPSBudWxsICkge1xyXG4gICAgICAgIHRoaXMubGl2ZTJETW9kZWwuZGVsZXRlVGV4dHVyZXMoKTtcclxuICAgIH1cclxuICAgICovXHJcbiAgICB2YXIgcG0gPSBMaXZlMkRGcmFtZXdvcmsuZ2V0UGxhdGZvcm1NYW5hZ2VyKCk7IC8vSVBsYXRmb3JtTWFuYWdlclxyXG4gICAgaWYoIHRoaXMuZGVidWdNb2RlICkgcG0ubG9nKFwiTG9hZCBtb2RlbCA6IFwiICsgcGF0aCk7XHJcblxyXG4gICAgdmFyIHRoaXNSZWYgPSB0aGlzO1xyXG4gICAgcG0ubG9hZExpdmUyRE1vZGVsKHBhdGgsIGZ1bmN0aW9uKGwyZE1vZGVsKSB7XHJcbiAgICAgICAgdGhpc1JlZi5saXZlMkRNb2RlbCA9IGwyZE1vZGVsO1xyXG4gICAgICAgIHRoaXNSZWYubGl2ZTJETW9kZWwuc2F2ZVBhcmFtKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdmFyIF9lcnIgPSBMaXZlMkQuZ2V0RXJyb3IoKTtcclxuXHJcbiAgICAgICAgaWYoIF9lcnIgIT0gMCApIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIDogRmFpbGVkIHRvIGxvYWRNb2RlbERhdGEoKS5cIik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpc1JlZi5tb2RlbE1hdHJpeCA9IG5ldyBMMkRNb2RlbE1hdHJpeChcclxuICAgICAgICAgICAgdGhpc1JlZi5saXZlMkRNb2RlbC5nZXRDYW52YXNXaWR0aCgpLFxyXG4gICAgICAgICAgICB0aGlzUmVmLmxpdmUyRE1vZGVsLmdldENhbnZhc0hlaWdodCgpKTsgLy9MMkRNb2RlbE1hdHJpeFxyXG4gICAgICAgIHRoaXNSZWYubW9kZWxNYXRyaXguc2V0V2lkdGgoMik7XHJcbiAgICAgICAgdGhpc1JlZi5tb2RlbE1hdHJpeC5zZXRDZW50ZXJQb3NpdGlvbigwLCAwKTtcclxuICAgICAgICBcclxuICAgICAgICBjYWxsYmFjayh0aGlzUmVmLmxpdmUyRE1vZGVsKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEQmFzZU1vZGVsICMgbG9hZFRleHR1cmUoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRCYXNlTW9kZWwucHJvdG90eXBlLmxvYWRUZXh0dXJlICAgICA9IGZ1bmN0aW9uKG5vLyppbnQqLywgcGF0aC8qU3RyaW5nKi8sIGNhbGxiYWNrKVxyXG57XHJcbiAgICB0ZXhDb3VudGVyKys7XHJcbiBcclxuICAgIHZhciBwbSA9IExpdmUyREZyYW1ld29yay5nZXRQbGF0Zm9ybU1hbmFnZXIoKTsgLy9JUGxhdGZvcm1NYW5hZ2VyXHJcbiAgICBcclxuICAgIGlmKCB0aGlzLmRlYnVnTW9kZSApIHBtLmxvZyhcIkxvYWQgVGV4dHVyZSA6IFwiICsgcGF0aCk7XHJcbiAgICBcclxuICAgIHZhciB0aGlzUmVmID0gdGhpcztcclxuICAgIHBtLmxvYWRUZXh0dXJlKHRoaXMubGl2ZTJETW9kZWwgLCBubyAsIHBhdGgsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGV4Q291bnRlci0tO1xyXG4gICAgICAgIGlmKHRleENvdW50ZXIgPT0gMCkgdGhpc1JlZi5pc1RleExvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PSBcImZ1bmN0aW9uXCIpIGNhbGxiYWNrKCk7XHJcbiAgICB9KTtcclxuICAgIFxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBsb2FkTW90aW9uKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5sb2FkTW90aW9uICAgICAgPSBmdW5jdGlvbihuYW1lLypTdHJpbmcqLywgcGF0aCAvKlN0cmluZyovLCBjYWxsYmFjaylcclxueyAgICBcclxuICAgIHZhciBwbSA9IExpdmUyREZyYW1ld29yay5nZXRQbGF0Zm9ybU1hbmFnZXIoKTsgLy9JUGxhdGZvcm1NYW5hZ2VyXHJcbiAgICBcclxuICAgIGlmKHRoaXMuZGVidWdNb2RlKSBwbS5sb2coXCJMb2FkIE1vdGlvbiA6IFwiICsgcGF0aCk7XHJcbiAgICBcclxuICAgIHZhciBtb3Rpb24gPSBudWxsOyAvL0xpdmUyRE1vdGlvblxyXG4gICAgXHJcbiAgICB2YXIgdGhpc1JlZiA9IHRoaXM7XHJcbiAgICBwbS5sb2FkQnl0ZXMocGF0aCwgZnVuY3Rpb24oYnVmKSB7XHJcbiAgICAgICAgbW90aW9uID0gTGl2ZTJETW90aW9uLmxvYWRNb3Rpb24oYnVmKTtcclxuICAgICAgICBpZiggbmFtZSAhPSBudWxsICkge1xyXG4gICAgICAgICAgICB0aGlzUmVmLm1vdGlvbnNbbmFtZV0gPSBtb3Rpb247XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhbGxiYWNrKG1vdGlvbik7XHJcbiAgICB9KTtcclxuICAgIFxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBsb2FkRXhwcmVzc2lvbigpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREJhc2VNb2RlbC5wcm90b3R5cGUubG9hZEV4cHJlc3Npb24gID0gZnVuY3Rpb24obmFtZS8qU3RyaW5nKi8sIHBhdGggLypTdHJpbmcqLywgY2FsbGJhY2spXHJcbntcclxuICAgIHZhciBwbSA9IExpdmUyREZyYW1ld29yay5nZXRQbGF0Zm9ybU1hbmFnZXIoKTsgLy9JUGxhdGZvcm1NYW5hZ2VyXHJcbiAgICBcclxuICAgIGlmKCB0aGlzLmRlYnVnTW9kZSApIHBtLmxvZyhcIkxvYWQgRXhwcmVzc2lvbiA6IFwiICsgcGF0aCk7XHJcbiAgICBcclxuICAgIHZhciB0aGlzUmVmID0gdGhpcztcclxuICAgIHBtLmxvYWRCeXRlcyhwYXRoLCBmdW5jdGlvbihidWYpIHtcclxuICAgICAgICBpZihuYW1lICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpc1JlZi5leHByZXNzaW9uc1tuYW1lXSA9IEwyREV4cHJlc3Npb25Nb3Rpb24ubG9hZEpzb24oYnVmKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PSBcImZ1bmN0aW9uXCIpIGNhbGxiYWNrKCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEQmFzZU1vZGVsICMgbG9hZFBvc2UoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRCYXNlTW9kZWwucHJvdG90eXBlLmxvYWRQb3NlID0gZnVuY3Rpb24oIHBhdGggLypTdHJpbmcqLywgY2FsbGJhY2sgKVxyXG57XHJcbiAgICB2YXIgcG0gPSBMaXZlMkRGcmFtZXdvcmsuZ2V0UGxhdGZvcm1NYW5hZ2VyKCk7IC8vSVBsYXRmb3JtTWFuYWdlclxyXG4gICAgaWYoIHRoaXMuZGVidWdNb2RlICkgcG0ubG9nKFwiTG9hZCBQb3NlIDogXCIgKyBwYXRoKTtcclxuICAgIHZhciB0aGlzUmVmID0gdGhpcztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgcG0ubG9hZEJ5dGVzKHBhdGgsIGZ1bmN0aW9uKGJ1Zikge1xyXG4gICAgICAgICAgICB0aGlzUmVmLnBvc2UgPSBMMkRQb3NlLmxvYWQoYnVmKTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PSBcImZ1bmN0aW9uXCIpIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBjYXRjaChlKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKGUpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBsb2FkUGh5c2ljcygpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREJhc2VNb2RlbC5wcm90b3R5cGUubG9hZFBoeXNpY3MgICAgID0gZnVuY3Rpb24ocGF0aC8qU3RyaW5nKi8pXHJcbntcclxuICAgIHZhciBwbSA9IExpdmUyREZyYW1ld29yay5nZXRQbGF0Zm9ybU1hbmFnZXIoKTsgLy9JUGxhdGZvcm1NYW5hZ2VyXHJcbiAgICBpZiggdGhpcy5kZWJ1Z01vZGUgKSBwbS5sb2coXCJMb2FkIFBoeXNpY3MgOiBcIiArIHBhdGgpO1xyXG4gICAgdmFyIHRoaXNSZWYgPSB0aGlzO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBwbS5sb2FkQnl0ZXMocGF0aCwgZnVuY3Rpb24oYnVmKSB7XHJcbiAgICAgICAgICAgIHRoaXNSZWYucGh5c2ljcyA9IEwyRFBoeXNpY3MubG9hZChidWYpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgY2F0Y2goZSl7XHJcbiAgICAgICAgY29uc29sZS53YXJuKGUpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRCYXNlTW9kZWwgIyBoaXRUZXN0U2ltcGxlKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEQmFzZU1vZGVsLnByb3RvdHlwZS5oaXRUZXN0U2ltcGxlID0gZnVuY3Rpb24oZHJhd0lELCB0ZXN0WCwgdGVzdFkpXHJcbnsgICBcclxuICAgIHZhciBkcmF3SW5kZXggPSB0aGlzLmxpdmUyRE1vZGVsLmdldERyYXdEYXRhSW5kZXgoZHJhd0lEKTtcclxuICAgIFxyXG4gICAgaWYoIGRyYXdJbmRleCA8IDAgKSByZXR1cm4gZmFsc2U7XHJcbiAgICBcclxuICAgIHZhciBwb2ludHMgPSB0aGlzLmxpdmUyRE1vZGVsLmdldFRyYW5zZm9ybWVkUG9pbnRzKGRyYXdJbmRleCk7XHJcbiAgICB2YXIgbGVmdCA9IHRoaXMubGl2ZTJETW9kZWwuZ2V0Q2FudmFzV2lkdGgoKTtcclxuICAgIHZhciByaWdodCA9IDA7XHJcbiAgICB2YXIgdG9wID0gdGhpcy5saXZlMkRNb2RlbC5nZXRDYW52YXNIZWlnaHQoKTtcclxuICAgIHZhciBib3R0b20gPSAwO1xyXG4gICAgXHJcbiAgICBmb3IoIHZhciBqID0gMDsgaiA8IHBvaW50cy5sZW5ndGg7IGogPSBqICsgMiApIHtcclxuICAgICAgICB2YXIgeCA9IHBvaW50c1tqXTtcclxuICAgICAgICB2YXIgeSA9IHBvaW50c1tqICsgMV07XHJcblxyXG4gICAgICAgIGlmKCB4IDwgbGVmdCApIGxlZnQgPSB4O1xyXG4gICAgICAgIGlmKCB4ID4gcmlnaHQgKSByaWdodCA9IHg7XHJcbiAgICAgICAgaWYoIHkgPCB0b3AgKSB0b3AgPSB5O1xyXG4gICAgICAgIGlmKCB5ID4gYm90dG9tICkgYm90dG9tID0geTtcclxuICAgIH1cclxuICAgIHZhciB0eCA9IHRoaXMubW9kZWxNYXRyaXguaW52ZXJ0VHJhbnNmb3JtWCh0ZXN0WCk7XHJcbiAgICB2YXIgdHkgPSB0aGlzLm1vZGVsTWF0cml4LmludmVydFRyYW5zZm9ybVkodGVzdFkpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gKCBsZWZ0IDw9IHR4ICYmIHR4IDw9IHJpZ2h0ICYmIHRvcCA8PSB0eSAmJiB0eSA8PSBib3R0b20gKTtcclxufVxyXG5cclxuLyoqXHJcbiAqXHJcbiAqICBZb3UgY2FuIG1vZGlmeSBhbmQgdXNlIHRoaXMgc291cmNlIGZyZWVseVxyXG4gKiAgb25seSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFwcGxpY2F0aW9uIHJlbGF0ZWQgTGl2ZTJELlxyXG4gKlxyXG4gKiAgKGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqL1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIGNsYXNzIEwyREV4cHJlc3Npb25Nb3Rpb24gIGV4dGVuZHMgICAgIEFNb3Rpb25cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuZnVuY3Rpb24gTDJERXhwcmVzc2lvbk1vdGlvbigpXHJcbntcclxuICAgIEFNb3Rpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7XHJcbiAgICB0aGlzLnBhcmFtTGlzdCA9IG5ldyBBcnJheSgpOyAvL0FycmF5TGlzdDxMMkRFeHByZXNzaW9uUGFyYW0+XHJcbn1cclxuXHJcbkwyREV4cHJlc3Npb25Nb3Rpb24ucHJvdG90eXBlID0gbmV3IEFNb3Rpb24oKTsgLy8gTDJERXhwcmVzc2lvbk1vdGlvbiBleHRlbmRzIEFNb3Rpb25cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREV4cHJlc3Npb25Nb3Rpb24uRVhQUkVTU0lPTl9ERUZBVUxUICA9IFwiREVGQVVMVFwiO1xyXG5MMkRFeHByZXNzaW9uTW90aW9uLlRZUEVfU0VUICAgICAgICAgICAgPSAwO1xyXG5MMkRFeHByZXNzaW9uTW90aW9uLlRZUEVfQUREICAgICAgICAgICAgPSAxO1xyXG5MMkRFeHByZXNzaW9uTW90aW9uLlRZUEVfTVVMVCAgICAgICAgICAgPSAyO1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgc3RhdGljIEwyREV4cHJlc3Npb25Nb3Rpb24ubG9hZEpzb24oKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRFeHByZXNzaW9uTW90aW9uLmxvYWRKc29uICAgICAgICA9IGZ1bmN0aW9uKGJ1ZilcclxueyAgICBcclxuICAgIHZhciByZXQgPSBuZXcgTDJERXhwcmVzc2lvbk1vdGlvbigpO1xyXG4gICAgXHJcbiAgICB2YXIgcG0gPSBMaXZlMkRGcmFtZXdvcmsuZ2V0UGxhdGZvcm1NYW5hZ2VyKCk7XHJcbiAgICB2YXIganNvbiA9IHBtLmpzb25QYXJzZUZyb21CeXRlcyhidWYpO1xyXG5cclxuICAgIHJldC5zZXRGYWRlSW4ocGFyc2VJbnQoanNvbi5mYWRlX2luKSA+IDAgPyBwYXJzZUludChqc29uLmZhZGVfaW4pIDogMTAwMCk7XHJcbiAgICByZXQuc2V0RmFkZU91dChwYXJzZUludChqc29uLmZhZGVfb3V0KSA+IDAgPyBwYXJzZUludChqc29uLmZhZGVfb3V0KSA6IDEwMDApO1xyXG4gICAgXHJcbiAgICBpZihqc29uLnBhcmFtcyA9PSBudWxsKSB7XHJcbiAgICAgICAgcmV0dXJuIHJldDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgdmFyIHBhcmFtcyA9IGpzb24ucGFyYW1zO1xyXG4gICAgdmFyIHBhcmFtTnVtID0gcGFyYW1zLmxlbmd0aDtcclxuICAgIHJldC5wYXJhbUxpc3QgPSBbXTsgLy9BcnJheUxpc3Q8TDJERXhwcmVzc2lvblBhcmFtPlxyXG4gICAgZm9yKCB2YXIgaSA9IDA7IGkgPCBwYXJhbU51bTsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHBhcmFtID0gcGFyYW1zW2ldO1xyXG4gICAgICAgIHZhciBwYXJhbUlEID0gcGFyYW0uaWQudG9TdHJpbmcoKTtcclxuICAgICAgICB2YXIgdmFsdWUgPSBwYXJzZUZsb2F0KHBhcmFtLnZhbCk7XHJcbiAgICAgICAgdmFyIGNhbGNUeXBlSW50ID0gTDJERXhwcmVzc2lvbk1vdGlvbi5UWVBFX0FERDtcclxuICAgICAgICB2YXIgY2FsYyA9IHBhcmFtLmNhbGMgIT0gbnVsbCA/IHBhcmFtLmNhbGMudG9TdHJpbmcoKSA6IFwiYWRkXCI7XHJcbiAgICAgICAgaWYoY2FsYyA9PT0gXCJhZGRcIikge1xyXG4gICAgICAgICAgICBjYWxjVHlwZUludCA9IEwyREV4cHJlc3Npb25Nb3Rpb24uVFlQRV9BREQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoY2FsYyA9PT0gXCJtdWx0XCIpIHtcclxuICAgICAgICAgICAgY2FsY1R5cGVJbnQgPSBMMkRFeHByZXNzaW9uTW90aW9uLlRZUEVfTVVMVDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihjYWxjID09PSBcInNldFwiKSB7XHJcbiAgICAgICAgICAgIGNhbGNUeXBlSW50ID0gTDJERXhwcmVzc2lvbk1vdGlvbi5UWVBFX1NFVDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNhbGNUeXBlSW50ID0gTDJERXhwcmVzc2lvbk1vdGlvbi5UWVBFX0FERDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoY2FsY1R5cGVJbnQgPT0gTDJERXhwcmVzc2lvbk1vdGlvbi5UWVBFX0FERCkge1xyXG4gICAgICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gcGFyYW0uZGVmID09IG51bGwgPyAwIDogcGFyc2VGbG9hdChwYXJhbS5kZWYpO1xyXG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlIC0gZGVmYXVsdFZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNhbGNUeXBlSW50ID09IEwyREV4cHJlc3Npb25Nb3Rpb24uVFlQRV9NVUxUKSB7XHJcbiAgICAgICAgICAgIHZhciBkZWZhdWx0VmFsdWUgPSBwYXJhbS5kZWYgPT0gbnVsbCA/IDEgOiBwYXJzZUZsb2F0KHBhcmFtLmRlZik7XHJcbiAgICAgICAgICAgIGlmKGRlZmF1bHRWYWx1ZSA9PSAwICkgZGVmYXVsdFZhbHVlID0gMTtcclxuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZSAvIGRlZmF1bHRWYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdmFyIGl0ZW0gPSBuZXcgTDJERXhwcmVzc2lvblBhcmFtKCAgKTtcclxuICAgICAgICBpdGVtLmlkID0gcGFyYW1JRDtcclxuICAgICAgICBpdGVtLnR5cGUgPSBjYWxjVHlwZUludDtcclxuICAgICAgICBpdGVtLnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0LnBhcmFtTGlzdC5wdXNoKGl0ZW0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAgcmV0dXJuIHJldDtcclxufVxyXG5cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREV4cHJlc3Npb25Nb3Rpb24gIyB1cGRhdGVQYXJhbUV4ZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREV4cHJlc3Npb25Nb3Rpb24ucHJvdG90eXBlLnVwZGF0ZVBhcmFtRXhlICA9IGZ1bmN0aW9uKG1vZGVsIC8qQUxpdmUyRE1vZGVsKi8sIHRpbWVNU2VjLypsb25nKi8gLHdlaWdodCAvKmZsb2F0Ki8gLG1vdGlvblF1ZXVlRW50IC8qTW90aW9uUXVldWVFbnQqLylcclxue1xyXG4gICAgZm9yKHZhciBpID0gdGhpcy5wYXJhbUxpc3QubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcclxuICAgICAgICB2YXIgcGFyYW0gPSB0aGlzLnBhcmFtTGlzdFtpXTsgLy9MMkRFeHByZXNzaW9uUGFyYW1cclxuICAgICAgICAvLyBpZiAoIXBhcmFtIHx8ICFwYXJhbS50eXBlKSBjb250aW51ZTtcclxuICAgICAgICBpZihwYXJhbS50eXBlID09IEwyREV4cHJlc3Npb25Nb3Rpb24uVFlQRV9BREQpIHtcclxuICAgICAgICAgICAgbW9kZWwuYWRkVG9QYXJhbUZsb2F0KHBhcmFtLmlkLCBwYXJhbS52YWx1ZSwgd2VpZ2h0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihwYXJhbS50eXBlID09IEwyREV4cHJlc3Npb25Nb3Rpb24uVFlQRV9NVUxUKSB7XHJcbiAgICAgICAgICAgIG1vZGVsLm11bHRQYXJhbUZsb2F0KHBhcmFtLmlkLCBwYXJhbS52YWx1ZSwgd2VpZ2h0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihwYXJhbS50eXBlID09IEwyREV4cHJlc3Npb25Nb3Rpb24uVFlQRV9TRVQpIHsgICAgICAgICAgICBcclxuICAgICAgICAgICAgbW9kZWwuc2V0UGFyYW1GbG9hdChwYXJhbS5pZCwgcGFyYW0udmFsdWUsIHdlaWdodCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgY2xhc3MgTDJERXhwcmVzc2lvblBhcmFtICAgXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmZ1bmN0aW9uIEwyREV4cHJlc3Npb25QYXJhbSgpXHJcbntcclxuICAgIHRoaXMuaWQgICAgICAgICAgICAgID0gXCJcIjtcclxuICAgIHRoaXMudHlwZSAgICAgICAgICAgID0gLTE7XHJcbiAgICB0aGlzLnZhbHVlICAgICAgICAgICA9IG51bGw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKlxyXG4gKiAgWW91IGNhbiBtb2RpZnkgYW5kIHVzZSB0aGlzIHNvdXJjZSBmcmVlbHlcclxuICogIG9ubHkgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBhcHBsaWNhdGlvbiByZWxhdGVkIExpdmUyRC5cclxuICpcclxuICogIChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKi9cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICBjbGFzcyBMMkRFeWVCbGluayAgICAgICAgICBcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuZnVuY3Rpb24gTDJERXllQmxpbmsoKVxyXG57XHJcbiAgICB0aGlzLm5leHRCbGlua1RpbWUgICA9IG51bGwgLyogVE9ETyBOT1QgSU5JVCAqLzsgLy8gXHJcbiAgICB0aGlzLnN0YXRlU3RhcnRUaW1lICA9IG51bGwgLyogVE9ETyBOT1QgSU5JVCAqLzsgLy8gXHJcbiAgICB0aGlzLmJsaW5rSW50ZXJ2YWxNc2VjID0gbnVsbCAvKiBUT0RPIE5PVCBJTklUICovOyAvLyBcclxuICAgIHRoaXMuZXllU3RhdGUgPSBFWUVfU1RBVEUuU1RBVEVfRklSU1Q7XHJcbiAgICB0aGlzLmJsaW5rSW50ZXJ2YWxNc2VjID0gNDAwMDtcclxuICAgIHRoaXMuY2xvc2luZ01vdGlvbk1zZWMgPSAxMDA7XHJcbiAgICB0aGlzLmNsb3NlZE1vdGlvbk1zZWMgPSA1MDtcclxuICAgIHRoaXMub3BlbmluZ01vdGlvbk1zZWMgPSAxNTA7XHJcbiAgICB0aGlzLmNsb3NlSWZaZXJvID0gdHJ1ZTtcclxuICAgIHRoaXMuZXllSURfTCA9IFwiUEFSQU1fRVlFX0xfT1BFTlwiO1xyXG4gICAgdGhpcy5leWVJRF9SID0gXCJQQVJBTV9FWUVfUl9PUEVOXCI7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREV5ZUJsaW5rICMgY2FsY05leHRCbGluaygpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREV5ZUJsaW5rLnByb3RvdHlwZS5jYWxjTmV4dEJsaW5rICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHZhciB0aW1lIC8qbG9uZyovID0gVXRTeXN0ZW0uZ2V0VXNlclRpbWVNU2VjKCk7XHJcbiAgICB2YXIgciAvKk51bWJlciovID0gTWF0aC5yYW5kb20oKTtcclxuICAgIHJldHVybiAgLyoobG9uZykqLyAodGltZSArIHIgKiAoMiAqIHRoaXMuYmxpbmtJbnRlcnZhbE1zZWMgLSAxKSk7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyREV5ZUJsaW5rICMgc2V0SW50ZXJ2YWwoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRFeWVCbGluay5wcm90b3R5cGUuc2V0SW50ZXJ2YWwgICAgID0gZnVuY3Rpb24oYmxpbmtJbnRlcnZhbE1zZWMgLyppbnQqLylcclxue1xyXG4gICAgdGhpcy5ibGlua0ludGVydmFsTXNlYyA9IGJsaW5rSW50ZXJ2YWxNc2VjO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRFeWVCbGluayAjIHNldEV5ZU1vdGlvbigpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREV5ZUJsaW5rLnByb3RvdHlwZS5zZXRFeWVNb3Rpb24gICAgPSBmdW5jdGlvbihjbG9zaW5nTW90aW9uTXNlYy8qaW50Ki8gLCBjbG9zZWRNb3Rpb25Nc2VjLyppbnQqLyAsIG9wZW5pbmdNb3Rpb25Nc2VjLyppbnQqLylcclxue1xyXG4gICAgdGhpcy5jbG9zaW5nTW90aW9uTXNlYyA9IGNsb3NpbmdNb3Rpb25Nc2VjO1xyXG4gICAgdGhpcy5jbG9zZWRNb3Rpb25Nc2VjID0gY2xvc2VkTW90aW9uTXNlYztcclxuICAgIHRoaXMub3BlbmluZ01vdGlvbk1zZWMgPSBvcGVuaW5nTW90aW9uTXNlYztcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJERXllQmxpbmsgIyB1cGRhdGVQYXJhbSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyREV5ZUJsaW5rLnByb3RvdHlwZS51cGRhdGVQYXJhbSAgICAgPSBmdW5jdGlvbihtb2RlbC8qQUxpdmUyRE1vZGVsKi8pXHJcbntcclxuICAgIHZhciB0aW1lIC8qOmxvbmcqLyA9IFV0U3lzdGVtLmdldFVzZXJUaW1lTVNlYygpO1xyXG4gICAgdmFyIGV5ZVBhcmFtVmFsdWUgLyo6TnVtYmVyKi87XHJcbiAgICB2YXIgdCAvKjpOdW1iZXIqLyA9IDA7XHJcbiAgICBzd2l0Y2godGhpcy5leWVTdGF0ZSl7XHJcbiAgICBjYXNlIEVZRV9TVEFURS5TVEFURV9DTE9TSU5HOlxyXG4gICAgICAgIHQgPSAodGltZSAtIHRoaXMuc3RhdGVTdGFydFRpbWUpIC8gdGhpcy5jbG9zaW5nTW90aW9uTXNlYztcclxuICAgICAgICBpZih0ID49IDEpIHtcclxuICAgICAgICAgICAgdCA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuZXllU3RhdGUgPSBFWUVfU1RBVEUuU1RBVEVfQ0xPU0VEO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlU3RhcnRUaW1lID0gdGltZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZXllUGFyYW1WYWx1ZSA9IDEgLSB0O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSBFWUVfU1RBVEUuU1RBVEVfQ0xPU0VEOlxyXG4gICAgICAgIHQgPSAodGltZSAtIHRoaXMuc3RhdGVTdGFydFRpbWUpIC8gdGhpcy5jbG9zZWRNb3Rpb25Nc2VjO1xyXG4gICAgICAgIGlmKHQgPj0gMSkge1xyXG4gICAgICAgICAgICB0aGlzLmV5ZVN0YXRlID0gRVlFX1NUQVRFLlNUQVRFX09QRU5JTkc7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGVTdGFydFRpbWUgPSB0aW1lO1xyXG4gICAgICAgIH1cclxuICAgICAgICBleWVQYXJhbVZhbHVlID0gMDtcclxuICAgICAgICBicmVhaztcclxuICAgIGNhc2UgRVlFX1NUQVRFLlNUQVRFX09QRU5JTkc6XHJcbiAgICAgICAgdCA9ICh0aW1lIC0gdGhpcy5zdGF0ZVN0YXJ0VGltZSkgLyB0aGlzLm9wZW5pbmdNb3Rpb25Nc2VjO1xyXG4gICAgICAgIGlmKHQgPj0gMSkge1xyXG4gICAgICAgICAgICB0ID0gMTtcclxuICAgICAgICAgICAgdGhpcy5leWVTdGF0ZSA9IEVZRV9TVEFURS5TVEFURV9JTlRFUlZBTDtcclxuICAgICAgICAgICAgdGhpcy5uZXh0QmxpbmtUaW1lID0gdGhpcy5jYWxjTmV4dEJsaW5rKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGV5ZVBhcmFtVmFsdWUgPSB0O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSBFWUVfU1RBVEUuU1RBVEVfSU5URVJWQUw6XHJcbiAgICAgICAgaWYodGhpcy5uZXh0QmxpbmtUaW1lIDwgdGltZSkge1xyXG4gICAgICAgICAgICB0aGlzLmV5ZVN0YXRlID0gRVlFX1NUQVRFLlNUQVRFX0NMT1NJTkc7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGVTdGFydFRpbWUgPSB0aW1lO1xyXG4gICAgICAgIH1cclxuICAgICAgICBleWVQYXJhbVZhbHVlID0gMTtcclxuICAgICAgICBicmVhaztcclxuICAgIGNhc2UgRVlFX1NUQVRFLlNUQVRFX0ZJUlNUOlxyXG4gICAgZGVmYXVsdDpcclxuICAgICAgICB0aGlzLmV5ZVN0YXRlID0gRVlFX1NUQVRFLlNUQVRFX0lOVEVSVkFMO1xyXG4gICAgICAgIHRoaXMubmV4dEJsaW5rVGltZSA9IHRoaXMuY2FsY05leHRCbGluaygpO1xyXG4gICAgICAgIGV5ZVBhcmFtVmFsdWUgPSAxO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gICAgaWYoIXRoaXMuY2xvc2VJZlplcm8pIGV5ZVBhcmFtVmFsdWUgPSAtZXllUGFyYW1WYWx1ZTtcclxuICAgIG1vZGVsLnNldFBhcmFtRmxvYXQodGhpcy5leWVJRF9MICwgZXllUGFyYW1WYWx1ZSk7XHJcbiAgICBtb2RlbC5zZXRQYXJhbUZsb2F0KHRoaXMuZXllSURfUiAsIGV5ZVBhcmFtVmFsdWUpO1xyXG59XHJcblxyXG4vLz09IGVudW0gRVlFX1NUQVRFID09XHJcbnZhciBFWUVfU1RBVEUgPSBmdW5jdGlvbigpe307XHJcblxyXG5FWUVfU1RBVEUuU1RBVEVfRklSU1QgICAgICAgICAgPSBcIlNUQVRFX0ZJUlNUXCJcclxuRVlFX1NUQVRFLlNUQVRFX0lOVEVSVkFMICAgICAgID0gXCJTVEFURV9JTlRFUlZBTFwiXHJcbkVZRV9TVEFURS5TVEFURV9DTE9TSU5HICAgICAgICA9IFwiU1RBVEVfQ0xPU0lOR1wiXHJcbkVZRV9TVEFURS5TVEFURV9DTE9TRUQgICAgICAgICA9IFwiU1RBVEVfQ0xPU0VEXCJcclxuRVlFX1NUQVRFLlNUQVRFX09QRU5JTkcgICAgICAgID0gXCJTVEFURV9PUEVOSU5HXCJcclxuLyoqXHJcbiAqXHJcbiAqICBZb3UgY2FuIG1vZGlmeSBhbmQgdXNlIHRoaXMgc291cmNlIGZyZWVseVxyXG4gKiAgb25seSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFwcGxpY2F0aW9uIHJlbGF0ZWQgTGl2ZTJELlxyXG4gKlxyXG4gKiAgKGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqL1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIGNsYXNzIEwyRE1hdHJpeDQ0ICAgICAgICAgIFxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5mdW5jdGlvbiBMMkRNYXRyaXg0NCgpXHJcbntcclxuICAgIHRoaXMudHIgICAgICAgICAgICAgID0gbmV3IEZsb2F0MzJBcnJheSgxNik7IC8vIFxyXG4gICAgdGhpcy5pZGVudGl0eSgpO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBzdGF0aWMgTDJETWF0cml4NDQubXVsKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETWF0cml4NDQubXVsICAgICAgICAgICAgID0gZnVuY3Rpb24oIGEvKmZsb2F0W10qLywgYi8qZmxvYXRbXSovLCBkc3QvKmZsb2F0W10qLyApXHJcbntcclxuICAgIHZhciBjID0gWyAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwIF07XHJcbiAgICB2YXIgbiA9IDQ7XHJcbiAgICB2YXIgaSwgaiwgaztcclxuICAgIGZvciggaSA9IDA7IGkgPCBuOyBpKysgKSB7XHJcbiAgICAgICAgZm9yKCBqID0gMDsgaiA8IG47IGorKyApIHtcclxuICAgICAgICAgICAgZm9yKCBrID0gMDsgayA8IG47IGsrKyApIHtcclxuICAgICAgICAgICAgICAgIGNbaSArIGogKiA0XSArPSBhW2kgKyBrICogNF0gKiBiW2sgKyBqICogNF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IoIGkgPSAwOyBpIDwgMTY7IGkrKyApIHtcclxuICAgICAgICBkc3RbaV0gPSBjW2ldO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNYXRyaXg0NCAjIGlkZW50aXR5KClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETWF0cml4NDQucHJvdG90eXBlLmlkZW50aXR5ICAgICAgICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgZm9yKCB2YXIgaS8qOmludCovID0gMDsgaSA8IDE2OyBpKysgKSBcclxuICAgICAgICB0aGlzLnRyW2ldID0gKCAoIGkgJSA1ICkgPT0gMCApID8gMSA6IDA7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1hdHJpeDQ0ICMgZ2V0QXJyYXkoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNYXRyaXg0NC5wcm90b3R5cGUuZ2V0QXJyYXkgICAgICAgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy50cjtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETWF0cml4NDQgIyBnZXRDb3B5TWF0cml4KClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETWF0cml4NDQucHJvdG90eXBlLmdldENvcHlNYXRyaXggICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkodGhpcy50cik7IC8vIHRoaXMudHIuY2xvbmUoKTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETWF0cml4NDQgIyBzZXRNYXRyaXgoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNYXRyaXg0NC5wcm90b3R5cGUuc2V0TWF0cml4ICAgICAgID0gZnVuY3Rpb24oIHRyLypmbG9hdFtdKi8gKVxyXG57XHJcbiAgICBpZiggdGhpcy50ciA9PSBudWxsIHx8IHRoaXMudHIubGVuZ3RoICE9IHRoaXMudHIubGVuZ3RoICkgcmV0dXJuIDtcclxuICAgIGZvciggdmFyIGkvKjppbnQqLyA9IDA7IGkgPCAxNjsgaSsrICkgdGhpcy50cltpXSA9IHRyW2ldO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNYXRyaXg0NCAjIGdldFNjYWxlWCgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRE1hdHJpeDQ0LnByb3RvdHlwZS5nZXRTY2FsZVggICAgICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLnRyWzBdO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNYXRyaXg0NCAjIGdldFNjYWxlWSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRE1hdHJpeDQ0LnByb3RvdHlwZS5nZXRTY2FsZVkgICAgICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLnRyWzVdO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNYXRyaXg0NCAjIHRyYW5zZm9ybVgoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNYXRyaXg0NC5wcm90b3R5cGUudHJhbnNmb3JtWCAgICAgID0gZnVuY3Rpb24oIHNyYy8qZmxvYXQqLyApXHJcbntcclxuICAgIHJldHVybiB0aGlzLnRyWzBdICogc3JjICsgdGhpcy50clsxMl07XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1hdHJpeDQ0ICMgdHJhbnNmb3JtWSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRE1hdHJpeDQ0LnByb3RvdHlwZS50cmFuc2Zvcm1ZICAgICAgPSBmdW5jdGlvbiggc3JjLypmbG9hdCovIClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMudHJbNV0gKiBzcmMgKyB0aGlzLnRyWzEzXTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETWF0cml4NDQgIyBpbnZlcnRUcmFuc2Zvcm1YKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETWF0cml4NDQucHJvdG90eXBlLmludmVydFRyYW5zZm9ybVggPSBmdW5jdGlvbiggc3JjLypmbG9hdCovIClcclxue1xyXG4gICAgcmV0dXJuICggc3JjIC0gdGhpcy50clsxMl0gKSAvIHRoaXMudHJbMF07XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1hdHJpeDQ0ICMgaW52ZXJ0VHJhbnNmb3JtWSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRE1hdHJpeDQ0LnByb3RvdHlwZS5pbnZlcnRUcmFuc2Zvcm1ZID0gZnVuY3Rpb24oIHNyYy8qZmxvYXQqLyApXHJcbntcclxuICAgIHJldHVybiAoIHNyYyAtIHRoaXMudHJbMTNdICkgLyB0aGlzLnRyWzVdO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNYXRyaXg0NCAjIG11bHRUcmFuc2xhdGUoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNYXRyaXg0NC5wcm90b3R5cGUubXVsdFRyYW5zbGF0ZSAgID0gZnVuY3Rpb24oIHNoaWZ0WC8qZmxvYXQqLywgc2hpZnRZLypmbG9hdCovIClcclxue1xyXG4gICAgdmFyIHRyMSA9IFsgMSwgMCwgMCwgMCwgMCwgMSwgMCwgMCwgMCwgMCwgMSwgMCwgc2hpZnRYLCBzaGlmdFksIDAsIDEgXTtcclxuICAgIEwyRE1hdHJpeDQ0Lm11bCh0cjEsIHRoaXMudHIsIHRoaXMudHIpO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNYXRyaXg0NCAjIHRyYW5zbGF0ZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRE1hdHJpeDQ0LnByb3RvdHlwZS50cmFuc2xhdGUgICAgICAgPSBmdW5jdGlvbiggeC8qZmxvYXQqLywgeS8qZmxvYXQqLyApXHJcbntcclxuICAgIHRoaXMudHJbMTJdID0geDtcclxuICAgIHRoaXMudHJbMTNdID0geTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETWF0cml4NDQgIyB0cmFuc2xhdGVYKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETWF0cml4NDQucHJvdG90eXBlLnRyYW5zbGF0ZVggICAgICA9IGZ1bmN0aW9uKCB4LypmbG9hdCovIClcclxue1xyXG4gICAgdGhpcy50clsxMl0gPSB4O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNYXRyaXg0NCAjIHRyYW5zbGF0ZVkoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNYXRyaXg0NC5wcm90b3R5cGUudHJhbnNsYXRlWSAgICAgID0gZnVuY3Rpb24oIHkvKmZsb2F0Ki8gKVxyXG57XHJcbiAgICB0aGlzLnRyWzEzXSA9IHk7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1hdHJpeDQ0ICMgbXVsdFNjYWxlKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETWF0cml4NDQucHJvdG90eXBlLm11bHRTY2FsZSAgICAgICA9IGZ1bmN0aW9uKCBzY2FsZVgvKmZsb2F0Ki8sIHNjYWxlWS8qZmxvYXQqLyApXHJcbntcclxuICAgIHZhciB0cjEgPSBbc2NhbGVYLCAwLCAwLCAwLCAwLCBzY2FsZVksIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDAsIDFdO1xyXG4gICAgTDJETWF0cml4NDQubXVsKHRyMSwgdGhpcy50ciwgdGhpcy50cik7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1hdHJpeDQ0ICMgc2NhbGUoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNYXRyaXg0NC5wcm90b3R5cGUuc2NhbGUgICAgICAgICAgID0gZnVuY3Rpb24oIHNjYWxlWC8qZmxvYXQqLywgc2NhbGVZLypmbG9hdCovIClcclxue1xyXG4gICAgdGhpcy50clswXSA9IHNjYWxlWDtcclxuICAgIHRoaXMudHJbNV0gPSBzY2FsZVk7XHJcbn1cclxuLyoqXHJcbiAqXHJcbiAqICBZb3UgY2FuIG1vZGlmeSBhbmQgdXNlIHRoaXMgc291cmNlIGZyZWVseVxyXG4gKiAgb25seSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFwcGxpY2F0aW9uIHJlbGF0ZWQgTGl2ZTJELlxyXG4gKlxyXG4gKiAgKGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqL1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIGNsYXNzIEwyRE1vZGVsTWF0cml4ICAgICAgIGV4dGVuZHMgICAgIEwyRE1hdHJpeDQ0XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmZ1bmN0aW9uIEwyRE1vZGVsTWF0cml4KHcvKmZsb2F0Ki8sIGgvKmZsb2F0Ki8pe1xyXG4gICAgTDJETWF0cml4NDQucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7XHJcbiAgICB0aGlzLndpZHRoID0gdztcclxuICAgIHRoaXMuaGVpZ2h0ID0gaDtcclxufVxyXG5cclxuLy9MMkRNb2RlbE1hdHJpeCBleHRlbmRzIEwyRE1hdHJpeDQ0XHJcbkwyRE1vZGVsTWF0cml4LnByb3RvdHlwZSA9IG5ldyBMMkRNYXRyaXg0NCgpOyBcclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1vZGVsTWF0cml4ICMgc2V0UG9zaXRpb24oKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUuc2V0UG9zaXRpb24gICAgID0gZnVuY3Rpb24oeC8qZmxvYXQqLywgeS8qZmxvYXQqLylcclxue1xyXG4gICAgdGhpcy50cmFuc2xhdGUoeCwgeSk7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1vZGVsTWF0cml4ICMgc2V0Q2VudGVyUG9zaXRpb24oKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUuc2V0Q2VudGVyUG9zaXRpb24gPSBmdW5jdGlvbih4LypmbG9hdCovLCB5LypmbG9hdCovKVxyXG57XHJcbiAgICB2YXIgdyA9IHRoaXMud2lkdGggKiB0aGlzLmdldFNjYWxlWCgpO1xyXG4gICAgdmFyIGggPSB0aGlzLmhlaWdodCAqIHRoaXMuZ2V0U2NhbGVZKCk7XHJcbiAgICB0aGlzLnRyYW5zbGF0ZSh4IC0gdyAvIDIsIHkgLSBoIC8gMik7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1vZGVsTWF0cml4ICMgdG9wKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETW9kZWxNYXRyaXgucHJvdG90eXBlLnRvcCAgICAgICAgICAgICA9IGZ1bmN0aW9uKHkvKmZsb2F0Ki8pXHJcbntcclxuICAgIHRoaXMuc2V0WSh5KTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETW9kZWxNYXRyaXggIyBib3R0b20oKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUuYm90dG9tICAgICAgICAgID0gZnVuY3Rpb24oeS8qZmxvYXQqLylcclxue1xyXG4gICAgdmFyIGggPSB0aGlzLmhlaWdodCAqIHRoaXMuZ2V0U2NhbGVZKCk7XHJcbiAgICB0aGlzLnRyYW5zbGF0ZVkoeSAtIGgpO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNb2RlbE1hdHJpeCAjIGxlZnQoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUubGVmdCAgICAgICAgICAgID0gZnVuY3Rpb24oeC8qZmxvYXQqLylcclxue1xyXG4gICAgdGhpcy5zZXRYKHgpO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNb2RlbE1hdHJpeCAjIHJpZ2h0KClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETW9kZWxNYXRyaXgucHJvdG90eXBlLnJpZ2h0ICAgICAgICAgICA9IGZ1bmN0aW9uKHgvKmZsb2F0Ki8pXHJcbntcclxuICAgIHZhciB3ID0gdGhpcy53aWR0aCAqIHRoaXMuZ2V0U2NhbGVYKCk7XHJcbiAgICB0aGlzLnRyYW5zbGF0ZVgoeCAtIHcpO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNb2RlbE1hdHJpeCAjIGNlbnRlclgoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUuY2VudGVyWCAgICAgICAgID0gZnVuY3Rpb24oeC8qZmxvYXQqLylcclxue1xyXG4gICAgdmFyIHcgPSB0aGlzLndpZHRoICogdGhpcy5nZXRTY2FsZVgoKTtcclxuICAgIHRoaXMudHJhbnNsYXRlWCh4IC0gdyAvIDIpO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNb2RlbE1hdHJpeCAjIGNlbnRlclkoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUuY2VudGVyWSAgICAgICAgID0gZnVuY3Rpb24oeS8qZmxvYXQqLylcclxue1xyXG4gICAgdmFyIGggPSB0aGlzLmhlaWdodCAqIHRoaXMuZ2V0U2NhbGVZKCk7XHJcbiAgICB0aGlzLnRyYW5zbGF0ZVkoeSAtIGggLyAyKTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETW9kZWxNYXRyaXggIyBzZXRYKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETW9kZWxNYXRyaXgucHJvdG90eXBlLnNldFggICAgICAgICAgICA9IGZ1bmN0aW9uKHgvKmZsb2F0Ki8pXHJcbntcclxuICAgIHRoaXMudHJhbnNsYXRlWCh4KTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETW9kZWxNYXRyaXggIyBzZXRZKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETW9kZWxNYXRyaXgucHJvdG90eXBlLnNldFkgICAgICAgICAgICA9IGZ1bmN0aW9uKHkvKmZsb2F0Ki8pXHJcbntcclxuICAgIHRoaXMudHJhbnNsYXRlWSh5KTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETW9kZWxNYXRyaXggIyBzZXRIZWlnaHQoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUuc2V0SGVpZ2h0ICAgICAgID0gZnVuY3Rpb24oaC8qZmxvYXQqLylcclxue1xyXG4gICAgdmFyIHNjYWxlWCA9IGggLyB0aGlzLmhlaWdodDtcclxuICAgIHZhciBzY2FsZVkgPSAtc2NhbGVYO1xyXG4gICAgdGhpcy5zY2FsZShzY2FsZVgsIHNjYWxlWSk7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1vZGVsTWF0cml4ICMgc2V0V2lkdGgoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb2RlbE1hdHJpeC5wcm90b3R5cGUuc2V0V2lkdGggICAgICAgID0gZnVuY3Rpb24ody8qZmxvYXQqLylcclxue1xyXG4gICAgdmFyIHNjYWxlWCA9IHcgLyB0aGlzLndpZHRoO1xyXG4gICAgdmFyIHNjYWxlWSA9IC1zY2FsZVg7XHJcbiAgICB0aGlzLnNjYWxlKHNjYWxlWCwgc2NhbGVZKTtcclxufVxyXG5cclxuLyoqXHJcbiAqXHJcbiAqICBZb3UgY2FuIG1vZGlmeSBhbmQgdXNlIHRoaXMgc291cmNlIGZyZWVseVxyXG4gKiAgb25seSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFwcGxpY2F0aW9uIHJlbGF0ZWQgTGl2ZTJELlxyXG4gKlxyXG4gKiAgKGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqL1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIGNsYXNzIEwyRE1vdGlvbk1hbmFnZXIgICAgIGV4dGVuZHMgICAgIE1vdGlvblF1ZXVlTWFuYWdlclxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5mdW5jdGlvbiBMMkRNb3Rpb25NYW5hZ2VyKClcclxue1xyXG4gICAgTW90aW9uUXVldWVNYW5hZ2VyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMpO1xyXG4gICAgdGhpcy5jdXJyZW50UHJpb3JpdHkgPSBudWxsO1xyXG4gICAgdGhpcy5yZXNlcnZlUHJpb3JpdHkgPSBudWxsO1xyXG4gICAgXHJcbiAgICB0aGlzLnN1cGVyID0gTW90aW9uUXVldWVNYW5hZ2VyLnByb3RvdHlwZTtcclxufVxyXG5cclxuLy8gTW90aW9uUXVldWVNYW5hZ2Vy44Kv44Op44K544KS57aZ5om/XHJcbkwyRE1vdGlvbk1hbmFnZXIucHJvdG90eXBlID0gbmV3IE1vdGlvblF1ZXVlTWFuYWdlcigpO1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETW90aW9uTWFuYWdlciAjIGdldEN1cnJlbnRQcmlvcml0eSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRE1vdGlvbk1hbmFnZXIucHJvdG90eXBlLmdldEN1cnJlbnRQcmlvcml0eSA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMuY3VycmVudFByaW9yaXR5O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNb3Rpb25NYW5hZ2VyICMgZ2V0UmVzZXJ2ZVByaW9yaXR5KClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETW90aW9uTWFuYWdlci5wcm90b3R5cGUuZ2V0UmVzZXJ2ZVByaW9yaXR5ID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5yZXNlcnZlUHJpb3JpdHk7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRE1vdGlvbk1hbmFnZXIgIyByZXNlcnZlTW90aW9uKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETW90aW9uTWFuYWdlci5wcm90b3R5cGUucmVzZXJ2ZU1vdGlvbiAgID0gZnVuY3Rpb24ocHJpb3JpdHkvKmludCovKVxyXG57XHJcbiAgICBpZih0aGlzLnJlc2VydmVQcmlvcml0eSA+PSBwcmlvcml0eSkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuY3VycmVudFByaW9yaXR5ID49IHByaW9yaXR5KSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB0aGlzLnJlc2VydmVQcmlvcml0eSA9IHByaW9yaXR5O1xyXG4gICAgXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJETW90aW9uTWFuYWdlciAjIHNldFJlc2VydmVQcmlvcml0eSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRE1vdGlvbk1hbmFnZXIucHJvdG90eXBlLnNldFJlc2VydmVQcmlvcml0eSA9IGZ1bmN0aW9uKHZhbC8qaW50Ki8pXHJcbntcclxuICAgIHRoaXMucmVzZXJ2ZVByaW9yaXR5ID0gdmFsO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNb3Rpb25NYW5hZ2VyICMgdXBkYXRlUGFyYW0oKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRNb3Rpb25NYW5hZ2VyLnByb3RvdHlwZS51cGRhdGVQYXJhbSAgICAgPSBmdW5jdGlvbihtb2RlbC8qQUxpdmUyRE1vZGVsKi8pXHJcbntcclxuICAgIHZhciB1cGRhdGVkID0gTW90aW9uUXVldWVNYW5hZ2VyLnByb3RvdHlwZS51cGRhdGVQYXJhbS5jYWxsKHRoaXMsIG1vZGVsKTtcclxuICAgIFxyXG4gICAgaWYodGhpcy5pc0ZpbmlzaGVkKCkpIHtcclxuICAgICAgICB0aGlzLmN1cnJlbnRQcmlvcml0eSA9IDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHJldHVybiB1cGRhdGVkO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRNb3Rpb25NYW5hZ2VyICMgc3RhcnRNb3Rpb25QcmlvKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJETW90aW9uTWFuYWdlci5wcm90b3R5cGUuc3RhcnRNb3Rpb25QcmlvID0gZnVuY3Rpb24obW90aW9uLypBTW90aW9uKi8sIHByaW9yaXR5LyppbnQqLylcclxue1xyXG4gICAgaWYocHJpb3JpdHkgPT0gdGhpcy5yZXNlcnZlUHJpb3JpdHkpIHtcclxuICAgICAgICB0aGlzLnJlc2VydmVQcmlvcml0eSA9IDA7XHJcbiAgICB9XHJcbiAgICB0aGlzLmN1cnJlbnRQcmlvcml0eSA9IHByaW9yaXR5O1xyXG4gICAgcmV0dXJuIHRoaXMuc3RhcnRNb3Rpb24obW90aW9uLCBmYWxzZSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKlxyXG4gKiAgWW91IGNhbiBtb2RpZnkgYW5kIHVzZSB0aGlzIHNvdXJjZSBmcmVlbHlcclxuICogIG9ubHkgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBhcHBsaWNhdGlvbiByZWxhdGVkIExpdmUyRC5cclxuICpcclxuICogIChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKi9cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICBjbGFzcyBMMkRQaHlzaWNzICAgICAgICAgICBcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuZnVuY3Rpb24gTDJEUGh5c2ljcygpXHJcbnsgXHJcbiAgICB0aGlzLnBoeXNpY3NMaXN0ID0gbmV3IEFycmF5KCk7IC8vQXJyYXlMaXN0PFBoeXNpY3NIYWlyPlxyXG4gICAgdGhpcy5zdGFydFRpbWVNU2VjID0gVXRTeXN0ZW0uZ2V0VXNlclRpbWVNU2VjKCk7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIHN0YXRpYyBMMkRQaHlzaWNzLmxvYWQoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRQaHlzaWNzLmxvYWQgICAgICAgICAgICA9IGZ1bmN0aW9uKGJ1ZiAvKmJ5dGVbXSovIClcclxue1xyXG4gICAgdmFyIHJldCA9IG5ldyBMMkRQaHlzaWNzKCk7IC8vTDJEUGh5c2ljc0wyRFBoeXNpY3NcclxuICAgIHZhciBwbSA9IExpdmUyREZyYW1ld29yay5nZXRQbGF0Zm9ybU1hbmFnZXIoKTtcclxuICAgIHZhciBqc29uID0gcG0uanNvblBhcnNlRnJvbUJ5dGVzKGJ1Zik7XHJcbiAgICB2YXIgcGFyYW1zID0ganNvbi5waHlzaWNzX2hhaXI7XHJcbiAgICB2YXIgcGFyYW1OdW0gPSBwYXJhbXMubGVuZ3RoO1xyXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHBhcmFtTnVtOyBpKyspIHtcclxuICAgICAgICB2YXIgcGFyYW0gPSBwYXJhbXNbaV07IC8vVmFsdWVcclxuICAgICAgICB2YXIgcGh5c2ljcyA9IG5ldyBQaHlzaWNzSGFpcigpOyAvL1BoeXNpY3NIYWlyUGh5c2ljc0hhaXJcclxuICAgICAgICB2YXIgc2V0dXAgPSBwYXJhbS5zZXR1cDsgLy9WYWx1ZVxyXG4gICAgICAgIHZhciBsZW5ndGggPSBwYXJzZUZsb2F0KHNldHVwLmxlbmd0aCk7XHJcbiAgICAgICAgdmFyIHJlc2lzdCA9IHBhcnNlRmxvYXQoc2V0dXAucmVnaXN0KTtcclxuICAgICAgICB2YXIgbWFzcyA9IHBhcnNlRmxvYXQoc2V0dXAubWFzcyk7XHJcbiAgICAgICAgcGh5c2ljcy5zZXR1cChsZW5ndGgsIHJlc2lzdCwgbWFzcyk7XHJcbiAgICAgICAgdmFyIHNyY0xpc3QgPSBwYXJhbS5zcmM7IC8vVmFsdWVcclxuICAgICAgICB2YXIgc3JjTnVtID0gc3JjTGlzdC5sZW5ndGg7XHJcbiAgICAgICAgZm9yKHZhciBqID0gMDsgaiA8IHNyY051bTsgaisrKSB7XHJcbiAgICAgICAgICAgIHZhciBzcmMgPSBzcmNMaXN0W2pdOyAvL1ZhbHVlXHJcbiAgICAgICAgICAgIHZhciBpZCA9IHNyYy5pZDsgLy9TdHJpbmdcclxuICAgICAgICAgICAgdmFyIHR5cGUgPSBQaHlzaWNzSGFpci5TcmMuU1JDX1RPX1g7XHJcbiAgICAgICAgICAgIHZhciB0eXBlU3RyID0gc3JjLnB0eXBlOyAvL1N0cmluZ1xyXG4gICAgICAgICAgICBpZih0eXBlU3RyID09PSBcInhcIikge1xyXG4gICAgICAgICAgICAgICAgdHlwZSA9IFBoeXNpY3NIYWlyLlNyYy5TUkNfVE9fWDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmKHR5cGVTdHIgPT09IFwieVwiKSB7XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gUGh5c2ljc0hhaXIuU3JjLlNSQ19UT19ZO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYodHlwZVN0ciA9PT0gXCJhbmdsZVwiKSB7XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gUGh5c2ljc0hhaXIuU3JjLlNSQ19UT19HX0FOR0xFO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgVXREZWJ1Zy5lcnJvcihcImxpdmUyZFwiLCBcIkludmFsaWQgcGFyYW1ldGVyOlBoeXNpY3NIYWlyLlNyY1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgc2NhbGUgPSBwYXJzZUZsb2F0KHNyYy5zY2FsZSk7XHJcbiAgICAgICAgICAgIHZhciB3ZWlnaHQgPSBwYXJzZUZsb2F0KHNyYy53ZWlnaHQpO1xyXG4gICAgICAgICAgICBwaHlzaWNzLmFkZFNyY1BhcmFtKHR5cGUsIGlkLCBzY2FsZSwgd2VpZ2h0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHRhcmdldExpc3QgPSBwYXJhbS50YXJnZXRzOyAvL1ZhbHVlXHJcbiAgICAgICAgdmFyIHRhcmdldE51bSA9IHRhcmdldExpc3QubGVuZ3RoO1xyXG4gICAgICAgIGZvcih2YXIgaiA9IDA7IGogPCB0YXJnZXROdW07IGorKykge1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gdGFyZ2V0TGlzdFtqXTsgLy9WYWx1ZVxyXG4gICAgICAgICAgICB2YXIgaWQgPSB0YXJnZXQuaWQ7IC8vU3RyaW5nXHJcbiAgICAgICAgICAgIHZhciB0eXBlID0gUGh5c2ljc0hhaXIuVGFyZ2V0LlRBUkdFVF9GUk9NX0FOR0xFO1xyXG4gICAgICAgICAgICB2YXIgdHlwZVN0ciA9IHRhcmdldC5wdHlwZTsgLy9TdHJpbmdcclxuICAgICAgICAgICAgaWYodHlwZVN0ciA9PT0gXCJhbmdsZVwiKSB7XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gUGh5c2ljc0hhaXIuVGFyZ2V0LlRBUkdFVF9GUk9NX0FOR0xFO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYodHlwZVN0ciA9PT0gXCJhbmdsZV92XCIpIHtcclxuICAgICAgICAgICAgICAgIHR5cGUgPSBQaHlzaWNzSGFpci5UYXJnZXQuVEFSR0VUX0ZST01fQU5HTEVfVjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIFV0RGVidWcuZXJyb3IoXCJsaXZlMmRcIiwgXCJJbnZhbGlkIHBhcmFtZXRlcjpQaHlzaWNzSGFpci5UYXJnZXRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHNjYWxlID0gcGFyc2VGbG9hdCh0YXJnZXQuc2NhbGUpO1xyXG4gICAgICAgICAgICB2YXIgd2VpZ2h0ID0gcGFyc2VGbG9hdCh0YXJnZXQud2VpZ2h0KTtcclxuICAgICAgICAgICAgcGh5c2ljcy5hZGRUYXJnZXRQYXJhbSh0eXBlLCBpZCwgc2NhbGUsIHdlaWdodCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldC5waHlzaWNzTGlzdC5wdXNoKHBoeXNpY3MpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJldDtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEUGh5c2ljcyAjIHVwZGF0ZVBhcmFtKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEUGh5c2ljcy5wcm90b3R5cGUudXBkYXRlUGFyYW0gICAgID0gZnVuY3Rpb24obW9kZWwvKkFMaXZlMkRNb2RlbCovKVxyXG57XHJcbiAgICB2YXIgdGltZU1TZWMgPSBVdFN5c3RlbS5nZXRVc2VyVGltZU1TZWMoKSAtIHRoaXMuc3RhcnRUaW1lTVNlYztcclxuICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLnBoeXNpY3NMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdGhpcy5waHlzaWNzTGlzdFtpXS51cGRhdGUobW9kZWwsIHRpbWVNU2VjKTtcclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqXHJcbiAqICBZb3UgY2FuIG1vZGlmeSBhbmQgdXNlIHRoaXMgc291cmNlIGZyZWVseVxyXG4gKiAgb25seSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFwcGxpY2F0aW9uIHJlbGF0ZWQgTGl2ZTJELlxyXG4gKlxyXG4gKiAgKGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqL1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIGNsYXNzIEwyRFBvc2UgICAgICAgICAgICAgIFxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5mdW5jdGlvbiBMMkRQb3NlKClcclxue1xyXG4gICAgdGhpcy5sYXN0VGltZSAgICAgICAgPSAwO1xyXG4gICAgdGhpcy5sYXN0TW9kZWwgICAgICAgPSBudWxsOyAvL0FMaXZlMkRNb2RlbFxyXG4gICAgdGhpcy5wYXJ0c0dyb3VwcyA9IG5ldyBBcnJheSgpOyAvL0FycmF5TGlzdDxMMkRQYXJ0c1BhcmFtW10+XHJcbn1cclxuXHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBzdGF0aWMgTDJEUG9zZS5sb2FkKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEUG9zZS5sb2FkICAgICAgICAgICAgPSBmdW5jdGlvbihidWYvKmJ5dGVbXSovKVxyXG57ICAgIFxyXG4gICAgdmFyIHJldCA9IG5ldyBMMkRQb3NlKCk7IC8vTDJEUG9zZVxyXG4gICAgdmFyIHBtID0gTGl2ZTJERnJhbWV3b3JrLmdldFBsYXRmb3JtTWFuYWdlcigpO1xyXG4gICAgdmFyIGpzb24gPSBwbS5qc29uUGFyc2VGcm9tQnl0ZXMoYnVmKTtcclxuICAgIHZhciBwb3NlTGlzdEluZm8gPSBqc29uLnBhcnRzX3Zpc2libGU7IC8vVmFsdWVcclxuICAgIHZhciBwb3NlTnVtID0gcG9zZUxpc3RJbmZvLmxlbmd0aDtcclxuICAgIGZvcih2YXIgaV9wb3NlID0gMDsgaV9wb3NlIDwgcG9zZU51bTsgaV9wb3NlKyspIHtcclxuICAgICAgICB2YXIgcG9zZUluZm8gPSBwb3NlTGlzdEluZm9baV9wb3NlXTsgLy9WYWx1ZVxyXG4gICAgICAgIHZhciBpZExpc3RJbmZvID0gcG9zZUluZm8uZ3JvdXA7IC8vVmFsdWVcclxuICAgICAgICB2YXIgaWROdW0gPSBpZExpc3RJbmZvLmxlbmd0aDtcclxuICAgICAgICB2YXIgcGFydHNHcm91cC8qTDJEUGFydHNQYXJhbSovID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgZm9yKHZhciBpX2dyb3VwID0gMDsgaV9ncm91cCA8IGlkTnVtOyBpX2dyb3VwKyspIHtcclxuICAgICAgICAgICAgdmFyIHBhcnRzSW5mbyA9IGlkTGlzdEluZm9baV9ncm91cF07IC8vVmFsdWVcclxuICAgICAgICAgICAgdmFyIHBhcnRzID0gbmV3IEwyRFBhcnRzUGFyYW0ocGFydHNJbmZvLmlkKTsgLy9MMkRQYXJ0c1BhcmFtTDJEUGFydHNQYXJhbVxyXG4gICAgICAgICAgICBwYXJ0c0dyb3VwW2lfZ3JvdXBdID0gcGFydHM7XHJcbiAgICAgICAgICAgIGlmKHBhcnRzSW5mby5saW5rID09IG51bGwpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB2YXIgbGlua0xpc3RJbmZvID0gcGFydHNJbmZvLmxpbms7IC8vVmFsdWVcclxuICAgICAgICAgICAgdmFyIGxpbmtOdW0gPSBsaW5rTGlzdEluZm8ubGVuZ3RoO1xyXG4gICAgICAgICAgICBwYXJ0cy5saW5rID0gbmV3IEFycmF5KCk7IC8vQXJyYXlMaXN0PEwyRFBhcnRzUGFyYW0+XHJcbiAgICAgICAgICAgIGZvcih2YXIgaV9saW5rID0gMDsgaV9saW5rIDwgbGlua051bTsgaV9saW5rKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBsaW5rUGFydHMgPSBuZXcgTDJEUGFydHNQYXJhbShsaW5rTGlzdEluZm9baV9saW5rXSk7IC8vTDJEUGFydHNQYXJhbUwyRFBhcnRzUGFyYW1cclxuICAgICAgICAgICAgICAgIHBhcnRzLmxpbmsucHVzaChsaW5rUGFydHMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldC5wYXJ0c0dyb3Vwcy5wdXNoKHBhcnRzR3JvdXApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZXR1cm4gcmV0O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRQb3NlICMgdXBkYXRlUGFyYW0oKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRQb3NlLnByb3RvdHlwZS51cGRhdGVQYXJhbSAgICAgPSBmdW5jdGlvbihtb2RlbC8qQUxpdmUyRE1vZGVsKi8pXHJcbntcclxuICAgIGlmKG1vZGVsID09IG51bGwpIHJldHVybiA7XHJcbiAgICBcclxuICAgIGlmKCEobW9kZWwgPT0gdGhpcy5sYXN0TW9kZWwpKSB7XHJcbiAgICAgICAgdGhpcy5pbml0UGFyYW0obW9kZWwpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5sYXN0TW9kZWwgPSBtb2RlbDtcclxuICAgIFxyXG4gICAgdmFyIGN1clRpbWUgPSBVdFN5c3RlbS5nZXRVc2VyVGltZU1TZWMoKTtcclxuICAgIHZhciBkZWx0YVRpbWVTZWMgPSAoKHRoaXMubGFzdFRpbWUgPT0gMCkgPyAwIDogKGN1clRpbWUgLSB0aGlzLmxhc3RUaW1lKSAvIDEwMDAuMCk7XHJcbiAgICB0aGlzLmxhc3RUaW1lID0gY3VyVGltZTtcclxuICAgIGlmKGRlbHRhVGltZVNlYyA8IDApIGRlbHRhVGltZVNlYyA9IDA7XHJcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5wYXJ0c0dyb3Vwcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHRoaXMubm9ybWFsaXplUGFydHNPcGFjaXR5R3JvdXAobW9kZWwsIHRoaXMucGFydHNHcm91cHNbaV0sIGRlbHRhVGltZVNlYyk7XHJcbiAgICAgICAgdGhpcy5jb3B5T3BhY2l0eU90aGVyUGFydHMobW9kZWwsIHRoaXMucGFydHNHcm91cHNbaV0pO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRQb3NlICMgaW5pdFBhcmFtKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEUG9zZS5wcm90b3R5cGUuaW5pdFBhcmFtICAgICAgID0gZnVuY3Rpb24obW9kZWwvKkFMaXZlMkRNb2RlbCovKVxyXG57XHJcbiAgICBpZihtb2RlbCA9PSBudWxsKSByZXR1cm4gO1xyXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMucGFydHNHcm91cHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB2YXIgcGFydHNHcm91cCA9IHRoaXMucGFydHNHcm91cHNbaV07IC8vTDJEUGFydHNQYXJhbVxyXG4gICAgICAgIGZvcih2YXIgaiA9IDA7IGogPCBwYXJ0c0dyb3VwLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgIHBhcnRzR3JvdXBbal0uaW5pdEluZGV4KG1vZGVsKTtcclxuICAgICAgICAgICAgdmFyIHBhcnRzSW5kZXggPSBwYXJ0c0dyb3VwW2pdLnBhcnRzSW5kZXg7XHJcbiAgICAgICAgICAgIHZhciBwYXJhbUluZGV4ID0gcGFydHNHcm91cFtqXS5wYXJhbUluZGV4O1xyXG4gICAgICAgICAgICBpZihwYXJ0c0luZGV4IDwgMCkgY29udGludWU7XHJcbiAgICAgICAgICAgIHZhciB2Lyo6Qm9vbGVhbiovID0gKG1vZGVsLmdldFBhcmFtRmxvYXQocGFyYW1JbmRleCkgIT0gMCk7XHJcbiAgICAgICAgICAgIG1vZGVsLnNldFBhcnRzT3BhY2l0eShwYXJ0c0luZGV4LCAodiA/IDEuMCA6IDAuMCkpO1xyXG4gICAgICAgICAgICBtb2RlbC5zZXRQYXJhbUZsb2F0KHBhcmFtSW5kZXgsICh2ID8gMS4wIDogMC4wKSk7XHJcbiAgICAgICAgICAgIGlmKHBhcnRzR3JvdXBbal0ubGluayA9PSBudWxsKSBjb250aW51ZTtcclxuICAgICAgICAgICAgZm9yKHZhciBrID0gMDsgayA8IHBhcnRzR3JvdXBbal0ubGluay5sZW5ndGg7IGsrKykge1xyXG4gICAgICAgICAgICAgICAgcGFydHNHcm91cFtqXS5saW5rW2tdLmluaXRJbmRleChtb2RlbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFBvc2UgIyBub3JtYWxpemVQYXJ0c09wYWNpdHlHcm91cCgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFBvc2UucHJvdG90eXBlLm5vcm1hbGl6ZVBhcnRzT3BhY2l0eUdyb3VwID0gZnVuY3Rpb24obW9kZWwvKkFMaXZlMkRNb2RlbCovLCBwYXJ0c0dyb3VwLypMMkRQYXJ0c1BhcmFtW10qLywgZGVsdGFUaW1lU2VjLypmbG9hdCovKVxyXG57XHJcbiAgICB2YXIgdmlzaWJsZVBhcnRzID0gLTE7XHJcbiAgICB2YXIgdmlzaWJsZU9wYWNpdHkgPSAxLjA7XHJcbiAgICB2YXIgQ0xFQVJfVElNRV9TRUMgPSAwLjU7XHJcbiAgICB2YXIgcGhpID0gMC41O1xyXG4gICAgdmFyIG1heEJhY2tPcGFjaXR5ID0gMC4xNTtcclxuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwYXJ0c0dyb3VwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHBhcnRzSW5kZXggPSBwYXJ0c0dyb3VwW2ldLnBhcnRzSW5kZXg7XHJcbiAgICAgICAgdmFyIHBhcmFtSW5kZXggPSBwYXJ0c0dyb3VwW2ldLnBhcmFtSW5kZXg7XHJcbiAgICAgICAgaWYocGFydHNJbmRleCA8IDApIGNvbnRpbnVlO2lmKG1vZGVsLmdldFBhcmFtRmxvYXQocGFyYW1JbmRleCkgIT0gMCkge1xyXG4gICAgICAgICAgICBpZih2aXNpYmxlUGFydHMgPj0gMCkge1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmlzaWJsZVBhcnRzID0gaTtcclxuICAgICAgICAgICAgdmlzaWJsZU9wYWNpdHkgPSBtb2RlbC5nZXRQYXJ0c09wYWNpdHkocGFydHNJbmRleCk7XHJcbiAgICAgICAgICAgIHZpc2libGVPcGFjaXR5ICs9IGRlbHRhVGltZVNlYyAvIENMRUFSX1RJTUVfU0VDO1xyXG4gICAgICAgICAgICBpZih2aXNpYmxlT3BhY2l0eSA+IDEpIHtcclxuICAgICAgICAgICAgICAgIHZpc2libGVPcGFjaXR5ID0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKHZpc2libGVQYXJ0cyA8IDApIHtcclxuICAgICAgICB2aXNpYmxlUGFydHMgPSAwO1xyXG4gICAgICAgIHZpc2libGVPcGFjaXR5ID0gMTtcclxuICAgIH1cclxuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwYXJ0c0dyb3VwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHBhcnRzSW5kZXggPSBwYXJ0c0dyb3VwW2ldLnBhcnRzSW5kZXg7XHJcbiAgICAgICAgaWYocGFydHNJbmRleCA8IDApIGNvbnRpbnVlO2lmKHZpc2libGVQYXJ0cyA9PSBpKSB7XHJcbiAgICAgICAgICAgIG1vZGVsLnNldFBhcnRzT3BhY2l0eShwYXJ0c0luZGV4LCB2aXNpYmxlT3BhY2l0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgb3BhY2l0eSA9IG1vZGVsLmdldFBhcnRzT3BhY2l0eShwYXJ0c0luZGV4KTtcclxuICAgICAgICAgICAgdmFyIGExO1xyXG4gICAgICAgICAgICBpZih2aXNpYmxlT3BhY2l0eSA8IHBoaSkge1xyXG4gICAgICAgICAgICAgICAgYTEgPSB2aXNpYmxlT3BhY2l0eSAqIChwaGkgLSAxKSAvIHBoaSArIDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhMSA9ICgxIC0gdmlzaWJsZU9wYWNpdHkpICogcGhpIC8gKDEgLSBwaGkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBiYWNrT3AgPSAoMSAtIGExKSAqICgxIC0gdmlzaWJsZU9wYWNpdHkpO1xyXG4gICAgICAgICAgICBpZihiYWNrT3AgPiBtYXhCYWNrT3BhY2l0eSkge1xyXG4gICAgICAgICAgICAgICAgYTEgPSAxIC0gbWF4QmFja09wYWNpdHkgLyAoMSAtIHZpc2libGVPcGFjaXR5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihvcGFjaXR5ID4gYTEpIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHkgPSBhMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBtb2RlbC5zZXRQYXJ0c09wYWNpdHkocGFydHNJbmRleCwgb3BhY2l0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRQb3NlICMgY29weU9wYWNpdHlPdGhlclBhcnRzKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEUG9zZS5wcm90b3R5cGUuY29weU9wYWNpdHlPdGhlclBhcnRzID0gZnVuY3Rpb24obW9kZWwvKkFMaXZlMkRNb2RlbCovLCBwYXJ0c0dyb3VwLypMMkRQYXJ0c1BhcmFtW10qLylcclxue1xyXG4gICAgZm9yKHZhciBpX2dyb3VwID0gMDsgaV9ncm91cCA8IHBhcnRzR3JvdXAubGVuZ3RoOyBpX2dyb3VwKyspIHtcclxuICAgICAgICB2YXIgcGFydHNQYXJhbSA9IHBhcnRzR3JvdXBbaV9ncm91cF07IC8vTDJEUGFydHNQYXJhbVxyXG4gICAgICAgIGlmKHBhcnRzUGFyYW0ubGluayA9PSBudWxsKSBjb250aW51ZTtcclxuICAgICAgICBpZihwYXJ0c1BhcmFtLnBhcnRzSW5kZXggPCAwKSBjb250aW51ZTtcclxuICAgICAgICB2YXIgb3BhY2l0eSA9IG1vZGVsLmdldFBhcnRzT3BhY2l0eShwYXJ0c1BhcmFtLnBhcnRzSW5kZXgpO1xyXG4gICAgICAgIGZvcih2YXIgaV9saW5rID0gMDsgaV9saW5rIDwgcGFydHNQYXJhbS5saW5rLmxlbmd0aDsgaV9saW5rKyspIHtcclxuICAgICAgICAgICAgdmFyIGxpbmtQYXJ0cyA9IHBhcnRzUGFyYW0ubGlua1tpX2xpbmtdOyAvL0wyRFBhcnRzUGFyYW1cclxuICAgICAgICAgICAgaWYobGlua1BhcnRzLnBhcnRzSW5kZXggPCAwKSBjb250aW51ZTtcclxuICAgICAgICAgICAgbW9kZWwuc2V0UGFydHNPcGFjaXR5KGxpbmtQYXJ0cy5wYXJ0c0luZGV4LCBvcGFjaXR5KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICBjbGFzcyBMMkRQYXJ0c1BhcmFtICAgICAgICBcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuZnVuY3Rpb24gTDJEUGFydHNQYXJhbShpZC8qU3RyaW5nKi8pe1xyXG4gICAgdGhpcy5wYXJhbUluZGV4ICAgICAgPSAtMTtcclxuICAgIHRoaXMucGFydHNJbmRleCAgICAgID0gLTE7IFxyXG4gICAgdGhpcy5saW5rICAgICAgICAgICAgPSBudWxsOyAvLyBBcnJheUxpc3Q8TDJEUGFydHNQYXJhbT5cclxuICAgIHRoaXMuaWQgPSBpZDtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEUGFydHNQYXJhbSAjIGluaXRJbmRleCgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFBhcnRzUGFyYW0ucHJvdG90eXBlLmluaXRJbmRleCAgICAgICA9IGZ1bmN0aW9uKG1vZGVsLypBTGl2ZTJETW9kZWwqLylcclxueyAgIFxyXG4gICAgdGhpcy5wYXJhbUluZGV4ID0gbW9kZWwuZ2V0UGFyYW1JbmRleChcIlZJU0lCTEU6XCIgKyB0aGlzLmlkKTtcclxuICAgIHRoaXMucGFydHNJbmRleCA9IG1vZGVsLmdldFBhcnRzRGF0YUluZGV4KFBhcnRzRGF0YUlELmdldElEKHRoaXMuaWQpKTtcclxuICAgIG1vZGVsLnNldFBhcmFtRmxvYXQodGhpcy5wYXJhbUluZGV4LCAxKTtcclxufVxyXG4vKipcclxuICpcclxuICogIFlvdSBjYW4gbW9kaWZ5IGFuZCB1c2UgdGhpcyBzb3VyY2UgZnJlZWx5XHJcbiAqICBvbmx5IGZvciB0aGUgZGV2ZWxvcG1lbnQgb2YgYXBwbGljYXRpb24gcmVsYXRlZCBMaXZlMkQuXHJcbiAqXHJcbiAqICAoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICovXHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgY2xhc3MgTDJEVGFyZ2V0UG9pbnQgICAgICAgXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmZ1bmN0aW9uIEwyRFRhcmdldFBvaW50KClcclxue1xyXG4gICAgdGhpcy5FUFNJTE9OICAgICAgICAgPSAwLjAxOyAvLyDlpInljJbjga7mnIDlsI/lgKTvvIjjgZPjga7lgKTku6XkuIvjga/nhKHoppbjgZXjgozjgovvvIlcclxuICAgIHRoaXMuZmFjZVRhcmdldFggICAgID0gMDtcclxuICAgIHRoaXMuZmFjZVRhcmdldFkgICAgID0gMDtcclxuICAgIHRoaXMuZmFjZVggICAgICAgICAgID0gMDtcclxuICAgIHRoaXMuZmFjZVkgICAgICAgICAgID0gMDtcclxuICAgIHRoaXMuZmFjZVZYICAgICAgICAgID0gMDtcclxuICAgIHRoaXMuZmFjZVZZICAgICAgICAgID0gMDtcclxuICAgIHRoaXMubGFzdFRpbWVTZWMgICAgID0gMDtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVGFyZ2V0UG9pbnQuRlJBTUVfUkFURSAgPSAzMDtcclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFRhcmdldFBvaW50ICMgc2V0KClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVGFyZ2V0UG9pbnQucHJvdG90eXBlLnNldFBvaW50ID0gZnVuY3Rpb24oeC8qZmxvYXQqLywgeS8qZmxvYXQqLylcclxue1xyXG4gICAgdGhpcy5mYWNlVGFyZ2V0WCA9IHg7XHJcbiAgICB0aGlzLmZhY2VUYXJnZXRZID0geTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEVGFyZ2V0UG9pbnQgIyBnZXRYKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVGFyZ2V0UG9pbnQucHJvdG90eXBlLmdldFggICAgICAgICAgICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMuZmFjZVg7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFRhcmdldFBvaW50ICMgZ2V0WSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFRhcmdldFBvaW50LnByb3RvdHlwZS5nZXRZICAgICAgICAgICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLmZhY2VZO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRUYXJnZXRQb2ludCAjIHVwZGF0ZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFRhcmdldFBvaW50LnByb3RvdHlwZS51cGRhdGUgICAgICAgICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgdmFyIFRJTUVfVE9fTUFYX1NQRUVEID0gMC4xNTtcclxuICAgdmFyIEZBQ0VfUEFSQU1fTUFYX1YgPSA0MC4wIC8gNy41O1xyXG4gICB2YXIgTUFYX1YgPSBGQUNFX1BBUkFNX01BWF9WIC8gTDJEVGFyZ2V0UG9pbnQuRlJBTUVfUkFURTtcclxuICAgIGlmKHRoaXMubGFzdFRpbWVTZWMgPT0gMCkge1xyXG4gICAgICAgIHRoaXMubGFzdFRpbWVTZWMgPSBVdFN5c3RlbS5nZXRVc2VyVGltZU1TZWMoKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB2YXIgY3VyVGltZVNlYyA9IFV0U3lzdGVtLmdldFVzZXJUaW1lTVNlYygpO1xyXG4gICAgdmFyIGRlbHRhVGltZVdlaWdodCA9IChjdXJUaW1lU2VjIC0gdGhpcy5sYXN0VGltZVNlYykgKiBMMkRUYXJnZXRQb2ludC5GUkFNRV9SQVRFIC8gMTAwMC4wO1xyXG4gICAgdGhpcy5sYXN0VGltZVNlYyA9IGN1clRpbWVTZWM7XHJcbiAgIHZhciBGUkFNRV9UT19NQVhfU1BFRUQgPSBUSU1FX1RPX01BWF9TUEVFRCAqIEwyRFRhcmdldFBvaW50LkZSQU1FX1JBVEU7XHJcbiAgIHZhciBNQVhfQSA9IGRlbHRhVGltZVdlaWdodCAqIE1BWF9WIC8gRlJBTUVfVE9fTUFYX1NQRUVEO1xyXG4gICAgdmFyIGR4ID0gKHRoaXMuZmFjZVRhcmdldFggLSB0aGlzLmZhY2VYKTtcclxuICAgIHZhciBkeSA9ICh0aGlzLmZhY2VUYXJnZXRZIC0gdGhpcy5mYWNlWSk7XHJcbiAgICAvLyBpZihkeCA9PSAwICYmIGR5ID09IDApIHJldHVybjtcclxuICAgIGlmKCBNYXRoLmFicyhkeCkgPD0gdGhpcy5FUFNJTE9OICYmIE1hdGguYWJzKGR5KSA8PSB0aGlzLkVQU0lMT04gKSByZXR1cm47XHJcbiAgICB2YXIgZCA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XHJcbiAgICB2YXIgdnggPSBNQVhfViAqIGR4IC8gZDtcclxuICAgIHZhciB2eSA9IE1BWF9WICogZHkgLyBkO1xyXG4gICAgdmFyIGF4ID0gdnggLSB0aGlzLmZhY2VWWDtcclxuICAgIHZhciBheSA9IHZ5IC0gdGhpcy5mYWNlVlk7XHJcbiAgICB2YXIgYSA9ICBNYXRoLnNxcnQoYXggKiBheCArIGF5ICogYXkpO1xyXG4gICAgaWYoYSA8IC1NQVhfQSB8fCBhID4gTUFYX0EpIHtcclxuICAgICAgICBheCAqPSBNQVhfQSAvIGE7XHJcbiAgICAgICAgYXkgKj0gTUFYX0EgLyBhO1xyXG4gICAgICAgIGEgPSBNQVhfQTtcclxuICAgIH1cclxuICAgIHRoaXMuZmFjZVZYICs9IGF4O1xyXG4gICAgdGhpcy5mYWNlVlkgKz0gYXk7XHJcbiAgICB7XHJcbiAgICAgICAgdmFyIG1heF92ID0gMC41ICogKCBNYXRoLnNxcnQoTUFYX0EgKiBNQVhfQSArIDE2ICogTUFYX0EgKiBkIC0gOCAqIE1BWF9BICogZCkgLSBNQVhfQSk7XHJcbiAgICAgICAgdmFyIGN1cl92ID0gIE1hdGguc3FydCh0aGlzLmZhY2VWWCAqIHRoaXMuZmFjZVZYICsgdGhpcy5mYWNlVlkgKiB0aGlzLmZhY2VWWSk7XHJcbiAgICAgICAgaWYoY3VyX3YgPiBtYXhfdikge1xyXG4gICAgICAgICAgICB0aGlzLmZhY2VWWCAqPSBtYXhfdiAvIGN1cl92O1xyXG4gICAgICAgICAgICB0aGlzLmZhY2VWWSAqPSBtYXhfdiAvIGN1cl92O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMuZmFjZVggKz0gdGhpcy5mYWNlVlg7XHJcbiAgICB0aGlzLmZhY2VZICs9IHRoaXMuZmFjZVZZO1xyXG59XHJcbi8qKlxyXG4gKlxyXG4gKiAgWW91IGNhbiBtb2RpZnkgYW5kIHVzZSB0aGlzIHNvdXJjZSBmcmVlbHlcclxuICogIG9ubHkgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBhcHBsaWNhdGlvbiByZWxhdGVkIExpdmUyRC5cclxuICpcclxuICogIChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKi9cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICBjbGFzcyBMMkRWaWV3TWF0cml4ICAgICAgICBleHRlbmRzICAgICBMMkRNYXRyaXg0NFxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5mdW5jdGlvbiBMMkRWaWV3TWF0cml4KClcclxue1xyXG4gICAgTDJETWF0cml4NDQucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcyk7XHJcbiAgICB0aGlzLnNjcmVlbkxlZnQgICAgICA9IG51bGw7XHJcbiAgICB0aGlzLnNjcmVlblJpZ2h0ICAgICA9IG51bGw7XHJcbiAgICB0aGlzLnNjcmVlblRvcCAgICAgICA9IG51bGw7XHJcbiAgICB0aGlzLnNjcmVlbkJvdHRvbSAgICA9IG51bGw7XHJcbiAgICB0aGlzLm1heExlZnQgICAgICAgICA9IG51bGw7XHJcbiAgICB0aGlzLm1heFJpZ2h0ICAgICAgICA9IG51bGw7XHJcbiAgICB0aGlzLm1heFRvcCAgICAgICAgICA9IG51bGw7XHJcbiAgICB0aGlzLm1heEJvdHRvbSAgICAgICA9IG51bGw7XHJcbiAgICB0aGlzLm1heCA9IE51bWJlci5NQVhfVkFMVUU7XHJcbiAgICB0aGlzLm1pbiA9IDA7XHJcbn1cclxuXHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlID0gbmV3IEwyRE1hdHJpeDQ0KCk7IC8vTDJEVmlld01hdHJpeCBleHRlbmRzIEwyRE1hdHJpeDQ0XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRWaWV3TWF0cml4ICMgZ2V0TWF4U2NhbGUoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRWaWV3TWF0cml4LnByb3RvdHlwZS5nZXRNYXhTY2FsZSAgICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLm1heDtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEVmlld01hdHJpeCAjIGdldE1pblNjYWxlKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVmlld01hdHJpeC5wcm90b3R5cGUuZ2V0TWluU2NhbGUgICAgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5taW47XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFZpZXdNYXRyaXggIyBzZXRNYXhTY2FsZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlLnNldE1heFNjYWxlICAgICA9IGZ1bmN0aW9uKHYvKmZsb2F0Ki8pXHJcbntcclxuICAgIHRoaXMubWF4ID0gdjtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEVmlld01hdHJpeCAjIHNldE1pblNjYWxlKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVmlld01hdHJpeC5wcm90b3R5cGUuc2V0TWluU2NhbGUgICAgID0gZnVuY3Rpb24odi8qZmxvYXQqLylcclxue1xyXG4gICAgdGhpcy5taW4gPSB2O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRWaWV3TWF0cml4ICMgaXNNYXhTY2FsZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlLmlzTWF4U2NhbGUgICAgICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMuZ2V0U2NhbGVYKCkgPT0gdGhpcy5tYXg7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFZpZXdNYXRyaXggIyBpc01pblNjYWxlKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVmlld01hdHJpeC5wcm90b3R5cGUuaXNNaW5TY2FsZSAgICAgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5nZXRTY2FsZVgoKSA9PSB0aGlzLm1pbjtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEVmlld01hdHJpeCAjIGFkanVzdFRyYW5zbGF0ZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlLmFkanVzdFRyYW5zbGF0ZSA9IGZ1bmN0aW9uKHNoaWZ0WC8qZmxvYXQqLywgc2hpZnRZLypmbG9hdCovKVxyXG57XHJcbiAgICBpZih0aGlzLnRyWzBdICogdGhpcy5tYXhMZWZ0ICsgKHRoaXMudHJbMTJdICsgc2hpZnRYKSA+IHRoaXMuc2NyZWVuTGVmdCkgXHJcbiAgICAgICAgc2hpZnRYID0gdGhpcy5zY3JlZW5MZWZ0IC0gdGhpcy50clswXSAqIHRoaXMubWF4TGVmdCAtIHRoaXMudHJbMTJdO1xyXG4gICAgaWYodGhpcy50clswXSAqIHRoaXMubWF4UmlnaHQgKyAodGhpcy50clsxMl0gKyBzaGlmdFgpIDwgdGhpcy5zY3JlZW5SaWdodCkgXHJcbiAgICAgICAgc2hpZnRYID0gdGhpcy5zY3JlZW5SaWdodCAtIHRoaXMudHJbMF0gKiB0aGlzLm1heFJpZ2h0IC0gdGhpcy50clsxMl07XHJcbiAgICBpZih0aGlzLnRyWzVdICogdGhpcy5tYXhUb3AgKyAodGhpcy50clsxM10gKyBzaGlmdFkpIDwgdGhpcy5zY3JlZW5Ub3ApIFxyXG4gICAgICAgIHNoaWZ0WSA9IHRoaXMuc2NyZWVuVG9wIC0gdGhpcy50cls1XSAqIHRoaXMubWF4VG9wIC0gdGhpcy50clsxM107XHJcbiAgICBpZih0aGlzLnRyWzVdICogdGhpcy5tYXhCb3R0b20gKyAodGhpcy50clsxM10gKyBzaGlmdFkpID4gdGhpcy5zY3JlZW5Cb3R0b20pIFxyXG4gICAgICAgIHNoaWZ0WSA9IHRoaXMuc2NyZWVuQm90dG9tIC0gdGhpcy50cls1XSAqIHRoaXMubWF4Qm90dG9tIC0gdGhpcy50clsxM107XHJcbiAgICBcclxuICAgIHZhciB0cjEgPSBbMSwgMCwgMCwgMCwgXHJcbiAgICAgICAgICAgICAgIDAsIDEsIDAsIDAsXHJcbiAgICAgICAgICAgICAgIDAsIDAsIDEsIDAsIFxyXG4gICAgICAgICAgICAgICBzaGlmdFgsIHNoaWZ0WSwgMCwgMSBdO1xyXG4gICAgTDJETWF0cml4NDQubXVsKHRyMSwgdGhpcy50ciwgdGhpcy50cik7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFZpZXdNYXRyaXggIyBhZGp1c3RTY2FsZSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlLmFkanVzdFNjYWxlICAgICA9IGZ1bmN0aW9uKGN4LypmbG9hdCovLCBjeS8qZmxvYXQqLywgc2NhbGUvKmZsb2F0Ki8pXHJcbntcclxuICAgIHZhciB0YXJnZXRTY2FsZSA9IHNjYWxlICogdGhpcy50clswXTtcclxuICAgIGlmKHRhcmdldFNjYWxlIDwgdGhpcy5taW4pIHtcclxuICAgICAgICBpZih0aGlzLnRyWzBdID4gMCkgc2NhbGUgPSB0aGlzLm1pbiAvIHRoaXMudHJbMF07XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmKHRhcmdldFNjYWxlID4gdGhpcy5tYXgpIHtcclxuICAgICAgICBpZih0aGlzLnRyWzBdID4gMCkgc2NhbGUgPSB0aGlzLm1heCAvIHRoaXMudHJbMF07XHJcbiAgICB9XHJcbiAgICB2YXIgdHIxID0gWzEsIDAsIDAsIDAsIFxyXG4gICAgICAgICAgICAgICAwLCAxLCAwLCAwLCBcclxuICAgICAgICAgICAgICAgMCwgMCwgMSwgMCwgXHJcbiAgICAgICAgICAgICAgIGN4LCBjeSwgMCwgMV07XHJcbiAgICB2YXIgdHIyID0gW3NjYWxlLCAwLCAwLCAwLFxyXG4gICAgICAgICAgICAgICAwLCBzY2FsZSwgMCwgMCxcclxuICAgICAgICAgICAgICAgMCwgMCwgMSwgMCwgXHJcbiAgICAgICAgICAgICAgIDAsIDAsIDAsIDEgXTtcclxuICAgIHZhciB0cjMgPSBbMSwgMCwgMCwgMCwgXHJcbiAgICAgICAgICAgICAgIDAsIDEsIDAsIDAsIFxyXG4gICAgICAgICAgICAgICAwLCAwLCAxLCAwLCBcclxuICAgICAgICAgICAgICAgLWN4LCAtY3ksIDAsIDEgXTtcclxuICAgIEwyRE1hdHJpeDQ0Lm11bCh0cjMsIHRoaXMudHIsIHRoaXMudHIpO1xyXG4gICAgTDJETWF0cml4NDQubXVsKHRyMiwgdGhpcy50ciwgdGhpcy50cik7XHJcbiAgICBMMkRNYXRyaXg0NC5tdWwodHIxLCB0aGlzLnRyLCB0aGlzLnRyKTtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEVmlld01hdHJpeCAjIHNldFNjcmVlblJlY3QoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRWaWV3TWF0cml4LnByb3RvdHlwZS5zZXRTY3JlZW5SZWN0ICAgPSBmdW5jdGlvbihsZWZ0LypmbG9hdCovLCByaWdodC8qZmxvYXQqLywgYm90dG9tLypmbG9hdCovLCB0b3AvKmZsb2F0Ki8pXHJcbntcclxuICAgIHRoaXMuc2NyZWVuTGVmdCA9IGxlZnQ7XHJcbiAgICB0aGlzLnNjcmVlblJpZ2h0ID0gcmlnaHQ7XHJcbiAgICB0aGlzLnNjcmVlblRvcCA9IHRvcDtcclxuICAgIHRoaXMuc2NyZWVuQm90dG9tID0gYm90dG9tO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRWaWV3TWF0cml4ICMgc2V0TWF4U2NyZWVuUmVjdCgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlLnNldE1heFNjcmVlblJlY3QgPSBmdW5jdGlvbihsZWZ0LypmbG9hdCovLCByaWdodC8qZmxvYXQqLywgYm90dG9tLypmbG9hdCovLCB0b3AvKmZsb2F0Ki8pXHJcbntcclxuICAgIHRoaXMubWF4TGVmdCA9IGxlZnQ7XHJcbiAgICB0aGlzLm1heFJpZ2h0ID0gcmlnaHQ7XHJcbiAgICB0aGlzLm1heFRvcCA9IHRvcDtcclxuICAgIHRoaXMubWF4Qm90dG9tID0gYm90dG9tO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRWaWV3TWF0cml4ICMgZ2V0U2NyZWVuTGVmdCgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlLmdldFNjcmVlbkxlZnQgICA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMuc2NyZWVuTGVmdDtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEVmlld01hdHJpeCAjIGdldFNjcmVlblJpZ2h0KClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVmlld01hdHJpeC5wcm90b3R5cGUuZ2V0U2NyZWVuUmlnaHQgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5zY3JlZW5SaWdodDtcclxufVxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gICAgTDJEVmlld01hdHJpeCAjIGdldFNjcmVlbkJvdHRvbSgpXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkwyRFZpZXdNYXRyaXgucHJvdG90eXBlLmdldFNjcmVlbkJvdHRvbSA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIHRoaXMuc2NyZWVuQm90dG9tO1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRWaWV3TWF0cml4ICMgZ2V0U2NyZWVuVG9wKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVmlld01hdHJpeC5wcm90b3R5cGUuZ2V0U2NyZWVuVG9wICAgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5zY3JlZW5Ub3A7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFZpZXdNYXRyaXggIyBnZXRNYXhMZWZ0KClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVmlld01hdHJpeC5wcm90b3R5cGUuZ2V0TWF4TGVmdCAgICAgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5tYXhMZWZ0O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRWaWV3TWF0cml4ICMgZ2V0TWF4UmlnaHQoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRWaWV3TWF0cml4LnByb3RvdHlwZS5nZXRNYXhSaWdodCAgICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLm1heFJpZ2h0O1xyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAgICBMMkRWaWV3TWF0cml4ICMgZ2V0TWF4Qm90dG9tKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTDJEVmlld01hdHJpeC5wcm90b3R5cGUuZ2V0TWF4Qm90dG9tICAgID0gZnVuY3Rpb24oKVxyXG57XHJcbiAgICByZXR1cm4gdGhpcy5tYXhCb3R0b207XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIEwyRFZpZXdNYXRyaXggIyBnZXRNYXhUb3AoKVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5MMkRWaWV3TWF0cml4LnByb3RvdHlwZS5nZXRNYXhUb3AgICAgICAgPSBmdW5jdGlvbigpXHJcbntcclxuICAgIHJldHVybiB0aGlzLm1heFRvcDtcclxufVxyXG5cclxuLyoqXHJcbiAqXHJcbiAqICBZb3UgY2FuIG1vZGlmeSBhbmQgdXNlIHRoaXMgc291cmNlIGZyZWVseVxyXG4gKiAgb25seSBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFwcGxpY2F0aW9uIHJlbGF0ZWQgTGl2ZTJELlxyXG4gKlxyXG4gKiAgKGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqL1xyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIGNsYXNzIExpdmUyREZyYW1ld29yayAgICAgIFxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5mdW5jdGlvbiBMaXZlMkRGcmFtZXdvcmsoKVxyXG57XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkxpdmUyREZyYW1ld29yay5wbGF0Zm9ybU1hbmFnZXIgID0gbnVsbDtcclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIHN0YXRpYyBMaXZlMkRGcmFtZXdvcmsuZ2V0UGxhdGZvcm1NYW5hZ2VyKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTGl2ZTJERnJhbWV3b3JrLmdldFBsYXRmb3JtTWFuYWdlciA9IGZ1bmN0aW9uKClcclxue1xyXG4gICAgcmV0dXJuIExpdmUyREZyYW1ld29yay5wbGF0Zm9ybU1hbmFnZXI7XHJcbn1cclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICAgIHN0YXRpYyBMaXZlMkRGcmFtZXdvcmsuc2V0UGxhdGZvcm1NYW5hZ2VyKClcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuTGl2ZTJERnJhbWV3b3JrLnNldFBsYXRmb3JtTWFuYWdlciA9IGZ1bmN0aW9uKCBwbGF0Zm9ybU1hbmFnZXIgLypJUGxhdGZvcm1NYW5hZ2VyKi8gKVxyXG57XHJcbiAgICBMaXZlMkRGcmFtZXdvcmsucGxhdGZvcm1NYW5hZ2VyID0gcGxhdGZvcm1NYW5hZ2VyO1xyXG59Il19
