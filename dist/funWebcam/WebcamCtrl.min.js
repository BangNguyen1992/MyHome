"use strict";!function(){function e(e){function t(){navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then(function(e){a.src=window.URL.createObjectURL(e),a.play()})["catch"](function(e){console.error("OH NO !!!",e)})}function r(){var t=a.videoWidth,r=a.videoHeight;return n.width=t,n.height=r,setInterval(function(){c.drawImage(a,0,0,t,r),e.pixels=c.getImageData(0,0,t,r),e.pixels=o(e.pixels),c.putImageData(e.pixels,0,0)},10)}function o(t){e.redInt=parseInt(e.color.red),e.greenInt=parseInt(e.color.green),e.blueInt=parseInt(e.color.blue);for(var r=0;r<t.data.length;r+=4)t.data[r+0]=t.data[r+0]+e.color.red,t.data[r+1]=t.data[r+1]+e.color.green,t.data[r+2]=t.data[r+2]+e.color.blue;return t}var a=document.querySelector(".player"),n=document.querySelector(".photo"),c=n.getContext("2d"),i=document.querySelector(".strip"),l=document.querySelector(".snap");e.color={red:0,green:0,blue:0},t(),a.addEventListener("canplay",r),e.takePhoto=function(){l.currentTime=0,l.play();var e=n.toDataURL("image/jpg"),t=document.createElement("a");t.href=e,t.setAttribute("download","download"),t.innerHTML='<img src="'+e+'" alt="Take photo"/>',i.insertBefore(t,i.firstChild)}}angular.module("myApp").controller("WebcamCtrl",e),e.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
