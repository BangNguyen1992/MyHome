.panel p,.sound{text-transform:uppercase}.hole,.panels{overflow:hidden}@font-face{font-family:Lato;font-style:normal;font-weight:400;src:local('Lato Regular'),local('Lato-Regular'),url(https://fonts.gstatic.com/s/lato/v11/v0SdcGFAl2aezM9Vq_aFTQ.ttf) format('truetype')}@font-face{font-family:'Open Sans';font-style:normal;font-weight:300;src:local('Open Sans Light'),local('OpenSans-Light'),url(https://fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTYnF5uFdDttMLvmWuJdhhgs.ttf) format('truetype')}.drum-kit{font-size:10px;background:url(../img/drumKit/bg.jpg) bottom center;background-size:cover}.keys{display:flex;flex:1;min-height:100vh;align-items:center;justify-content:center}.key{border:4px solid #000;border-radius:5px;margin:1rem;font-size:1.5rem;padding:1rem .5rem;transition:all .07s;width:100px;text-align:center;color:#fff;background:rgba(0,0,0,.4);text-shadow:0 0 5px #000}.header,.panel{background-size:cover;text-align:center}.gradientHeader,.panel,.photoBoothHeader,.projectHeader{background-position:center}.playing{transform:scale(1.1);border-color:#ffc600;box-shadow:0 0 10px #ffc600}kbd{display:block;font-size:40px}.sound{font-size:1.2rem;letter-spacing:1px;color:#ffc600}.row>div>div{line-height:40px}.row>div>div>input{height:26px;line-height:24px;padding-left:5px;display:table}.header{background-image:url(../img/imgEditor/bg.jpg);background-repeat:no-repeat;background-attachment:scroll;box-shadow:inset 0 0 0 5000px rgba(0,0,0,.5);color:#fff}.header .intro-heading{font-family:'Amatic SC',cursive;font-weight:700;margin-bottom:25px}@media (min-width:300px){.header{height:40vh}.header .intro-heading{padding-top:15vh;font-size:40px}}@media (min-width:768px){.header{height:50vh}.header .intro-heading{padding-top:20vh;font-size:80px}}#myCanvas,#myImg{margin-top:23px}.imagedropshadow{padding:10px;border:1px solid #EFEFEF;filter:blur(0)}.imagedropshadow:hover{border:1px solid #CCC;box-shadow:1px 1px 5px #999}.vign-shadow{border:1px solid #EFEFEF;filter:blur(0)}.imgActive,.vign-shadow:focus,.vign-shadow:hover{border:1px solid #0c6bec;box-shadow:1px 1px 5px #999}.non-padding{padding-left:2px;padding-right:2px}.input{-webkit-appearance:none;border:none;width:32px;height:32px!important;padding-left:0!important}.input::-webkit-color-swatch-wrapper{padding:0}.input::-webkit-color-swatch{border:none}input[type=file]{display:none}.upload:focus{margin:20px 0;width:120px;height:50px;background-color:#0c6bec;border:1px solid #0c6bec;border-radius:0;color:#fff;padding-top:14px}.flex-container .border,.flex-item{margin:2rem}.upload:hover{background-color:#fff;color:#0c6bec;border:1px solid #0c6bec}.upload::-webkit-color-swatch-wrapper{padding:0}.upload::-webkit-color-swatch{border:none}.color-picker{width:32px;height:32px;box-shadow:1px 1px 5px #999}input[type=checkbox]{display:none!important}.flex-column,.flex-container,.flex-item,.panel,.panel>*,.panels{display:flex}input[type=checkbox]:checked+label:before{content:"ON";width:120px;height:50px;border-radius:0}input[type=checkbox]+label:before{content:"OFF";width:120px;height:50px;border-radius:0}.flex-container{padding-top:20px;padding-bottom:20px;flex-flow:row wrap;justify-content:center}.flex-column{flex-flow:column wrap;text-align:center}.flex-item{flex:1;justify-content:center;align-items:center;flex-direction:column;background-color:#fff}.flex-item .cardItem{background-color:transparent;border:0}.flex-item img{max-width:200px}.flex-item.border{border:1px solid rgba(0,0,0,.1);border-radius:2px;max-width:230px;padding:10px}.flex-item.border:hover{transform:translateY(-2px);box-shadow:0 10px 30px rgba(0,0,0,.2)}.panel,.panel.open{box-shadow:inset 0 0 0 5px rgba(255,255,255,.1)}.panels{min-height:80vh;padding-top:20px;flex-wrap:wrap}.panel{color:#fff;transition:font-size .7s cubic-bezier(.61,-.19,.7,-.11),flex .7s cubic-bezier(.61,-.19,.7,-.11),background .2s;font-size:20px;flex:1;justify-content:center;align-items:center;flex-direction:column}.panel>*{margin:0;width:100%;transition:transform .5s;flex:1 0 auto;justify-content:center;align-items:center}.icon-one,.icon-three,.icon-two{position:absolute;bottom:27%;margin-top:40px}.icon,.icon-one,.icon-three,.icon-two{margin-right:10px;color:#fff}.panel>:first-child{transform:translateY(-100%)}.panel>:last-child{transform:translateY(100%)}.panel.open-active>:first-child{transform:translateY(0);display:flex}.panel.open-active>:last-child{transform:translateY(0);display:flex}.panel.open{font-size:2em;flex:5}.cardItem:hover,.cardView .container:hover,.strip img:hover{box-shadow:0 10px 30px rgba(0,0,0,.2)}.panel.panel1{background-image:url(../img/panel1.jpg)}.panel.panel2{background-image:url(../img/panel2.jpg)}.panel.panel3{background-image:url(../img/panel3.jpg)}.panel.panel4{background-image:url(../img/panel4.jpg)}.panel.panel5{background-image:url(../img/panel5.jpg)}.panel p{font-family:"Amatic SC",cursive;text-shadow:0 0 4px rgba(0,0,0,.72),0 0 14px rgba(0,0,0,.45);font-size:2em;font-weight:700;cursor:pointer}.panel p:nth-child(2){font-size:4em}@media (max-width:768px){.panels{flex-direction:column}.panel>:first-child{transform:translateY(-100%);display:none}.panel>:last-child{transform:translateY(100%);display:none}}.cta{color:#fff;text-decoration:none}.slide-in{opacity:0;transform:translateX(-30%) scale(1)}.slide-in.a{transition:all .2s}.slide-in.b{transition:all .4s}.slide-in.c{transition:all .6s}.slide-in.d{transition:all .8s}.slide-in.e{transition:all 1s}.slide-in.open{transition:all .5s!important}.cardItem,.cardView .container,.strip img{transition:.3s ease-in-out}.slide-in.active{opacity:1;transform:translateX(0) scale(1);border:0}.slide-in.active:hover{transform:scale(1.05);z-index:100}.cardItem:hover,.cardView .hover:hover{transform:translateY(-2px)}.gradientHeader{background-image:url(../img/gradient.jpg)}.photoBoothHeader{background-image:url(../img/photoBooth.jpg)}.moleGameHeader{background-image:url(../img/mole-game.jpg);background-position:bottom}.cardView .container{padding:6rem;background-color:#fff;border:1px solid #ccc;border-radius:2px}.cardView .hover{margin-bottom:5rem}.cardItem{background-color:#fafafa;border:1px solid rgba(0,0,0,.1);border-radius:2px}.icon-one{left:20%}.icon-two{left:48%}.icon-three{right:20%}#scale:hover{-moz-transform:scale(1.1);-webkit-transform:scale(1.1);transform:scale(1.1)}.intro-header{display:flex;flex-direction:column;padding-top:0;padding-bottom:20px;text-align:center;height:100vh;background:linear-gradient(rgba(46,171,250,.75),rgba(46,171,250,.85)),url(../img/body-bg.png) center center no-repeat;background-size:cover}.intro-message{position:relative;padding-top:20%;padding-bottom:20%}.intro-message>h1{color:#fff;font-weight:100;font-size:68px;font-family:Lato}.intro-message>h3{color:#fff;font-size:24px;font-family:"Open Sans";margin-top:20px;padding-bottom:40px}.content-section-a{padding:50px 0;background:#65ce9b}.content-section-b{padding-top:0;padding-bottom:0;background:linear-gradient(rgba(46,171,250,.75),rgba(46,171,250,.85));text-align:center}.content-section-c{padding:50px 0;background:#fff;text-align:center}.content-section-c .btn-circle{border:2px solid #424242}.content-section-c .fa-angle-double-down{color:#424242}.content-section-c .cardView .container{border:0}.content-section-d{padding:50px 0;background:#65ce9b;text-align:center;color:#fff}.more{color:#fff}.more h3{padding:1rem}.btn-project{background-color:#65ce9b;height:50px;color:#fff;border:3px solid #fff}.btn-project a{color:#fff;font-weight:700;font-size:2rem;padding:20px}.btn-project a:hover{color:#fff;text-decoration:none}@media all and (max-width:720px){.icon-one,.icon-three,.icon-two{position:absolute;bottom:10%;margin-top:40px;color:#fff;margin-right:10px}.intro-message>h1{color:#fff;font-weight:100;font-size:38px;font-family:Lato}.icon-one{left:18%}.icon-two{left:44%}.icon-three{right:18%}}.btn-xl,h1,h2,h3,h4,h5,h6{font-weight:700;text-transform:uppercase}.btn-xl,.navbar-custom .nav li a,.navbar-custom .navbar-brand,.navbar-custom .navbar-toggle,h1,h2,h3,h4,h5,h6,header .intro-text .intro-lead-in{font-family:Roboto,sans-serif}.center{display:flex;flex-direction:column;justify-content:center;align-items:center}.controls .col-xs-1{padding:0}.controls .col-xs-1 input{height:30px;margin-bottom:10px;display:flex}.controls .row{margin-bottom:10px}.photo{width:100%;height:auto;margin:50px auto 10px}.player{position:absolute;top:15px;right:-80px;max-width:200px}.strip{padding:2rem}.strip img{padding:2px;margin:5px;width:20%;background-color:#fff;border:1px solid #ccc;border-radius:2px}.game,.img-centered{margin:0 auto}.strip img:hover{transform:translateY(-2px);cursor:pointer}.strip a:nth-child(5n+1) img{rotate:10deg}.strip a:nth-child(5n+2) img{rotate:-2deg}.strip a:nth-child(5n+3) img{rotate:8deg}.strip a:nth-child(5n+4) img{rotate:-11deg}.strip a:nth-child(5n+5) img{rotate:12deg}@media (max-width:768px){.hero{display:none}}.hero{width:100%}.hero .background{width:100%;height:108px;z-index:1}.hero .background .hero-canvas{width:100%;height:100%;position:relative}.moleGame{background:#ffc600;padding-bottom:100px}.moleGame .container{cursor:url(../img/moleGame/hammer-up.png),auto}.score{background:rgba(255,255,255,.2);padding:0 3rem;line-height:1;border-radius:1rem}.game{width:600px;height:400px;display:flex;flex-wrap:wrap}.hole{flex:1 0 33.33%;position:relative}.hole:after,.mole{position:absolute;width:100%}.hole:after{display:block;background:url(../img/moleGame/dirt.svg) bottom center no-repeat;background-size:contain;content:'';height:70px;z-index:2;bottom:-30px}.mole{background:url(../img/moleGame/mole.svg) bottom center no-repeat;background-size:60%;top:100%;height:100%;transition:all .4s}.hole.up .mole{top:0}body,footer{overflow-x:hidden;background-color:#f0f0f0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.body{background:linear-gradient(rgba(46,171,250,.75),rgba(46,171,250,.85)),url(../img/body-bg.png) center center no-repeat}.bg-white{background-color:#f0f0f0}.text-muted{color:#777}.text-primary,a{color:#3498db}p{font-size:15px;line-height:1.75}p.large{font-size:16px}a,a.active,a:active,a:focus,a:hover{outline:0}a.active,a:active,a:focus,a:hover{color:#217dbb}.bg-light-gray{background-color:#eee}.bg-darkest-gray{background-color:#222}.btn-xl{color:#fff;background-color:#3498db;border-color:#3498db;border-radius:3px;font-size:18px;padding:20px 40px}.btn-xl.focus,.btn-xl:focus{color:#fff;background-color:#217dbb;border-color:#16527a}.btn-xl.active,.btn-xl:active,.btn-xl:hover,.open>.btn-xl.dropdown-toggle{color:#fff;background-color:#217dbb;border-color:#2077b2}.btn-xl.active.focus,.btn-xl.active:focus,.btn-xl.active:hover,.btn-xl:active.focus,.btn-xl:active:focus,.btn-xl:active:hover,.open>.btn-xl.dropdown-toggle.focus,.open>.btn-xl.dropdown-toggle:focus,.open>.btn-xl.dropdown-toggle:hover{color:#fff;background-color:#1c699d;border-color:#16527a}.btn-xl.active,.btn-xl:active,.open>.btn-xl.dropdown-toggle{background-image:none}.btn-xl.disabled.focus,.btn-xl.disabled:focus,.btn-xl.disabled:hover,.btn-xl[disabled].focus,.btn-xl[disabled]:focus,.btn-xl[disabled]:hover,fieldset[disabled] .btn-xl.focus,fieldset[disabled] .btn-xl:focus,fieldset[disabled] .btn-xl:hover{background-color:#3498db;border-color:#3498db}.btn-xl .badge{color:#3498db;background-color:#fff}.navbar-custom{background-color:#222;border-color:transparent}.navbar-custom .navbar-brand{color:#fff}.navbar-custom .navbar-brand.active,.navbar-custom .navbar-brand:active,.navbar-custom .navbar-brand:focus,.navbar-custom .navbar-brand:hover{color:#217dbb}.navbar-custom .navbar-collapse{border-color:rgba(255,255,255,.98)}.navbar-custom .navbar-toggle{background-color:#3498db;border-color:#3498db;text-transform:uppercase;color:#fff;font-size:12px}.navbar-custom .navbar-toggle:focus,.navbar-custom .navbar-toggle:hover{background-color:#3498db}.navbar-custom .nav li a{text-transform:uppercase;font-weight:400;font-size:1.5rem;letter-spacing:1px;color:#fff}.navbar-custom .nav li a:focus,.navbar-custom .nav li a:hover{color:#fff;outline:0}.navbar-nav>.active>a{border-radius:0;color:#fff;background-color:transparent}.navbar-nav>.active>a:focus,.navbar-nav>.active>a:hover{color:#fff;background-color:transparent;border:none}@media (min-width:768px){.active{border-radius:0;color:#fff;border:1px solid #fff}.nav li a{font-family:Roboto,sans-serif;text-transform:uppercase;font-weight:400;letter-spacing:1px;color:#fff;-moz-transition-property:-moz-transform;-moz-transition-duration:1s}.nav li a:focus,.nav li a:hover{color:#fff;outline:0}.nav li a:active,.nav li a:hover{-webkit-animation-name:pulse;-moz-animation-name:pulse;-webkit-animation-duration:1.5s;-moz-animation-duration:1.5s;-webkit-animation-iteration-count:infinite;-moz-animation-iteration-count:infinite;-webkit-animation-timing-function:linear;-moz-animation-timing-function:linear}.navbar-custom{background-color:transparent;padding:25px 0;transition:all .5s;border:none}.navbar-custom .navbar-brand{font-size:2em;-webkit-transition:all .5s;-moz-transition:all .5s;transition:all .5s}.navbar-custom .navbar-nav>.active>a{border-radius:3px}.navbar-custom.affix{background-color:#424242;padding:10px 0}.navbar-custom.affix .navbar-brand{font-size:1.5em}}header{background-image:url(../img/header-bg.jpg);background-repeat:no-repeat;background-attachment:scroll;box-shadow:inset 0 0 0 5000px rgba(0,0,0,.5);-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;-o-background-size:cover;text-align:center;color:#fff}header .intro-text{padding-top:150px;padding-bottom:50px}header .intro-text .intro-lead-in{font-style:italic;font-size:22px;line-height:22px;margin-bottom:25px}header .intro-text .intro-heading{font-family:"Amatic SC",cursive;font-weight:700;font-size:50px;line-height:50px;margin-bottom:25px}@media (max-width:769px){header .intro-text{height:50vh!important}}@media (min-width:770px){header .intro-text{padding-top:250px;height:100vh}header .intro-text .intro-lead-in{font-family:"Amatic SC",cursive;font-style:italic;font-size:40px;line-height:40px;margin-bottom:25px}header .intro-text .intro-heading{margin-top:5%;font-family:"Amatic SC",cursive;font-weight:700;font-size:80px;line-height:75px;margin-bottom:50px}li{padding-top:5px}}#portfolio .portfolio-item .portfolio-caption p,.portfolio-modal .modal-content p.item-intro,footer span.copyright,footer ul.quicklinks,section h3.section-subheading{font-family:Roboto,sans-serif}section{transform:scale(.9);padding:6rem 0}section h2.section-heading{font-size:40px;margin-top:0;margin-bottom:15px}section h3.section-subheading{font-size:16px;text-transform:none;font-style:italic;font-weight:400;margin-bottom:75px}@media (min-width:768px){section{padding:6rem 0}}@media (max-width:500px){section h2.section-heading{font-size:3rem}}.service-heading{margin:15px 0;text-transform:none}#portfolio .portfolio-item{margin:0 0 15px;right:0}#portfolio .portfolio-item .portfolio-link{display:block;position:relative;margin:0 auto}#portfolio .portfolio-item .portfolio-link .portfolio-hover{background:rgba(52,152,219,.1);position:absolute;width:100%;height:100%;opacity:0;transition:all ease .5s;-webkit-transition:all ease .5s;-moz-transition:all ease .5s}#portfolio .portfolio-item .portfolio-link .portfolio-hover:hover{opacity:1}#portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content{position:absolute;width:100%;height:20px;font-size:20px;text-align:center;top:50%;margin-top:-12px;color:#fff}#portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content i{margin-top:-12px}#portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content h3,#portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content h4{margin:0}#portfolio .portfolio-item .portfolio-caption{max-width:400px;height:100px;margin:0 auto;background-color:#fff;text-align:center;padding:25px 10px}#portfolio .portfolio-item .portfolio-caption h4{text-transform:none;margin:0}#portfolio .portfolio-item .portfolio-caption p{font-style:italic;font-size:16px;margin:0}#portfolio *{z-index:2}@media (min-width:767px){#portfolio .portfolio-item{margin:0 0 30px}}.timeline{list-style:none;padding:0;position:relative}.timeline:before{top:0;bottom:0;position:absolute;content:"";width:2px;background-color:#f1f1f1;left:40px;margin-left:-1.5px}.timeline>li{margin-bottom:50px;position:relative;min-height:50px}.timeline>li:after,.timeline>li:before{content:" ";display:table}.timeline>li:after{clear:both}.timeline>li .timeline-panel{width:100%;float:right;padding:0 20px 0 100px;position:relative;text-align:left}.timeline>li .timeline-panel:before{border-left-width:0;border-right-width:15px;left:-15px;right:auto}.timeline>li .timeline-panel:after{border-left-width:0;border-right-width:14px;left:-14px;right:auto}.timeline>li .timeline-image{left:0;margin-left:0;width:80px;height:80px;position:absolute;z-index:100;background-color:#3498db;color:#fff;border-radius:100%;border:7px solid #f1f1f1;text-align:center}.timeline>li .timeline-image h4{font-size:10px;margin-top:12px;line-height:14px}.timeline>li.timeline-inverted>.timeline-panel{float:right;text-align:left;padding:0 20px 0 100px}.timeline>li.timeline-inverted>.timeline-panel:before{border-left-width:0;border-right-width:15px;left:-15px;right:auto}.timeline>li.timeline-inverted>.timeline-panel:after{border-left-width:0;border-right-width:14px;left:-14px;right:auto}.timeline>li:last-child{margin-bottom:0}.timeline .timeline-heading h4{margin-top:0;color:inherit}.timeline .timeline-heading h4.subheading{text-transform:none}.timeline .timeline-body>p,.timeline .timeline-body>ul{margin-bottom:0}@media (min-width:768px){.timeline:before{left:50%}.timeline>li{margin-bottom:100px;min-height:100px}.timeline>li .timeline-panel{width:41%;float:left;padding:0 20px 20px 30px;text-align:right}.timeline>li .timeline-image{width:100px;height:100px;left:50%;margin-left:-50px}.timeline>li .timeline-image h4{font-size:13px;margin-top:16px;line-height:18px}.timeline>li.timeline-inverted>.timeline-panel{float:right;text-align:left;padding:0 30px 20px 20px}}@media (min-width:992px){.timeline>li .timeline-panel,.timeline>li.timeline-inverted>.timeline-panel{padding:0 20px 20px}.timeline>li{min-height:150px}.timeline>li .timeline-image{width:150px;height:150px;margin-left:-75px}.timeline>li .timeline-image h4{font-size:18px;margin-top:30px;line-height:26px}}@media (min-width:1200px){.timeline>li{min-height:170px}.timeline>li .timeline-panel{padding:0 20px 20px 100px}.timeline>li .timeline-image{width:170px;height:170px;margin-left:-85px}.timeline>li .timeline-image h4{margin-top:40px}.timeline>li.timeline-inverted>.timeline-panel{padding:0 100px 20px 20px}}.team-member{text-align:center;margin-bottom:50px}.team-member img{margin:0 auto;border:7px solid #fff}.team-member h4{margin-top:25px;margin-bottom:0;text-transform:none}.team-member p{margin-top:0}aside.clients img{margin:50px auto}section#contact{background-color:#222;background-image:url(../img/map-image.png);background-position:center;background-repeat:no-repeat}section#contact .section-heading{color:#fff}section#contact .form-group{margin-bottom:25px}section#contact .form-group input,section#contact .form-group textarea{padding:20px}section#contact .form-group input.form-control{height:auto}section#contact .form-group textarea.form-control{height:236px}section#contact .form-control:focus{border-color:#3498db;box-shadow:none}section#contact ::-webkit-input-placeholder{font-family:Roboto,sans-serif;text-transform:uppercase;font-weight:700;color:#eee}section#contact :-moz-placeholder{font-family:Roboto,sans-serif;text-transform:uppercase;font-weight:700;color:#eee}section#contact ::-moz-placeholder{font-family:Roboto,sans-serif;text-transform:uppercase;font-weight:700;color:#eee}section#contact :-ms-input-placeholder{font-family:Roboto,sans-serif;text-transform:uppercase;font-weight:700;color:#eee}section#contact .text-danger{color:#e74c3c}footer{padding:25px 0;text-align:center}footer span.copyright{line-height:40px;text-transform:uppercase;text-transform:none}footer ul.quicklinks{margin-bottom:0;line-height:40px;text-transform:uppercase;text-transform:none}ul.social-buttons{margin-bottom:0}ul.social-buttons li a{display:block;background-color:#222;height:40px;width:40px;border-radius:100%;font-size:20px;line-height:40px;color:#fff;outline:0;-webkit-transition:all .3s;-moz-transition:all .3s;transition:all .3s}ul.social-buttons li a:active,ul.social-buttons li a:focus,ul.social-buttons li a:hover{background-color:#3498db}.btn.active,.btn:active,.btn:active:focus,.btn:focus{outline:0}.portfolio-modal .modal-dialog{margin:0;height:100%;width:auto}.portfolio-modal .modal-content{border-radius:0;background-clip:border-box;-webkit-box-shadow:none;box-shadow:none;border:none;min-height:100%;padding:100px 0;text-align:center}.portfolio-modal .modal-content h2{margin-bottom:15px;font-size:3em}.portfolio-modal .modal-content p{margin-bottom:30px}.portfolio-modal .modal-content p.item-intro{margin:20px 0 30px;font-style:italic;font-size:16px}.portfolio-modal .modal-content ul.list-inline{margin-bottom:30px;margin-top:0}.portfolio-modal .modal-content img{margin-bottom:30px}.portfolio-modal .close-modal{position:absolute;width:75px;height:75px;background-color:transparent;top:25px;right:25px;cursor:pointer}.portfolio-modal .close-modal:hover{opacity:.3}.portfolio-modal .close-modal .lr{height:75px;width:1px;margin-left:35px;background-color:#222;transform:rotate(45deg);-ms-transform:rotate(45deg);-webkit-transform:rotate(45deg);z-index:1051}.portfolio-modal .close-modal .lr .rl{height:75px;width:1px;background-color:#222;transform:rotate(90deg);-ms-transform:rotate(90deg);-webkit-transform:rotate(90deg);z-index:1052}.portfolio-modal .modal-backdrop{opacity:0;display:none}::-moz-selection{text-shadow:none;background:#3498db}::selection{text-shadow:none;background:#3498db}img::selection{background:0 0}img::-moz-selection{background:0 0}body{webkit-tap-highlight-color:#3498db}.btn-circle{width:70px;height:70px;margin-top:15px;padding:7px 16px;border:2px solid #fff;border-radius:100%;font-size:40px;color:#fff;background:0 0;transition:all .3s ease-in-out}.btn,.btn:focus{background-color:#0c6bec;border:1px solid #0c6bec;border-radius:0;color:#fff}.btn:hover{background-color:#fff;color:#0c6bec;border:1px solid #0c6bec}.btn a{color:#fff}.btn:hover a{color:#0c6bec}.arrow.focus,.arrow:focus,.arrow:hover{outline:0;color:#fff;background:rgba(255,255,255,.1)}.pointer{cursor:pointer}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
