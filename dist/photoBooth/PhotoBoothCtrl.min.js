"use strict";!function(){function e(e){function t(t){for(var a=0;a<t.data.length;a+=4)t.data[a+0]=t.data[a+0]+e.color.red,t.data[a+1]=t.data[a+1]+e.color.green,t.data[a+2]=t.data[a+2]+e.color.blue;return t}function a(t){parseInt(e.colorSplit.red),parseInt(e.colorSplit.green),parseInt(e.colorSplit.blue);for(var a=0;a<t.data.length;a+=4)t.data[a+0]=t.data[a+0+e.colorSplit.red],t.data[a+1]=t.data[a+1+e.colorSplit.green],t.data[a+2]=t.data[a+2+e.colorSplit.blue];return t}var o=document.querySelector(".player"),r=document.querySelector(".photo"),n=r.getContext("2d"),l=document.querySelector(".strip"),c=document.querySelector(".snap");e.color={red:0,green:0,blue:0},e.colorSplit={red:0,green:0,blue:0},e.alpha=1,navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then(function(e){try{o.srcObject=e}catch(t){o.src=window.URL.createObjectURL(e)}o.play()}).catch(function(e){console.error("OH NO !!!",e)}),o.addEventListener("canplay",function(){var l=o.videoWidth,c=o.videoHeight;return r.width=l,r.height=c,setInterval(function(){n.drawImage(o,0,0,l,c),e.pixels=n.getImageData(0,0,l,c),e.pixels=t(e.pixels),e.pixels=a(e.pixels),n.globalAlpha=e.alpha,n.putImageData(e.pixels,0,0)},30)}),e.takePhoto=function(){c.currentTime=0,c.play();var e=r.toDataURL("image/jpg"),t=document.createElement("a");t.href=e,t.setAttribute("download","download"),t.innerHTML='<img src="'.concat(e,'" alt="Take photo"/>'),l.insertBefore(t,l.firstChild)}}angular.module("myApp").controller("PhotoBoothCtrl",e),e.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob3RvQm9vdGgvUGhvdG9Cb290aEN0cmwuanMiXSwibmFtZXMiOlsidmlkZW8iLCJxdWVyeVNlbGVjdG9yIiwiY29sb3JFZmZlY3QiLCJwaXhlbHMiLCJibHVlSW50IiwiaSIsInBhcnNlSW50IiwiJHNjb3BlIiwibGVuZ3RoIiwiY29sb3JTcGxpdCIsImJsdWUiLCJkYXRhIiwiY29sb3IiLCJyZWQiLCJncmVlbiIsImNvbG9yU3BsaXRpbmciLCJzbmFwIiwiY3VycmVudFRpbWUiLCJwbGF5IiwiY2FudmFzIiwiZ2V0Q29udGV4dCIsImRvY3VtZW50IiwiY3R4IiwiYXVkaW8iLCJ3aW5kb3ciLCJ0aGVuIiwiY2F0Y2giLCJjb25zb2xlIiwibG9jYWxNZWRpYVN0cmVhbSIsImVycm9yIiwic3JjIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiZXJyIiwiaGVpZ2h0IiwidmlkZW9IZWlnaHQiLCJhZGRFdmVudExpc3RlbmVyIiwid2lkdGgiLCJ2aWRlb1dpZHRoIiwic2V0SW50ZXJ2YWwiLCJwdXRJbWFnZURhdGEiLCJnZXRJbWFnZURhdGEiLCJwYWludFRvQ2FudmFzIiwiZ2xvYmFsQWxwaGEiLCJ0YWtlUGhvdG8iLCJzdHJpcCIsImluc2VydEJlZm9yZSIsInRvRGF0YVVSTCIsImxpbmsiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsInNldEF0dHJpYnV0ZSIsImlubmVySFRNTCIsImNvbmNhdCIsImZpcnN0Q2hpbGQiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIlBob3RvQm9vdGhDdHJsIiwiJGluamVjdCJdLCJtYXBwaW5ncyI6ImNBQUEsV0FXRSxTQUFJQSxFQUFpQkMsR0EyRXJCLFNBQVNDLEVBQVlDLEdBZ0JwQixJQUFBLElBQUlDLEVBQUFBLEVBQU9DLEVBQUdDLEVBQVNDLEtBQU1DLE9BQUNDLEdBQVdDLEVBWHhDUCxFQUFPUSxLQUFLTixFQUFJLEdBQUtGLEVBQU9RLEtBQUtOLEVBQUksR0FBS0UsRUFBT0ssTUFBTUMsSUFZeERWLEVBQUtRLEtBQUtOLEVBQVYsR0FBaUJGLEVBQVNRLEtBQU5OLEVBQVlHLEdBQVFILEVBQXhDTyxNQUFnREUsTUFDbkRYLEVBQUFRLEtBQUFOLEVBQUEsR0FBQUYsRUFBQVEsS0FBQU4sRUFBQSxHQUFBRSxFQUFBSyxNQUFBRixLQUdJUCxPQUFBQSxFQVJGLFNBQVNZLEVBQWNaLEdBVWRRLFNBQVBKLEVBQXFCSixXQUFhVSxLQUNsQ1AsU0FBQUMsRUFBQUUsV0FBQUssT0FSYVIsU0FBU0MsRUFBT0UsV0FBV0MsTUFTekMsSUFBQSxJQUFBTCxFQUFPRixFQUFQRSxFQUFBRixFQUFBUSxLQUFBSCxPQUFBSCxHQUFBLEVBS0FGLEVBQUFRLEtBQUFOLEVBQUEsR0FBQUYsRUFBQVEsS0FBQU4sRUFBQSxFQUFBRSxFQUFBRSxXQUFBSSxLQUNBRyxFQUFLQyxLQUFBQSxFQUFBQSxHQUFjZCxFQUFuQlEsS0FBQU4sRUFBQSxFQUFBRSxFQUFBRSxXQUFBSyxPQUNBRSxFQUFLRSxLQUFMYixFQUVBLEdBQUFGLEVBQUFRLEtBQUFOLEVBQUEsRUFBQUUsRUFBQUUsV0FBQUMsTUFDQSxPQUFJQyxFQTVHTCxJQUFBWCxFQUFVbUIsU0FBT0MsY0FBakIsV0FDQUQsRUFBU0UsU0FBV3BCLGNBQVIsVUFDWnFCLEVBQVFILEVBQUdFLFdBQVNwQixNQUVwQk0sRUFBT0ssU0FBUVgsY0FBQSxVQUNkWSxFQURjUSxTQUFBcEIsY0FBQSxTQUdkUyxFQUFBQSxPQUhjRyxJQUFmLEVBTUFOLE1BQU0sRUFDTE0sS0FBRyxHQURnQk4sRUFBcEJFLFlBTUFGLElBQUFBLEVBSkNPLE1BQU8sRUFRUkosS0FBQSxHQUdHYSxFQUFBQSxNQUFPLEVBTU52QixVQUFBQSxhQUFZd0IsY0FDWnhCLE9BQUEsRUFQRHVCLE9BQU8sSUFVUEUsS0FDQUMsU0FBQUEsR0FDQSxJQUNBQyxFQUFBQSxVQUFBQyxFQWZGLE1BQUFDLEdBaUJBN0IsRUFBQThCLElBQUFOLE9BQUFPLElBQUFDLGdCQUFBSixHQU5FNUIsRUFBTWtCLFNBV1JRLE1BQUEsU0FBQU8sR0FFQU4sUUFBSU8sTUFBSixZQUFtQkMsS0FzQ25CbkMsRUFBQW9DLGlCQUFBLFVBekNELFdBYUUsSUFBQUMsRUFBQXJDLEVBQUFzQyxXQVZHSixFQUFTbEMsRUFBTW1DLFlBS25CLE9BSEFoQixFQUFPa0IsTUFBUUEsRUFZZDlCLEVBQUFBLE9BQU9KLEVBVERvQyxZQUFZLFdBZWxCakIsRUFBQUEsVUFBSWtCLEVBQWFqQyxFQUFBQSxFQUFNOEIsRUFBdkJILEdBR0QzQixFQUVESixPQUFBbUIsRUFBQW1CLGFBQUEsRUFBQSxFQUFBSixFQUFBSCxHQUNBbEMsRUFBTW9DLE9BQUFBLEVBQWlCN0IsRUFBV21DLFFBR3BDbkMsRUFBQUosT0FBQVksRUFBQVIsRUFBQUosUUFHR21CLEVBQUFxQixZQUFnQnRDLEVBQUlGLE1BRW5CQSxFQUFBQSxhQUFhSSxFQUFiSixPQUE0QlEsRUFBQUEsSUFDNUJSLE1Bc0JGSSxFQUFPcUMsVUFBWSxXQVlsQkMsRUFBQUEsWUFBTUMsRUFDTjlCLEVBS0RFLE9BR0EsSUFBQVAsRUFBQVEsRUFBQTRCLFVBQUEsYUFDQUMsRUFBQTNCLFNBQUE0QixjQUFBLEtBQ0FELEVBQUFFLEtBQUF2QyxFQUNBcUMsRUFBQUcsYUFBQSxXQUFBLFlBRUFILEVBQUFJLFVBQUEsYUFBQUMsT0FBQTFDLEVBQUEsd0JBQ0FrQyxFQUFBQyxhQUFBRSxFQUFBSCxFQUFBUyxhQTdJREMsUUFHRUMsT0FBTyxTQURURCxXQUNFQyxpQkFDQUMsR0FFRkMsRUFBZUMsU0FBVyxVQVAzQiIsImZpbGUiOiJwaG90b0Jvb3RoL1Bob3RvQm9vdGhDdHJsLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cclxuXHRhbmd1bGFyXHJcblx0XHQubW9kdWxlKCdteUFwcCcpXHJcblx0XHQuY29udHJvbGxlcignUGhvdG9Cb290aEN0cmwnLCBQaG90b0Jvb3RoQ3RybCk7XHJcblxyXG5cdFBob3RvQm9vdGhDdHJsLiRpbmplY3QgPSBbJyRzY29wZSddO1xyXG5cclxuXHRmdW5jdGlvbiBQaG90b0Jvb3RoQ3RybCgkc2NvcGUpIHtcclxuXHJcblx0XHR2YXIgdmlkZW8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGxheWVyJyk7XHJcblx0XHR2YXIgY2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBob3RvJyk7XHJcblx0XHR2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcblx0XHR2YXIgc3RyaXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3RyaXAnKTtcclxuXHRcdHZhciBzbmFwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNuYXAnKTtcclxuXHJcblx0XHQkc2NvcGUuY29sb3IgPSB7XHJcblx0XHRcdHJlZDogMCxcclxuXHRcdFx0Z3JlZW46IDAsXHJcblx0XHRcdGJsdWU6IDBcclxuXHRcdH07XHJcblxyXG5cdFx0JHNjb3BlLmNvbG9yU3BsaXQgPSB7XHJcblx0XHRcdHJlZDogMCxcclxuXHRcdFx0Z3JlZW46IDAsXHJcblx0XHRcdGJsdWU6IDBcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0JHNjb3BlLmFscGhhID0gMTtcclxuXHJcblxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFZpZGVvKCkge1xyXG5cdFx0XHRuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7XHJcblx0XHRcdFx0XHR2aWRlbzogdHJ1ZSxcclxuXHRcdFx0XHRcdGF1ZGlvOiBmYWxzZVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdFx0LnRoZW4obG9jYWxNZWRpYVN0cmVhbSA9PiB7XHJcblx0XHRcdFx0XHR0cnkge1xyXG5cdFx0XHRcdFx0XHR2aWRlby5zcmNPYmplY3QgPSBsb2NhbE1lZGlhU3RyZWFtO1xyXG5cdFx0XHRcdFx0fSBjYXRjaCAoZXJyb3IpIHtcclxuXHRcdFx0XHRcdFx0dmlkZW8uc3JjID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwobG9jYWxNZWRpYVN0cmVhbSk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0dmlkZW8ucGxheSgpO1xyXG5cdFx0XHRcdH0pXHJcblx0XHRcdFx0LmNhdGNoKGVyciA9PiB7XHJcblx0XHRcdFx0XHQvL1x0XHRcdFx0YWxlcnQoYE9IIE5PICEhIWAsIGVycik7XHJcblx0XHRcdFx0XHRjb25zb2xlLmVycm9yKGBPSCBOTyAhISFgLCBlcnIpO1xyXG5cdFx0XHRcdH0pXHJcblx0XHR9XHJcblxyXG5cdFx0Z2V0VmlkZW8oKTtcclxuXHJcblx0XHRmdW5jdGlvbiBwYWludFRvQ2FudmFzKCkge1xyXG5cdFx0XHQvL1x0XHRcdGdldCB3aWR0aCBhbmQgaGVpZ2h0IG9mIHRoZSB2aWRlb1xyXG5cdFx0XHR2YXIgd2lkdGggPSB2aWRlby52aWRlb1dpZHRoO1xyXG5cdFx0XHR2YXIgaGVpZ2h0ID0gdmlkZW8udmlkZW9IZWlnaHQ7XHJcblx0XHRcdC8vXHRcdFx0c2V0IGNhbnZhcyB3aWR0aCBhbmQgaGVpZ2h0IHRoZSBzYW1lIGFzIHZpZGVvXHJcblx0XHRcdGNhbnZhcy53aWR0aCA9IHdpZHRoO1xyXG5cdFx0XHRjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG5cclxuXHRcdFx0cmV0dXJuIHNldEludGVydmFsKCgpID0+IHtcclxuXHRcdFx0XHRjdHguZHJhd0ltYWdlKHZpZGVvLCAwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcclxuXHRcdFx0XHQvL1Rha2UgdGhlIHBpeGVscyBvdXRcclxuXHRcdFx0XHQkc2NvcGUucGl4ZWxzID0gY3R4LmdldEltYWdlRGF0YSgwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcclxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZygnb2JqZWN0IGN0eCcsIGN0eCk7XHJcblx0XHRcdFx0Ly9jb2xvckVmZmVjdFxyXG5cdFx0XHRcdCRzY29wZS5waXhlbHMgPSBjb2xvckVmZmVjdCgkc2NvcGUucGl4ZWxzKTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHQvL0NvbG9yIHNwbGl0XHJcblx0XHRcdFx0JHNjb3BlLnBpeGVscyA9IGNvbG9yU3BsaXRpbmcoJHNjb3BlLnBpeGVscyk7XHJcblxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGN0eC5nbG9iYWxBbHBoYSA9ICRzY29wZS5hbHBoYTtcclxuXHJcblx0XHRcdFx0Ly8gUHV0IHRoZW0gYmFja1xyXG5cdFx0XHRcdGN0eC5wdXRJbWFnZURhdGEoJHNjb3BlLnBpeGVscywgMCwgMClcclxuXHJcblx0XHRcdH0sIDMwKTtcclxuXHRcdH1cclxuXHJcblx0XHQvL1doZW4gZmluaXNoZWQgbG9hZGVkIGFuZCBpcyBwbGF5aW5nLCB2aWRlbyB3aWxsIGVtaXQgYW4gZXZlbnQgY2FsbGVkIFwiY2FucGxheVwiLCBpZiB3ZSBjYWxsIHBhaW50VG9DYW52YXMgYmVmb3JlIHRoZSB2aWRlbyBpcyBwbGF5ZWQsIHRoZSB2aWRlb1dpZHRoIGFuZCBoZWlnaHQgd2lsbCBiZSAwXHJcblx0XHR2aWRlby5hZGRFdmVudExpc3RlbmVyKCdjYW5wbGF5JywgcGFpbnRUb0NhbnZhcyk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gY29sb3JFZmZlY3QocGl4ZWxzKSB7XHJcbi8vXHRcdFx0JHNjb3BlLnJlZEludCA9IHBhcnNlSW50KCRzY29wZS5jb2xvci5yZWQpO1xyXG4vL1x0XHRcdCRzY29wZS5ncmVlbkludCA9IHBhcnNlSW50KCRzY29wZS5jb2xvci5ncmVlbik7XHJcbi8vXHRcdFx0JHNjb3BlLmJsdWVJbnQgPSBwYXJzZUludCgkc2NvcGUuY29sb3IuYmx1ZSk7XHJcblx0XHRcdGZvciAobGV0IGkgPSAwOyBpIDwgcGl4ZWxzLmRhdGEubGVuZ3RoOyBpICs9IDQpIHtcclxuXHRcdFx0XHRwaXhlbHMuZGF0YVtpICsgMF0gPSBwaXhlbHMuZGF0YVtpICsgMF0gKyAkc2NvcGUuY29sb3IucmVkOyAvLyBSRURcclxuXHRcdFx0XHRwaXhlbHMuZGF0YVtpICsgMV0gPSBwaXhlbHMuZGF0YVtpICsgMV0gKyAkc2NvcGUuY29sb3IuZ3JlZW47IC8vIEdSRUVOXHJcblx0XHRcdFx0cGl4ZWxzLmRhdGFbaSArIDJdID0gcGl4ZWxzLmRhdGFbaSArIDJdICsgJHNjb3BlLmNvbG9yLmJsdWU7IC8vIEJsdWVcclxuLy9cdFx0XHRcdGNvbnNvbGUuY291bnQoXCJ5b2xvXCIpXHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHBpeGVscztcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0ZnVuY3Rpb24gY29sb3JTcGxpdGluZyhwaXhlbHMpIHtcclxuXHRcdFx0dmFyIHJlZEludCA9IHBhcnNlSW50KCRzY29wZS5jb2xvclNwbGl0LnJlZCk7XHJcblx0XHRcdHZhciBncmVlbkludCA9IHBhcnNlSW50KCRzY29wZS5jb2xvclNwbGl0LmdyZWVuKTtcclxuXHRcdFx0dmFyIGJsdWVJbnQgPSBwYXJzZUludCgkc2NvcGUuY29sb3JTcGxpdC5ibHVlKTtcclxuXHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBwaXhlbHMuZGF0YS5sZW5ndGg7IGkgKz0gNCkge1xyXG4vL1x0XHRcdFx0cGl4ZWxzLmRhdGFbaSArICRzY29wZS5jb2xvclNwbGl0LnJlZF0gPSBwaXhlbHMuZGF0YVtpICsgMF07IC8vIFJFRFxyXG4vL1x0XHRcdFx0cGl4ZWxzLmRhdGFbaSArICRzY29wZS5jb2xvclNwbGl0LmdyZWVuXSA9IHBpeGVscy5kYXRhW2kgKyAxXTsgLy8gR1JFRU5cclxuLy9cdFx0XHRcdHBpeGVscy5kYXRhW2kgKyAkc2NvcGUuY29sb3JTcGxpdC5ibHVlXSA9IHBpeGVscy5kYXRhW2kgKyAyXTsgLy8gQmx1ZVxyXG5cdFx0XHRcdHBpeGVscy5kYXRhW2kgKyAwXSA9IHBpeGVscy5kYXRhW2kgKyAwICsgJHNjb3BlLmNvbG9yU3BsaXQucmVkXTsgLy8gUkVEXHJcblx0XHRcdFx0cGl4ZWxzLmRhdGFbaSArIDFdID0gcGl4ZWxzLmRhdGFbaSArIDEgKyAkc2NvcGUuY29sb3JTcGxpdC5ncmVlbl07IC8vIEdSRUVOXHJcblx0XHRcdFx0cGl4ZWxzLmRhdGFbaSArIDJdID0gcGl4ZWxzLmRhdGFbaSArIDIgKyAkc2NvcGUuY29sb3JTcGxpdC5ibHVlXTsgLy8gQmx1ZVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBwaXhlbHM7XHJcblx0XHR9XHJcblxyXG5cclxuXHRcdCRzY29wZS50YWtlUGhvdG8gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdC8vXHRcdFx0cGxheSB0aGUgc291bmRcclxuXHRcdFx0c25hcC5jdXJyZW50VGltZSA9IDA7XHJcblx0XHRcdHNuYXAucGxheSgpO1xyXG5cclxuXHRcdFx0Ly9cdFx0XHR0YWtlIHRoZSBpbWFnZSBvdXQgb2YgY2FudmFzXHJcblx0XHRcdHZhciBkYXRhID0gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvanBnJyk7XHJcblx0XHRcdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG5cdFx0XHRsaW5rLmhyZWYgPSBkYXRhO1xyXG5cdFx0XHRsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAnZG93bmxvYWQnKTtcclxuXHRcdFx0Ly9cdFx0XHRsaW5rLnRleHRDb250ZW50ID0gJ0Rvd25sb2FkIEltYWdlJztcclxuXHRcdFx0bGluay5pbm5lckhUTUwgPSBgPGltZyBzcmM9XCIke2RhdGF9XCIgYWx0PVwiVGFrZSBwaG90b1wiLz5gO1xyXG5cdFx0XHRzdHJpcC5pbnNlcnRCZWZvcmUobGluaywgc3RyaXAuZmlyc3RDaGlsZCk7XHJcblx0XHR9XHJcblxyXG5cclxuXHRcdFxyXG5cdFx0XHJcblx0XHQvL1xyXG5cdFx0Ly9mdW5jdGlvbiByZ2JTcGxpdChwaXhlbHMpIHtcclxuXHRcdC8vICBmb3IobGV0IGkgPSAwOyBpIDwgcGl4ZWxzLmRhdGEubGVuZ3RoOyBpKz00KSB7XHJcblx0XHQvLyAgICBwaXhlbHMuZGF0YVtpIC0gMTUwXSA9IHBpeGVscy5kYXRhW2kgKyAwXTsgLy8gUkVEXHJcblx0XHQvLyAgICBwaXhlbHMuZGF0YVtpICsgNTAwXSA9IHBpeGVscy5kYXRhW2kgKyAxXTsgLy8gR1JFRU5cclxuXHRcdC8vICAgIHBpeGVscy5kYXRhW2kgLSA1NTBdID0gcGl4ZWxzLmRhdGFbaSArIDJdOyAvLyBCbHVlXHJcblx0XHQvLyAgfVxyXG5cdFx0Ly8gIHJldHVybiBwaXhlbHM7XHJcblx0XHQvL31cclxuXHRcdC8vXHJcblx0XHQvL2Z1bmN0aW9uIGdyZWVuU2NyZWVuKHBpeGVscykge1xyXG5cdFx0Ly8gIGNvbnN0IGxldmVscyA9IHt9O1xyXG5cdFx0Ly9cclxuXHRcdC8vICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucmdiIGlucHV0JykuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuXHRcdC8vICAgIGxldmVsc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG5cdFx0Ly8gIH0pO1xyXG5cdFx0Ly9cclxuXHRcdC8vICBmb3IgKGkgPSAwOyBpIDwgcGl4ZWxzLmRhdGEubGVuZ3RoOyBpID0gaSArIDQpIHtcclxuXHRcdC8vICAgIHJlZCA9IHBpeGVscy5kYXRhW2kgKyAwXTtcclxuXHRcdC8vICAgIGdyZWVuID0gcGl4ZWxzLmRhdGFbaSArIDFdO1xyXG5cdFx0Ly8gICAgYmx1ZSA9IHBpeGVscy5kYXRhW2kgKyAyXTtcclxuXHRcdC8vICAgIGFscGhhID0gcGl4ZWxzLmRhdGFbaSArIDNdO1xyXG5cdFx0Ly9cclxuXHRcdC8vICAgIGlmIChyZWQgPj0gbGV2ZWxzLnJtaW5cclxuXHRcdC8vICAgICAgJiYgZ3JlZW4gPj0gbGV2ZWxzLmdtaW5cclxuXHRcdC8vICAgICAgJiYgYmx1ZSA+PSBsZXZlbHMuYm1pblxyXG5cdFx0Ly8gICAgICAmJiByZWQgPD0gbGV2ZWxzLnJtYXhcclxuXHRcdC8vICAgICAgJiYgZ3JlZW4gPD0gbGV2ZWxzLmdtYXhcclxuXHRcdC8vICAgICAgJiYgYmx1ZSA8PSBsZXZlbHMuYm1heCkge1xyXG5cdFx0Ly8gICAgICAvLyB0YWtlIGl0IG91dCFcclxuXHRcdC8vICAgICAgcGl4ZWxzLmRhdGFbaSArIDNdID0gMDtcclxuXHRcdC8vICAgIH1cclxuXHRcdC8vICB9XHJcblx0XHQvL1xyXG5cdFx0Ly8gIHJldHVybiBwaXhlbHM7XHJcblx0XHQvL31cclxuXHRcdC8vXHJcblx0XHQvL2dldFZpZGVvKCk7XHJcblx0XHQvL1xyXG5cdFx0Ly9cdFx0dmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignY2FucGxheScsIHBhaW50VG9DYW5hdmFzKTtcclxuXHJcblxyXG5cdH1cclxufSkoKTsiXX0=
