"use strict";!function(){function e(e){function t(){navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then(function(e){n.src=window.URL.createObjectURL(e),n.play()}).catch(function(e){console.error("OH NO !!!",e)})}function a(){var t=n.videoWidth,a=n.videoHeight;return l.width=t,l.height=a,setInterval(function(){i.drawImage(n,0,0,t,a),e.pixels=i.getImageData(0,0,t,a),e.pixels=o(e.pixels),e.pixels=r(e.pixels),i.globalAlpha=e.alpha,i.putImageData(e.pixels,0,0)},30)}function o(t){for(var a=0;a<t.data.length;a+=4)t.data[a+0]=t.data[a+0]+e.color.red,t.data[a+1]=t.data[a+1]+e.color.green,t.data[a+2]=t.data[a+2]+e.color.blue;return t}function r(t){for(var a=(parseInt(e.colorSplit.red),parseInt(e.colorSplit.green),parseInt(e.colorSplit.blue),0);a<t.data.length;a+=4)t.data[a+0]=t.data[a+0+e.colorSplit.red],t.data[a+1]=t.data[a+1+e.colorSplit.green],t.data[a+2]=t.data[a+2+e.colorSplit.blue];return t}var n=document.querySelector(".player"),l=document.querySelector(".photo"),i=l.getContext("2d"),c=document.querySelector(".strip"),d=document.querySelector(".snap");e.color={red:0,green:0,blue:0},e.colorSplit={red:0,green:0,blue:0},e.alpha=1,t(),n.addEventListener("canplay",a),e.takePhoto=function(){d.currentTime=0,d.play();var e=l.toDataURL("image/jpg"),t=document.createElement("a");t.href=e,t.setAttribute("download","download"),t.innerHTML='<img src="'+e+'" alt="Take photo"/>',c.insertBefore(t,c.firstChild)}}angular.module("myApp").controller("PhotoBoothCtrl",e),e.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
